basePath: /
definitions:
  api.AddProcessesToBundleRequest:
    properties:
      processes:
        description: Array of process creation requests to add
        items:
          type: string
        type: array
    type: object
  apicommon.AcceptOrganizationInvitation:
    properties:
      code:
        description: Invitation code
        type: string
      user:
        allOf:
        - $ref: '#/definitions/apicommon.UserInfo'
        description: User information for registration or identification
    type: object
  apicommon.AddParticipantsRequest:
    properties:
      participants:
        description: List of participants to add
        items:
          $ref: '#/definitions/apicommon.OrgParticipant'
        type: array
    type: object
  apicommon.AddParticipantsResponse:
    properties:
      jobID:
        description: Job ID for tracking the addition process
        example: deadbeef
        format: hex
        type: string
      participantsNo:
        description: Number of participants added
        type: integer
    type: object
  apicommon.CreateProcessBundleRequest:
    properties:
      censusID:
        description: Census ID
        type: string
      processes:
        description: List of process IDs to include in the bundle
        items:
          type: string
        type: array
    type: object
  apicommon.CreateProcessBundleResponse:
    properties:
      root:
        description: Merkle root of the process bundle
        example: deadbeef
        format: hex
        type: string
      uri:
        description: URI of the created process bundle
        type: string
    type: object
  apicommon.CreateProcessRequest:
    properties:
      censusID:
        description: Census ID
        example: deadbeef
        format: hex
        type: string
      censusRoot:
        description: Merkle root of the published census
        example: deadbeef
        format: hex
        type: string
      censusUri:
        description: URI of the published census
        type: string
      metadata:
        description: |-
          Additional metadata for the process
          Can be any key-value pairs
        example: aGVsbG8gd29ybGQ=
        format: base64
        type: string
    type: object
  apicommon.DeleteParticipantsRequest:
    properties:
      participantIDs:
        description: List of participant ids numbers to delete
        items:
          type: string
        type: array
    type: object
  apicommon.DeleteParticipantsResponse:
    properties:
      participantsNo:
        description: Number of participants deleted
        type: integer
    type: object
  apicommon.LoginResponse:
    properties:
      expirity:
        description: Token expiration time
        type: string
      token:
        description: JWT authentication token
        type: string
    type: object
  apicommon.MessageSignature:
    properties:
      address:
        description: Blockchain address
        example: deadbeef
        format: hex
        type: string
      payload:
        description: Message payload bytes
        example: aGVsbG8gd29ybGQ=
        format: base64
        type: string
      signature:
        description: Cryptographic signature
        example: deadbeef
        format: hex
        type: string
    type: object
  apicommon.OAuthLoginResponse:
    properties:
      expirity:
        description: Token expiration time
        type: string
      registered:
        description: Whether the user had to be  registered
        type: boolean
      token:
        description: JWT authentication token
        type: string
    type: object
  apicommon.OrgParticipant:
    properties:
      email:
        description: Participant's email address
        type: string
      name:
        description: Participant's name
        type: string
      other:
        additionalProperties: {}
        description: Additional custom fields
        type: object
      participantNo:
        description: Unique participant number
        type: string
      password:
        description: Participant's password (for authentication)
        type: string
      phone:
        description: Participant's phone number
        type: string
    type: object
  apicommon.OrganizationAddresses:
    properties:
      addresses:
        description: List of organization blockchain addresses
        items:
          type: string
        type: array
    type: object
  apicommon.OrganizationCensus:
    properties:
      censusID:
        description: Unique identifier for the census
        type: string
      orgAddress:
        description: Organization address
        type: string
      type:
        allOf:
        - $ref: '#/definitions/db.CensusType'
        description: Type of census
    type: object
  apicommon.OrganizationCensuses:
    properties:
      censuses:
        description: List of organization censuses
        items:
          $ref: '#/definitions/apicommon.OrganizationCensus'
        type: array
    type: object
  apicommon.OrganizationInfo:
    properties:
      active:
        description: Whether the organization is active
        type: boolean
      address:
        description: The organization's blockchain address
        type: string
      color:
        description: The organization's brand color in hex format
        type: string
      communications:
        description: Whether the organization has enabled communications
        type: boolean
      counters:
        allOf:
        - $ref: '#/definitions/apicommon.SubscriptionUsage'
        description: Usage counters for the organization
      country:
        description: The country where the organization is based
        type: string
      createdAt:
        description: Creation timestamp in RFC3339 format
        type: string
      parent:
        allOf:
        - $ref: '#/definitions/apicommon.OrganizationInfo'
        description: Parent organization if this is a sub-organization
      size:
        description: The size category of the organization
        type: string
      subdomain:
        description: The organization's subdomain
        type: string
      subscription:
        allOf:
        - $ref: '#/definitions/apicommon.SubscriptionDetails'
        description: Subscription details for the organization
      timezone:
        description: The organization's timezone
        type: string
      type:
        description: The type of organization
        type: string
      website:
        description: The organization's website URL
        type: string
    type: object
  apicommon.OrganizationInvite:
    properties:
      email:
        description: Email address of the invitee
        type: string
      expiration:
        description: Expiration time of the invitation
        type: string
      role:
        description: Role to be assigned to the invitee
        type: string
    type: object
  apicommon.OrganizationInviteList:
    properties:
      pending:
        description: List of pending invitations
        items:
          $ref: '#/definitions/apicommon.OrganizationInvite'
        type: array
    type: object
  apicommon.OrganizationMember:
    properties:
      info:
        allOf:
        - $ref: '#/definitions/apicommon.UserInfo'
        description: User information
      role:
        description: The role of the member in the organization
        type: string
    type: object
  apicommon.OrganizationMembers:
    properties:
      members:
        description: List of organization members
        items:
          $ref: '#/definitions/apicommon.OrganizationMember'
        type: array
    type: object
  apicommon.OrganizationParticipantsResponse:
    properties:
      participants:
        items:
          $ref: '#/definitions/apicommon.OrgParticipant'
        type: array
    type: object
  apicommon.OrganizationRole:
    properties:
      name:
        description: Human-readable name of the role
        type: string
      role:
        description: Role identifier
        type: string
      writePermission:
        description: Whether this role has write permissions
        type: boolean
    type: object
  apicommon.OrganizationRoleList:
    properties:
      roles:
        description: List of organization roles
        items:
          $ref: '#/definitions/apicommon.OrganizationRole'
        type: array
    type: object
  apicommon.OrganizationSubscriptionInfo:
    properties:
      plan:
        allOf:
        - $ref: '#/definitions/apicommon.SubscriptionPlan'
        description: Subscription plan details
      subscriptionDetails:
        allOf:
        - $ref: '#/definitions/apicommon.SubscriptionDetails'
        description: Subscription details
      usage:
        allOf:
        - $ref: '#/definitions/apicommon.SubscriptionUsage'
        description: Current usage metrics
    type: object
  apicommon.OrganizationType:
    properties:
      name:
        description: Human-readable name of the type
        type: string
      type:
        description: Type identifier
        type: string
    type: object
  apicommon.OrganizationTypeList:
    properties:
      types:
        description: List of organization types
        items:
          $ref: '#/definitions/apicommon.OrganizationType'
        type: array
    type: object
  apicommon.PublishedCensusResponse:
    properties:
      censusId:
        description: Census ID
        example: deadbeef
        format: hex
        type: string
      root:
        description: Merkle root of the census
        example: deadbeef
        format: hex
        type: string
      uri:
        description: URI of the published census
        type: string
    type: object
  apicommon.SubscriptionCheckout:
    properties:
      address:
        description: Organization address
        type: string
      amount:
        description: Amount in cents
        type: integer
      locale:
        description: Locale for the checkout page
        type: string
      lookupKey:
        description: Plan lookup key
        type: integer
      returnURL:
        description: URL to return to after checkout
        type: string
    type: object
  apicommon.SubscriptionDetails:
    properties:
      active:
        description: Whether the subscription is active
        type: boolean
      email:
        description: Email associated with the subscription
        type: string
      lastPaymentDate:
        description: Date of the last payment
        type: string
      maxCensusSize:
        description: Maximum census size allowed
        type: integer
      planID:
        description: ID of the subscription plan
        type: integer
      renewalDate:
        description: Date when the subscription will renew
        type: string
      startDate:
        description: Date when the subscription started
        type: string
    type: object
  apicommon.SubscriptionFeatures:
    properties:
      anonymous:
        description: Whether anonymous voting is available
        type: boolean
      emailReminder:
        description: Whether email reminders are available
        type: boolean
      liveResults:
        description: Whether live results are available
        type: boolean
      liveStreaming:
        description: Whether live streaming is available
        type: boolean
      overwrite:
        description: Whether census overwrite is allowed
        type: boolean
      personalization:
        description: Whether UI personalization is available
        type: boolean
      smsNotification:
        description: Whether SMS notifications are available
        type: boolean
      whiteLabel:
        description: Whether white labeling is available
        type: boolean
    type: object
  apicommon.SubscriptionPlan:
    properties:
      censusSizeTiers:
        description: Census size tiers and pricing
        items:
          $ref: '#/definitions/apicommon.SubscriptionPlanTier'
        type: array
      default:
        description: Whether this is the default plan
        type: boolean
      features:
        allOf:
        - $ref: '#/definitions/apicommon.SubscriptionFeatures'
        description: Features available in this plan
      id:
        description: Unique identifier for the plan
        type: integer
      name:
        description: Human-readable name of the plan
        type: string
      organization:
        allOf:
        - $ref: '#/definitions/apicommon.SubscriptionPlanLimits'
        description: Organization limits for this plan
      startingPrice:
        description: Starting price in cents
        type: integer
      stripeID:
        description: Stripe product ID
        type: string
      stripePriceID:
        description: Stripe price ID
        type: string
      votingTypes:
        allOf:
        - $ref: '#/definitions/apicommon.SubscriptionVotingTypes'
        description: Voting types available in this plan
    type: object
  apicommon.SubscriptionPlanLimits:
    properties:
      customURL:
        description: Whether custom URLs are allowed
        type: boolean
      drafts:
        description: Maximum number of draft processes allowed
        type: integer
      maxCensus:
        description: Maximum number of census allowed
        type: integer
      maxDuration:
        description: Maximum duration of voting processes in days
        type: integer
      maxProcesses:
        description: Maximum number of voting processes allowed
        type: integer
      members:
        description: Maximum number of members allowed
        type: integer
      subOrgs:
        description: Maximum number of sub-organizations allowed
        type: integer
    type: object
  apicommon.SubscriptionPlanTier:
    properties:
      amount:
        description: Price amount in cents
        type: integer
      upTo:
        description: Maximum census size for this tier
        type: integer
    type: object
  apicommon.SubscriptionUsage:
    properties:
      members:
        description: Number of members in the organization
        type: integer
      processes:
        description: Number of voting processes created
        type: integer
      sentEmails:
        description: Number of emails sent
        type: integer
      sentSMS:
        description: Number of SMS messages sent
        type: integer
      subOrgs:
        description: Number of sub-organizations created
        type: integer
    type: object
  apicommon.SubscriptionVotingTypes:
    properties:
      approval:
        description: Whether approval voting is available
        type: boolean
      cumulative:
        description: Whether cumulative voting is available
        type: boolean
      multiple:
        description: Whether multiple choice voting is available
        type: boolean
      ranked:
        description: Whether ranked choice voting is available
        type: boolean
      single:
        description: Whether single choice voting is available
        type: boolean
      weighted:
        description: Whether weighted voting is available
        type: boolean
    type: object
  apicommon.TransactionData:
    properties:
      address:
        description: Blockchain address
        example: deadbeef
        format: hex
        type: string
      txPayload:
        description: Transaction payload bytes
        example: aGVsbG8gd29ybGQ=
        format: base64
        type: string
    type: object
  apicommon.UserInfo:
    properties:
      email:
        description: User's email address
        type: string
      firstName:
        description: User's first name
        type: string
      lastName:
        description: User's last name
        type: string
      organizations:
        description: Organizations the user belongs to
        items:
          $ref: '#/definitions/apicommon.UserOrganization'
        type: array
      password:
        description: User's password (not returned in responses)
        type: string
      verified:
        description: Whether the user's email is verified
        type: boolean
    type: object
  apicommon.UserOrganization:
    properties:
      organization:
        allOf:
        - $ref: '#/definitions/apicommon.OrganizationInfo'
        description: Organization information
      role:
        description: The role of the user in the organization
        type: string
    type: object
  apicommon.UserPasswordReset:
    properties:
      code:
        description: Password reset code
        type: string
      email:
        description: User's email address
        type: string
      newPassword:
        description: New password
        type: string
    type: object
  apicommon.UserPasswordUpdate:
    properties:
      newPassword:
        description: New password
        type: string
      oldPassword:
        description: Current password
        type: string
    type: object
  apicommon.UserVerification:
    properties:
      code:
        description: Verification code
        type: string
      email:
        description: User's email address
        type: string
      expiration:
        description: Expiration time of the verification code
        type: string
      valid:
        description: Whether the verification is valid
        type: boolean
    type: object
  db.BulkCensusMembershipStatus:
    properties:
      added:
        type: integer
      progress:
        type: integer
      total:
        type: integer
    type: object
  db.BulkOrgParticipantsStatus:
    properties:
      added:
        type: integer
      progress:
        type: integer
      total:
        type: integer
    type: object
  db.Census:
    properties:
      createdAt:
        type: string
      id:
        type: string
      orgAddress:
        type: string
      type:
        $ref: '#/definitions/db.CensusType'
      updatedAt:
        type: string
    type: object
  db.CensusType:
    enum:
    - pass
    - mail
    - sms
    - sms_or_mail
    type: string
    x-enum-varnames:
    - CensusTypePass
    - CensusTypeMail
    - CensusTypeSMS
    - CensusTypeSMSorMail
  db.Features:
    properties:
      anonymous:
        type: boolean
      emailReminder:
        type: boolean
      liveResults:
        type: boolean
      liveStreaming:
        type: boolean
      overwrite:
        type: boolean
      personalization:
        type: boolean
      smsNotification:
        type: boolean
      whiteLabel:
        type: boolean
    type: object
  db.Plan:
    properties:
      censusSizeTiers:
        items:
          $ref: '#/definitions/db.PlanTier'
        type: array
      default:
        type: boolean
      features:
        $ref: '#/definitions/db.Features'
      id:
        type: integer
      name:
        type: string
      organization:
        $ref: '#/definitions/db.PlanLimits'
      startingPrice:
        type: integer
      stripeID:
        type: string
      stripePriceID:
        type: string
      votingTypes:
        $ref: '#/definitions/db.VotingTypes'
    type: object
  db.PlanLimits:
    properties:
      customURL:
        type: boolean
      drafts:
        type: integer
      maxCensus:
        type: integer
      maxDuration:
        description: Max process duration in days
        type: integer
      maxProcesses:
        type: integer
      members:
        type: integer
      subOrgs:
        type: integer
    type: object
  db.PlanTier:
    properties:
      amount:
        type: integer
      upTo:
        type: integer
    type: object
  db.Process:
    properties:
      id:
        example: deadbeef
        format: hex
        type: string
      metadata:
        example: aGVsbG8gd29ybGQ=
        format: base64
        type: string
      orgAdress:
        type: string
      publishedCensus:
        $ref: '#/definitions/db.PublishedCensus'
    type: object
  db.ProcessesBundle:
    properties:
      census:
        allOf:
        - $ref: '#/definitions/db.Census'
        description: The census associated with this bundle
      censusRoot:
        description: The census root public key
        type: string
      id:
        description: Unique identifier for the bundle
        type: string
      orgAddress:
        description: The organization that owns this bundle
        type: string
      processes:
        description: Array of process IDs included in this bundle
        example:
        - deadbeef
        items:
          format: hex
          type: string
        type: array
    type: object
  db.PublishedCensus:
    properties:
      census:
        $ref: '#/definitions/db.Census'
      createdAt:
        type: string
      root:
        type: string
      uri:
        type: string
    type: object
  db.VotingTypes:
    properties:
      approval:
        type: boolean
      cumulative:
        type: boolean
      multiple:
        type: boolean
      ranked:
        type: boolean
      single:
        type: boolean
      weighted:
        type: boolean
    type: object
  errors.Error:
    properties:
      code:
        description: Error code
        type: integer
      err:
        description: Original error
      httpstatus:
        description: HTTP status code to return
        type: integer
      logLevel:
        description: Log level for this error (defaults to "debug")
        type: string
    type: object
  handlers.AuthResponse:
    properties:
      authToken:
        example: deadbeef
        format: hex
        type: string
      signature:
        example: deadbeef
        format: hex
        type: string
    type: object
  handlers.ConsumedAddressRequest:
    properties:
      authToken:
        example: deadbeef
        format: hex
        type: string
    type: object
  handlers.ConsumedAddressResponse:
    properties:
      at:
        type: string
      authToken:
        example: deadbeef
        format: hex
        type: string
      nullifier:
        example: deadbeef
        format: hex
        type: string
    type: object
  handlers.SignRequest:
    properties:
      authToken:
        example: deadbeef
        format: hex
        type: string
      electionId:
        example: deadbeef
        format: hex
        type: string
      payload:
        type: string
      tokenR:
        example: deadbeef
        format: hex
        type: string
    type: object
  stripe.Account:
    properties:
      business_profile:
        allOf:
        - $ref: '#/definitions/stripe.AccountBusinessProfile'
        description: Business information about the account.
      business_type:
        allOf:
        - $ref: '#/definitions/stripe.AccountBusinessType'
        description: The business type. After you create an [Account Link](https://stripe.com/api/account_links)
          or [Account Session](https://stripe.com/api/account_sessions), this property
          is only returned for accounts where [controller.requirement_collection](https://stripe.com/api/accounts/object#account_object-controller-requirement_collection)
          is `application`, which includes Custom accounts.
      capabilities:
        $ref: '#/definitions/stripe.AccountCapabilities'
      charges_enabled:
        description: Whether the account can process charges.
        type: boolean
      company:
        $ref: '#/definitions/stripe.AccountCompany'
      controller:
        $ref: '#/definitions/stripe.AccountController'
      country:
        description: The account's country.
        type: string
      created:
        description: Time at which the account was connected. Measured in seconds
          since the Unix epoch.
        type: integer
      default_currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter ISO currency code representing the default currency
          for the account. This must be a currency that [Stripe supports in the account's
          country](https://stripe.com/docs/payouts).
      deleted:
        type: boolean
      details_submitted:
        description: Whether account details have been submitted. Accounts with Stripe
          Dashboard access, which includes Standard accounts, cannot receive payouts
          before this is true. Accounts where this is false should be directed to
          [an onboarding flow](https://stripe.com/connect/onboarding) to finish submitting
          account details.
        type: boolean
      email:
        description: An email address associated with the account. It's not used for
          authentication and Stripe doesn't market to this field without explicit
          approval from the platform.
        type: string
      external_accounts:
        allOf:
        - $ref: '#/definitions/stripe.AccountExternalAccountList'
        description: External accounts (bank accounts and debit cards) currently attached
          to this account. External accounts are only returned for requests where
          `controller[is_controller]` is true.
      future_requirements:
        $ref: '#/definitions/stripe.AccountFutureRequirements'
      groups:
        allOf:
        - $ref: '#/definitions/stripe.AccountGroups'
        description: The groups associated with the account.
      id:
        description: Unique identifier for the object.
        type: string
      individual:
        allOf:
        - $ref: '#/definitions/stripe.Person'
        description: |-
          This is an object representing a person associated with a Stripe account.

          A platform cannot access a person for an account where [account.controller.requirement_collection](https://stripe.com/api/accounts/object#account_object-controller-requirement_collection) is `stripe`, which includes Standard and Express accounts, after creating an Account Link or Account Session to start Connect onboarding.

          See the [Standard onboarding](https://stripe.com/connect/standard-accounts) or [Express onboarding](https://stripe.com/connect/express-accounts) documentation for information about prefilling information and account onboarding steps. Learn more about [handling identity verification with the API](https://stripe.com/connect/handling-api-verification#person-information).
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      payouts_enabled:
        description: Whether the funds in this account can be paid out.
        type: boolean
      requirements:
        $ref: '#/definitions/stripe.AccountRequirements'
      settings:
        allOf:
        - $ref: '#/definitions/stripe.AccountSettings'
        description: Options for customizing how the account functions within Stripe.
      tos_acceptance:
        $ref: '#/definitions/stripe.AccountTOSAcceptance'
      type:
        allOf:
        - $ref: '#/definitions/stripe.AccountType'
        description: The Stripe account type. Can be `standard`, `express`, `custom`,
          or `none`.
    type: object
  stripe.AccountBusinessProfile:
    properties:
      annual_revenue:
        allOf:
        - $ref: '#/definitions/stripe.AccountBusinessProfileAnnualRevenue'
        description: The applicant's gross annual revenue for its preceding fiscal
          year.
      estimated_worker_count:
        description: An estimated upper bound of employees, contractors, vendors,
          etc. currently working for the business.
        type: integer
      mcc:
        description: '[The merchant category code for the account](https://stripe.com/connect/setting-mcc).
          MCCs are used to classify businesses based on the goods or services they
          provide.'
        type: string
      monthly_estimated_revenue:
        $ref: '#/definitions/stripe.AccountBusinessProfileMonthlyEstimatedRevenue'
      name:
        description: The customer-facing business name.
        type: string
      product_description:
        description: Internal-only description of the product sold or service provided
          by the business. It's used by Stripe for risk and underwriting purposes.
        type: string
      support_address:
        allOf:
        - $ref: '#/definitions/stripe.Address'
        description: A publicly available mailing address for sending support issues
          to.
      support_email:
        description: A publicly available email address for sending support issues
          to.
        type: string
      support_phone:
        description: A publicly available phone number to call with support issues.
        type: string
      support_url:
        description: A publicly available website for handling support issues.
        type: string
      url:
        description: The business's publicly available website.
        type: string
    type: object
  stripe.AccountBusinessProfileAnnualRevenue:
    properties:
      amount:
        description: A non-negative integer representing the amount in the [smallest
          currency unit](https://stripe.com/currencies#zero-decimal).
        type: integer
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      fiscal_year_end:
        description: The close-out date of the preceding fiscal year in ISO 8601 format.
          E.g. 2023-12-31 for the 31st of December, 2023.
        type: string
    type: object
  stripe.AccountBusinessProfileMonthlyEstimatedRevenue:
    properties:
      amount:
        description: A non-negative integer representing how much to charge in the
          [smallest currency unit](https://stripe.com/currencies#zero-decimal).
        type: integer
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    type: object
  stripe.AccountBusinessType:
    enum:
    - company
    - government_entity
    - individual
    - non_profit
    type: string
    x-enum-varnames:
    - AccountBusinessTypeCompany
    - AccountBusinessTypeGovernmentEntity
    - AccountBusinessTypeIndividual
    - AccountBusinessTypeNonProfit
  stripe.AccountCapabilities:
    properties:
      acss_debit_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the Canadian pre-authorized debits payments capability
          of the account, or whether the account can directly process Canadian pre-authorized
          debits charges.
      affirm_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the Affirm capability of the account, or whether
          the account can directly process Affirm charges.
      afterpay_clearpay_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the Afterpay Clearpay capability of the account,
          or whether the account can directly process Afterpay Clearpay charges.
      alma_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the Alma capability of the account, or whether
          the account can directly process Alma payments.
      amazon_pay_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the AmazonPay capability of the account, or whether
          the account can directly process AmazonPay payments.
      au_becs_debit_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the BECS Direct Debit (AU) payments capability
          of the account, or whether the account can directly process BECS Direct
          Debit (AU) charges.
      bacs_debit_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the Bacs Direct Debits payments capability of the
          account, or whether the account can directly process Bacs Direct Debits
          charges.
      bancontact_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the Bancontact payments capability of the account,
          or whether the account can directly process Bancontact charges.
      bank_transfer_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the customer_balance payments capability of the
          account, or whether the account can directly process customer_balance charges.
      blik_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the blik payments capability of the account, or
          whether the account can directly process blik charges.
      boleto_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the boleto payments capability of the account,
          or whether the account can directly process boleto charges.
      card_issuing:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the card issuing capability of the account, or
          whether you can use Issuing to distribute funds on cards
      card_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the card payments capability of the account, or
          whether the account can directly process credit and debit card charges.
      cartes_bancaires_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the Cartes Bancaires payments capability of the
          account, or whether the account can directly process Cartes Bancaires card
          charges in EUR currency.
      cashapp_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the Cash App Pay capability of the account, or
          whether the account can directly process Cash App Pay payments.
      eps_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the EPS payments capability of the account, or
          whether the account can directly process EPS charges.
      fpx_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the FPX payments capability of the account, or
          whether the account can directly process FPX charges.
      gb_bank_transfer_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the GB customer_balance payments (GBP currency)
          capability of the account, or whether the account can directly process GB
          customer_balance charges.
      giropay_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the giropay payments capability of the account,
          or whether the account can directly process giropay charges.
      grabpay_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the GrabPay payments capability of the account,
          or whether the account can directly process GrabPay charges.
      ideal_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the iDEAL payments capability of the account, or
          whether the account can directly process iDEAL charges.
      india_international_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the india_international_payments capability of
          the account, or whether the account can process international charges (non
          INR) in India.
      jcb_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the JCB payments capability of the account, or
          whether the account (Japan only) can directly process JCB credit card charges
          in JPY currency.
      jp_bank_transfer_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the Japanese customer_balance payments (JPY currency)
          capability of the account, or whether the account can directly process Japanese
          customer_balance charges.
      kakao_pay_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the KakaoPay capability of the account, or whether
          the account can directly process KakaoPay payments.
      klarna_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the Klarna payments capability of the account,
          or whether the account can directly process Klarna charges.
      konbini_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the konbini payments capability of the account,
          or whether the account can directly process konbini charges.
      kr_card_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the KrCard capability of the account, or whether
          the account can directly process KrCard payments.
      legacy_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the legacy payments capability of the account.
      link_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the link_payments capability of the account, or
          whether the account can directly process Link charges.
      mobilepay_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the MobilePay capability of the account, or whether
          the account can directly process MobilePay charges.
      multibanco_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the Multibanco payments capability of the account,
          or whether the account can directly process Multibanco charges.
      mx_bank_transfer_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the Mexican customer_balance payments (MXN currency)
          capability of the account, or whether the account can directly process Mexican
          customer_balance charges.
      naver_pay_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the NaverPay capability of the account, or whether
          the account can directly process NaverPay payments.
      oxxo_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the OXXO payments capability of the account, or
          whether the account can directly process OXXO charges.
      p24_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the P24 payments capability of the account, or
          whether the account can directly process P24 charges.
      payco_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the Payco capability of the account, or whether
          the account can directly process Payco payments.
      paynow_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the paynow payments capability of the account,
          or whether the account can directly process paynow charges.
      promptpay_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the promptpay payments capability of the account,
          or whether the account can directly process promptpay charges.
      revolut_pay_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the RevolutPay capability of the account, or whether
          the account can directly process RevolutPay payments.
      samsung_pay_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the SamsungPay capability of the account, or whether
          the account can directly process SamsungPay payments.
      sepa_bank_transfer_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the SEPA customer_balance payments (EUR currency)
          capability of the account, or whether the account can directly process SEPA
          customer_balance charges.
      sepa_debit_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the SEPA Direct Debits payments capability of the
          account, or whether the account can directly process SEPA Direct Debits
          charges.
      sofort_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the Sofort payments capability of the account,
          or whether the account can directly process Sofort charges.
      swish_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the Swish capability of the account, or whether
          the account can directly process Swish payments.
      tax_reporting_us_1099_k:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the tax reporting 1099-K (US) capability of the
          account.
      tax_reporting_us_1099_misc:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the tax reporting 1099-MISC (US) capability of
          the account.
      transfers:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the transfers capability of the account, or whether
          your platform can transfer funds to the account.
      treasury:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the banking capability, or whether the account
          can have bank accounts.
      twint_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the TWINT capability of the account, or whether
          the account can directly process TWINT charges.
      us_bank_account_ach_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the US bank account ACH payments capability of
          the account, or whether the account can directly process US bank account
          charges.
      us_bank_transfer_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the US customer_balance payments (USD currency)
          capability of the account, or whether the account can directly process US
          customer_balance charges.
      zip_payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountCapabilityStatus'
        description: The status of the Zip capability of the account, or whether the
          account can directly process Zip charges.
    type: object
  stripe.AccountCapabilityStatus:
    enum:
    - active
    - inactive
    - pending
    type: string
    x-enum-varnames:
    - AccountCapabilityStatusActive
    - AccountCapabilityStatusInactive
    - AccountCapabilityStatusPending
  stripe.AccountCompany:
    properties:
      address:
        $ref: '#/definitions/stripe.Address'
      address_kana:
        allOf:
        - $ref: '#/definitions/stripe.AccountCompanyAddressKana'
        description: The Kana variation of the company's primary address (Japan only).
      address_kanji:
        allOf:
        - $ref: '#/definitions/stripe.AccountCompanyAddressKanji'
        description: The Kanji variation of the company's primary address (Japan only).
      directors_provided:
        description: Whether the company's directors have been provided. This Boolean
          will be `true` if you've manually indicated that all directors are provided
          via [the `directors_provided` parameter](https://stripe.com/docs/api/accounts/update#update_account-company-directors_provided).
        type: boolean
      executives_provided:
        description: Whether the company's executives have been provided. This Boolean
          will be `true` if you've manually indicated that all executives are provided
          via [the `executives_provided` parameter](https://stripe.com/docs/api/accounts/update#update_account-company-executives_provided),
          or if Stripe determined that sufficient executives were provided.
        type: boolean
      export_license_id:
        description: The export license ID number of the company, also referred as
          Import Export Code (India only).
        type: string
      export_purpose_code:
        description: The purpose code to use for export transactions (India only).
        type: string
      name:
        description: The company's legal name.
        type: string
      name_kana:
        description: The Kana variation of the company's legal name (Japan only).
        type: string
      name_kanji:
        description: The Kanji variation of the company's legal name (Japan only).
        type: string
      owners_provided:
        description: Whether the company's owners have been provided. This Boolean
          will be `true` if you've manually indicated that all owners are provided
          via [the `owners_provided` parameter](https://stripe.com/docs/api/accounts/update#update_account-company-owners_provided),
          or if Stripe determined that sufficient owners were provided. Stripe determines
          ownership requirements using both the number of owners provided and their
          total percent ownership (calculated by adding the `percent_ownership` of
          each owner together).
        type: boolean
      ownership_declaration:
        allOf:
        - $ref: '#/definitions/stripe.AccountCompanyOwnershipDeclaration'
        description: This hash is used to attest that the beneficial owner information
          provided to Stripe is both current and correct.
      phone:
        description: The company's phone number (used for verification).
        type: string
      structure:
        allOf:
        - $ref: '#/definitions/stripe.AccountCompanyStructure'
        description: The category identifying the legal structure of the company or
          legal entity. See [Business structure](https://stripe.com/docs/connect/identity-verification#business-structure)
          for more details.
      tax_id_provided:
        description: Whether the company's business ID number was provided.
        type: boolean
      tax_id_registrar:
        description: The jurisdiction in which the `tax_id` is registered (Germany-based
          companies only).
        type: string
      vat_id_provided:
        description: Whether the company's business VAT number was provided.
        type: boolean
      verification:
        allOf:
        - $ref: '#/definitions/stripe.AccountCompanyVerification'
        description: Information on the verification state of the company.
    type: object
  stripe.AccountCompanyAddressKana:
    properties:
      city:
        description: City/Ward.
        type: string
      country:
        description: Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
        type: string
      line1:
        description: Block/Building number.
        type: string
      line2:
        description: Building details.
        type: string
      postal_code:
        description: ZIP or postal code.
        type: string
      state:
        description: Prefecture.
        type: string
      town:
        description: Town/cho-me.
        type: string
    type: object
  stripe.AccountCompanyAddressKanji:
    properties:
      city:
        description: City/Ward.
        type: string
      country:
        description: Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
        type: string
      line1:
        description: Block/Building number.
        type: string
      line2:
        description: Building details.
        type: string
      postal_code:
        description: ZIP or postal code.
        type: string
      state:
        description: Prefecture.
        type: string
      town:
        description: Town/cho-me.
        type: string
    type: object
  stripe.AccountCompanyOwnershipDeclaration:
    properties:
      date:
        description: The Unix timestamp marking when the beneficial owner attestation
          was made.
        type: integer
      ip:
        description: The IP address from which the beneficial owner attestation was
          made.
        type: string
      user_agent:
        description: The user-agent string from the browser where the beneficial owner
          attestation was made.
        type: string
    type: object
  stripe.AccountCompanyStructure:
    enum:
    - free_zone_establishment
    - free_zone_llc
    - government_instrumentality
    - governmental_unit
    - incorporated_non_profit
    - incorporated_partnership
    - limited_liability_partnership
    - llc
    - multi_member_llc
    - private_company
    - private_corporation
    - private_partnership
    - public_company
    - public_corporation
    - public_partnership
    - registered_charity
    - single_member_llc
    - sole_establishment
    - sole_proprietorship
    - tax_exempt_government_instrumentality
    - unincorporated_association
    - unincorporated_non_profit
    - unincorporated_partnership
    type: string
    x-enum-varnames:
    - AccountCompanyStructureFreeZoneEstablishment
    - AccountCompanyStructureFreeZoneLLC
    - AccountCompanyStructureGovernmentInstrumentality
    - AccountCompanyStructureGovernmentalUnit
    - AccountCompanyStructureIncorporatedNonProfit
    - AccountCompanyStructureIncorporatedPartnership
    - AccountCompanyStructureLimitedLiabilityPartnership
    - AccountCompanyStructureLLC
    - AccountCompanyStructureMultiMemberLLC
    - AccountCompanyStructurePrivateCompany
    - AccountCompanyStructurePrivateCorporation
    - AccountCompanyStructurePrivatePartnership
    - AccountCompanyStructurePublicCompany
    - AccountCompanyStructurePublicCorporation
    - AccountCompanyStructurePublicPartnership
    - AccountCompanyStructureRegisteredCharity
    - AccountCompanyStructureSingleMemberLLC
    - AccountCompanyStructureSoleEstablishment
    - AccountCompanyStructureSoleProprietorship
    - AccountCompanyStructureTaxExemptGovernmentInstrumentality
    - AccountCompanyStructureUnincorporatedAssociation
    - AccountCompanyStructureUnincorporatedNonProfit
    - AccountCompanyStructureUnincorporatedPartnership
  stripe.AccountCompanyVerification:
    properties:
      document:
        $ref: '#/definitions/stripe.AccountCompanyVerificationDocument'
    type: object
  stripe.AccountCompanyVerificationDocument:
    properties:
      back:
        allOf:
        - $ref: '#/definitions/stripe.File'
        description: The back of a document returned by a [file upload](https://stripe.com/docs/api#create_file)
          with a `purpose` value of `additional_verification`.
      details:
        description: A user-displayable string describing the verification state of
          this document.
        type: string
      details_code:
        allOf:
        - $ref: '#/definitions/stripe.AccountCompanyVerificationDocumentDetailsCode'
        description: One of `document_corrupt`, `document_expired`, `document_failed_copy`,
          `document_failed_greyscale`, `document_failed_other`, `document_failed_test_mode`,
          `document_fraudulent`, `document_incomplete`, `document_invalid`, `document_manipulated`,
          `document_not_readable`, `document_not_uploaded`, `document_type_not_supported`,
          or `document_too_large`. A machine-readable code specifying the verification
          state for this document.
      front:
        allOf:
        - $ref: '#/definitions/stripe.File'
        description: The front of a document returned by a [file upload](https://stripe.com/docs/api#create_file)
          with a `purpose` value of `additional_verification`.
    type: object
  stripe.AccountCompanyVerificationDocumentDetailsCode:
    enum:
    - document_corrupt
    - document_expired
    - document_failed_copy
    - document_failed_other
    - document_failed_test_mode
    - document_failed_greyscale
    - document_fraudulent
    - document_invalid
    - document_incomplete
    - document_manipulated
    - document_not_readable
    - document_not_uploaded
    - document_too_large
    - document_type_not_supported
    type: string
    x-enum-varnames:
    - AccountCompanyVerificationDocumentDetailsCodeDocumentCorrupt
    - AccountCompanyVerificationDocumentDetailsCodeDocumentExpired
    - AccountCompanyVerificationDocumentDetailsCodeDocumentFailedCopy
    - AccountCompanyVerificationDocumentDetailsCodeDocumentFailedOther
    - AccountCompanyVerificationDocumentDetailsCodeDocumentFailedTestMode
    - AccountCompanyVerificationDocumentDetailsCodeDocumentFailedGreyscale
    - AccountCompanyVerificationDocumentDetailsCodeDocumentFraudulent
    - AccountCompanyVerificationDocumentDetailsCodeDocumentInvalid
    - AccountCompanyVerificationDocumentDetailsCodeDocumentIncomplete
    - AccountCompanyVerificationDocumentDetailsCodeDocumentManipulated
    - AccountCompanyVerificationDocumentDetailsCodeDocumentNotReadable
    - AccountCompanyVerificationDocumentDetailsCodeDocumentNotUploaded
    - AccountCompanyVerificationDocumentDetailsCodeDocumentTooLarge
    - AccountCompanyVerificationDocumentDetailsCodeDocumentTypeNotSupported
  stripe.AccountController:
    properties:
      fees:
        $ref: '#/definitions/stripe.AccountControllerFees'
      is_controller:
        description: '`true` if the Connect application retrieving the resource controls
          the account and can therefore exercise [platform controls](https://stripe.com/docs/connect/platform-controls-for-standard-accounts).
          Otherwise, this field is null.'
        type: boolean
      losses:
        $ref: '#/definitions/stripe.AccountControllerLosses'
      requirement_collection:
        allOf:
        - $ref: '#/definitions/stripe.AccountControllerRequirementCollection'
        description: A value indicating responsibility for collecting requirements
          on this account. Only returned when the Connect application retrieving the
          resource controls the account.
      stripe_dashboard:
        $ref: '#/definitions/stripe.AccountControllerStripeDashboard'
      type:
        allOf:
        - $ref: '#/definitions/stripe.AccountControllerType'
        description: The controller type. Can be `application`, if a Connect application
          controls the account, or `account`, if the account controls itself.
    type: object
  stripe.AccountControllerFees:
    properties:
      payer:
        allOf:
        - $ref: '#/definitions/stripe.AccountControllerFeesPayer'
        description: A value indicating the responsible payer of a bundle of Stripe
          fees for pricing-control eligible products on this account. Learn more about
          [fee behavior on connected accounts](https://docs.stripe.com/connect/direct-charges-fee-payer-behavior).
    type: object
  stripe.AccountControllerFeesPayer:
    enum:
    - account
    - application
    - application_custom
    - application_express
    type: string
    x-enum-varnames:
    - AccountControllerFeesPayerAccount
    - AccountControllerFeesPayerApplication
    - AccountControllerFeesPayerApplicationCustom
    - AccountControllerFeesPayerApplicationExpress
  stripe.AccountControllerLosses:
    properties:
      payments:
        allOf:
        - $ref: '#/definitions/stripe.AccountControllerLossesPayments'
        description: A value indicating who is liable when this account can't pay
          back negative balances from payments.
    type: object
  stripe.AccountControllerLossesPayments:
    enum:
    - application
    - stripe
    type: string
    x-enum-varnames:
    - AccountControllerLossesPaymentsApplication
    - AccountControllerLossesPaymentsStripe
  stripe.AccountControllerRequirementCollection:
    enum:
    - application
    - stripe
    type: string
    x-enum-varnames:
    - AccountControllerRequirementCollectionApplication
    - AccountControllerRequirementCollectionStripe
  stripe.AccountControllerStripeDashboard:
    properties:
      type:
        allOf:
        - $ref: '#/definitions/stripe.AccountControllerStripeDashboardType'
        description: A value indicating the Stripe dashboard this account has access
          to independent of the Connect application.
    type: object
  stripe.AccountControllerStripeDashboardType:
    enum:
    - express
    - full
    - none
    type: string
    x-enum-varnames:
    - AccountControllerStripeDashboardTypeExpress
    - AccountControllerStripeDashboardTypeFull
    - AccountControllerStripeDashboardTypeNone
  stripe.AccountControllerType:
    enum:
    - account
    - application
    type: string
    x-enum-varnames:
    - AccountControllerTypeAccount
    - AccountControllerTypeApplication
  stripe.AccountExternalAccount:
    properties:
      id:
        type: string
      object:
        $ref: '#/definitions/stripe.AccountExternalAccountType'
    type: object
  stripe.AccountExternalAccountList:
    properties:
      data:
        description: |-
          Values contains any external accounts (bank accounts and/or cards)
          currently attached to this account.
        items:
          $ref: '#/definitions/stripe.AccountExternalAccount'
        type: array
      has_more:
        type: boolean
      total_count:
        description: |-
          TotalCount is the total number of objects in the collection (beyond just
          on the current page). This is not returned in most list calls.

          Deprecated: TotalCount is only included in some legacy situations and
          not generally available anymore.
        type: integer
      url:
        type: string
    type: object
  stripe.AccountExternalAccountType:
    enum:
    - bank_account
    - card
    type: string
    x-enum-varnames:
    - AccountExternalAccountTypeBankAccount
    - AccountExternalAccountTypeCard
  stripe.AccountFutureRequirements:
    properties:
      alternatives:
        description: Fields that are due and can be satisfied by providing the corresponding
          alternative fields instead.
        items:
          $ref: '#/definitions/stripe.AccountFutureRequirementsAlternative'
        type: array
      current_deadline:
        description: Date on which `future_requirements` merges with the main `requirements`
          hash and `future_requirements` becomes empty. After the transition, `currently_due`
          requirements may immediately become `past_due`, but the account may also
          be given a grace period depending on its enablement state prior to transitioning.
        type: integer
      currently_due:
        description: Fields that need to be collected to keep the account enabled.
          If not collected by `future_requirements[current_deadline]`, these fields
          will transition to the main `requirements` hash.
        items:
          type: string
        type: array
      disabled_reason:
        description: This is typed as a string for consistency with `requirements.disabled_reason`.
        type: string
      errors:
        description: Fields that are `currently_due` and need to be collected again
          because validation or verification failed.
        items:
          $ref: '#/definitions/stripe.AccountFutureRequirementsError'
        type: array
      eventually_due:
        description: Fields that need to be collected assuming all volume thresholds
          are reached. As they become required, they appear in `currently_due` as
          well.
        items:
          type: string
        type: array
      past_due:
        description: Fields that weren't collected by `requirements.current_deadline`.
          These fields need to be collected to enable the capability on the account.
          New fields will never appear here; `future_requirements.past_due` will always
          be a subset of `requirements.past_due`.
        items:
          type: string
        type: array
      pending_verification:
        description: Fields that might become required depending on the results of
          verification or review. It's an empty array unless an asynchronous verification
          is pending. If verification fails, these fields move to `eventually_due`
          or `currently_due`. Fields might appear in `eventually_due` or `currently_due`
          and in `pending_verification` if verification fails but another verification
          is still pending.
        items:
          type: string
        type: array
    type: object
  stripe.AccountFutureRequirementsAlternative:
    properties:
      alternative_fields_due:
        description: Fields that can be provided to satisfy all fields in `original_fields_due`.
        items:
          type: string
        type: array
      original_fields_due:
        description: Fields that are due and can be satisfied by providing all fields
          in `alternative_fields_due`.
        items:
          type: string
        type: array
    type: object
  stripe.AccountFutureRequirementsError:
    properties:
      code:
        description: The code for the type of error.
        type: string
      reason:
        description: An informative message that indicates the error type and provides
          additional details about the error.
        type: string
      requirement:
        description: The specific user onboarding requirement field (in the requirements
          hash) that needs to be resolved.
        type: string
    type: object
  stripe.AccountGroups:
    properties:
      payments_pricing:
        description: The group the account is in to determine their payments pricing,
          and null if the account is on customized pricing. [See the Platform pricing
          tool documentation](https://stripe.com/docs/connect/platform-pricing-tools)
          for details.
        type: string
    type: object
  stripe.AccountRequirements:
    properties:
      alternatives:
        description: Fields that are due and can be satisfied by providing the corresponding
          alternative fields instead.
        items:
          $ref: '#/definitions/stripe.AccountRequirementsAlternative'
        type: array
      current_deadline:
        description: Date by which the fields in `currently_due` must be collected
          to keep the account enabled. These fields may disable the account sooner
          if the next threshold is reached before they are collected.
        type: integer
      currently_due:
        description: Fields that need to be collected to keep the account enabled.
          If not collected by `current_deadline`, these fields appear in `past_due`
          as well, and the account is disabled.
        items:
          type: string
        type: array
      disabled_reason:
        allOf:
        - $ref: '#/definitions/stripe.AccountRequirementsDisabledReason'
        description: If the account is disabled, this string describes why. [Learn
          more about handling verification issues](https://stripe.com/docs/connect/handling-api-verification).
          Can be `action_required.requested_capabilities`, `requirements.past_due`,
          `requirements.pending_verification`, `listed`, `platform_paused`, `rejected.fraud`,
          `rejected.incomplete_verification`, `rejected.listed`, `rejected.other`,
          `rejected.terms_of_service`, `under_review`, or `other`.
      errors:
        description: Fields that are `currently_due` and need to be collected again
          because validation or verification failed.
        items:
          $ref: '#/definitions/stripe.AccountRequirementsError'
        type: array
      eventually_due:
        description: Fields that need to be collected assuming all volume thresholds
          are reached. As they become required, they appear in `currently_due` as
          well, and `current_deadline` becomes set.
        items:
          type: string
        type: array
      past_due:
        description: Fields that weren't collected by `current_deadline`. These fields
          need to be collected to enable the account.
        items:
          type: string
        type: array
      pending_verification:
        description: Fields that might become required depending on the results of
          verification or review. It's an empty array unless an asynchronous verification
          is pending. If verification fails, these fields move to `eventually_due`,
          `currently_due`, or `past_due`. Fields might appear in `eventually_due`,
          `currently_due`, or `past_due` and in `pending_verification` if verification
          fails but another verification is still pending.
        items:
          type: string
        type: array
    type: object
  stripe.AccountRequirementsAlternative:
    properties:
      alternative_fields_due:
        description: Fields that can be provided to satisfy all fields in `original_fields_due`.
        items:
          type: string
        type: array
      original_fields_due:
        description: Fields that are due and can be satisfied by providing all fields
          in `alternative_fields_due`.
        items:
          type: string
        type: array
    type: object
  stripe.AccountRequirementsDisabledReason:
    enum:
    - fields_needed
    - listed
    - other
    - rejected.fraud
    - rejected.listed
    - rejected.other
    - rejected.terms_of_service
    - under_review
    type: string
    x-enum-varnames:
    - AccountRequirementsDisabledReasonFieldsNeeded
    - AccountRequirementsDisabledReasonListed
    - AccountRequirementsDisabledReasonOther
    - AccountRequirementsDisabledReasonRejectedFraud
    - AccountRequirementsDisabledReasonRejectedListed
    - AccountRequirementsDisabledReasonRejectedOther
    - AccountRequirementsDisabledReasonRejectedTermsOfService
    - AccountRequirementsDisabledReasonUnderReview
  stripe.AccountRequirementsError:
    properties:
      code:
        description: The code for the type of error.
        type: string
      reason:
        description: An informative message that indicates the error type and provides
          additional details about the error.
        type: string
      requirement:
        description: The specific user onboarding requirement field (in the requirements
          hash) that needs to be resolved.
        type: string
    type: object
  stripe.AccountSettings:
    properties:
      bacs_debit_payments:
        $ref: '#/definitions/stripe.AccountSettingsBACSDebitPayments'
      branding:
        $ref: '#/definitions/stripe.AccountSettingsBranding'
      card_issuing:
        $ref: '#/definitions/stripe.AccountSettingsCardIssuing'
      card_payments:
        $ref: '#/definitions/stripe.AccountSettingsCardPayments'
      dashboard:
        $ref: '#/definitions/stripe.AccountSettingsDashboard'
      invoices:
        $ref: '#/definitions/stripe.AccountSettingsInvoices'
      payments:
        $ref: '#/definitions/stripe.AccountSettingsPayments'
      payouts:
        $ref: '#/definitions/stripe.AccountSettingsPayouts'
      sepa_debit_payments:
        $ref: '#/definitions/stripe.AccountSettingsSEPADebitPayments'
      treasury:
        $ref: '#/definitions/stripe.AccountSettingsTreasury'
    type: object
  stripe.AccountSettingsBACSDebitPayments:
    properties:
      display_name:
        description: The Bacs Direct Debit display name for this account. For payments
          made with Bacs Direct Debit, this name appears on the mandate as the statement
          descriptor. Mobile banking apps display it as the name of the business.
          To use custom branding, set the Bacs Direct Debit Display Name during or
          right after creation. Custom branding incurs an additional monthly fee for
          the platform. The fee appears 5 business days after requesting Bacs. If
          you don't set the display name before requesting Bacs capability, it's automatically
          set as "Stripe" and the account is onboarded to Stripe branding, which is
          free.
        type: string
      service_user_number:
        description: The Bacs Direct Debit Service user number for this account. For
          payments made with Bacs Direct Debit, this number is a unique identifier
          of the account with our banking partners.
        type: string
    type: object
  stripe.AccountSettingsBranding:
    properties:
      icon:
        allOf:
        - $ref: '#/definitions/stripe.File'
        description: (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          An icon for the account. Must be square and at least 128px x 128px.
      logo:
        allOf:
        - $ref: '#/definitions/stripe.File'
        description: (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          A logo for the account that will be used in Checkout instead of the icon
          and without the account's name next to it if provided. Must be at least
          128px x 128px.
      primary_color:
        description: A CSS hex color value representing the primary branding color
          for this account
        type: string
      secondary_color:
        description: A CSS hex color value representing the secondary branding color
          for this account
        type: string
    type: object
  stripe.AccountSettingsCardIssuing:
    properties:
      tos_acceptance:
        $ref: '#/definitions/stripe.AccountSettingsCardIssuingTOSAcceptance'
    type: object
  stripe.AccountSettingsCardIssuingTOSAcceptance:
    properties:
      date:
        description: The Unix timestamp marking when the account representative accepted
          the service agreement.
        type: integer
      ip:
        description: The IP address from which the account representative accepted
          the service agreement.
        type: string
      user_agent:
        description: The user agent of the browser from which the account representative
          accepted the service agreement.
        type: string
    type: object
  stripe.AccountSettingsCardPayments:
    properties:
      decline_on:
        $ref: '#/definitions/stripe.AccountSettingsCardPaymentsDeclineOn'
      statement_descriptor_prefix:
        description: The default text that appears on credit card statements when
          a charge is made. This field prefixes any dynamic `statement_descriptor`
          specified on the charge. `statement_descriptor_prefix` is useful for maximizing
          descriptor space for the dynamic portion.
        type: string
      statement_descriptor_prefix_kana:
        description: The Kana variation of the default text that appears on credit
          card statements when a charge is made (Japan only). This field prefixes
          any dynamic `statement_descriptor_suffix_kana` specified on the charge.
          `statement_descriptor_prefix_kana` is useful for maximizing descriptor space
          for the dynamic portion.
        type: string
      statement_descriptor_prefix_kanji:
        description: The Kanji variation of the default text that appears on credit
          card statements when a charge is made (Japan only). This field prefixes
          any dynamic `statement_descriptor_suffix_kanji` specified on the charge.
          `statement_descriptor_prefix_kanji` is useful for maximizing descriptor
          space for the dynamic portion.
        type: string
    type: object
  stripe.AccountSettingsCardPaymentsDeclineOn:
    properties:
      avs_failure:
        description: Whether Stripe automatically declines charges with an incorrect
          ZIP or postal code. This setting only applies when a ZIP or postal code
          is provided and they fail bank verification.
        type: boolean
      cvc_failure:
        description: Whether Stripe automatically declines charges with an incorrect
          CVC. This setting only applies when a CVC is provided and it fails bank
          verification.
        type: boolean
    type: object
  stripe.AccountSettingsDashboard:
    properties:
      display_name:
        description: The display name for this account. This is used on the Stripe
          Dashboard to differentiate between accounts.
        type: string
      timezone:
        description: The timezone used in the Stripe Dashboard for this account. A
          list of possible time zone values is maintained at the [IANA Time Zone Database](http://www.iana.org/time-zones).
        type: string
    type: object
  stripe.AccountSettingsInvoices:
    properties:
      default_account_tax_ids:
        description: The list of default Account Tax IDs to automatically include
          on invoices. Account Tax IDs get added when an invoice is finalized.
        items:
          $ref: '#/definitions/stripe.TaxID'
        type: array
    type: object
  stripe.AccountSettingsPayments:
    properties:
      statement_descriptor:
        description: The default text that appears on credit card statements when
          a charge is made. This field prefixes any dynamic `statement_descriptor`
          specified on the charge.
        type: string
      statement_descriptor_kana:
        description: The Kana variation of `statement_descriptor` used for charges
          in Japan. Japanese statement descriptors have [special requirements](https://docs.stripe.com/get-started/account/statement-descriptors#set-japanese-statement-descriptors).
        type: string
      statement_descriptor_kanji:
        description: The Kanji variation of `statement_descriptor` used for charges
          in Japan. Japanese statement descriptors have [special requirements](https://docs.stripe.com/get-started/account/statement-descriptors#set-japanese-statement-descriptors).
        type: string
      statement_descriptor_prefix_kana:
        description: The Kana variation of `statement_descriptor_prefix` used for
          card charges in Japan. Japanese statement descriptors have [special requirements](https://docs.stripe.com/get-started/account/statement-descriptors#set-japanese-statement-descriptors).
        type: string
      statement_descriptor_prefix_kanji:
        description: The Kanji variation of `statement_descriptor_prefix` used for
          card charges in Japan. Japanese statement descriptors have [special requirements](https://docs.stripe.com/get-started/account/statement-descriptors#set-japanese-statement-descriptors).
        type: string
    type: object
  stripe.AccountSettingsPayouts:
    properties:
      debit_negative_balances:
        description: A Boolean indicating if Stripe should try to reclaim negative
          balances from an attached bank account. See [Understanding Connect account
          balances](https://stripe.com/connect/account-balances) for details. The
          default value is `false` when [controller.requirement_collection](https://stripe.com/api/accounts/object#account_object-controller-requirement_collection)
          is `application`, which includes Custom accounts, otherwise `true`.
        type: boolean
      schedule:
        $ref: '#/definitions/stripe.AccountSettingsPayoutsSchedule'
      statement_descriptor:
        description: The text that appears on the bank account statement for payouts.
          If not set, this defaults to the platform's bank descriptor as set in the
          Dashboard.
        type: string
    type: object
  stripe.AccountSettingsPayoutsSchedule:
    properties:
      delay_days:
        description: The number of days charges for the account will be held before
          being paid out.
        type: integer
      interval:
        allOf:
        - $ref: '#/definitions/stripe.AccountSettingsPayoutsScheduleInterval'
        description: How frequently funds will be paid out. One of `manual` (payouts
          only created via API call), `daily`, `weekly`, or `monthly`.
      monthly_anchor:
        description: The day of the month funds will be paid out. Only shown if `interval`
          is monthly. Payouts scheduled between the 29th and 31st of the month are
          sent on the last day of shorter months.
        type: integer
      weekly_anchor:
        description: The day of the week funds will be paid out, of the style 'monday',
          'tuesday', etc. Only shown if `interval` is weekly.
        type: string
    type: object
  stripe.AccountSettingsPayoutsScheduleInterval:
    enum:
    - daily
    - manual
    - monthly
    - weekly
    type: string
    x-enum-varnames:
    - AccountSettingsPayoutsScheduleIntervalDaily
    - AccountSettingsPayoutsScheduleIntervalManual
    - AccountSettingsPayoutsScheduleIntervalMonthly
    - AccountSettingsPayoutsScheduleIntervalWeekly
  stripe.AccountSettingsSEPADebitPayments:
    properties:
      creditor_id:
        description: SEPA creditor identifier that identifies the company making the
          payment.
        type: string
    type: object
  stripe.AccountSettingsTreasury:
    properties:
      tos_acceptance:
        $ref: '#/definitions/stripe.AccountSettingsTreasuryTOSAcceptance'
    type: object
  stripe.AccountSettingsTreasuryTOSAcceptance:
    properties:
      date:
        description: The Unix timestamp marking when the account representative accepted
          the service agreement.
        type: integer
      ip:
        description: The IP address from which the account representative accepted
          the service agreement.
        type: string
      user_agent:
        description: The user agent of the browser from which the account representative
          accepted the service agreement.
        type: string
    type: object
  stripe.AccountTOSAcceptance:
    properties:
      date:
        description: The Unix timestamp marking when the account representative accepted
          their service agreement
        type: integer
      ip:
        description: The IP address from which the account representative accepted
          their service agreement
        type: string
      service_agreement:
        allOf:
        - $ref: '#/definitions/stripe.AccountTOSAcceptanceServiceAgreement'
        description: The user's service agreement type
      user_agent:
        description: The user agent of the browser from which the account representative
          accepted their service agreement
        type: string
    type: object
  stripe.AccountTOSAcceptanceServiceAgreement:
    enum:
    - full
    - recipient
    type: string
    x-enum-varnames:
    - AccountTOSAcceptanceServiceAgreementFull
    - AccountTOSAcceptanceServiceAgreementRecipient
  stripe.AccountType:
    enum:
    - custom
    - express
    - none
    - standard
    type: string
    x-enum-varnames:
    - AccountTypeCustom
    - AccountTypeExpress
    - AccountTypeNone
    - AccountTypeStandard
  stripe.Address:
    properties:
      city:
        type: string
      country:
        type: string
      line1:
        type: string
      line2:
        type: string
      postal_code:
        type: string
      state:
        type: string
    type: object
  stripe.Application:
    properties:
      deleted:
        type: boolean
      id:
        description: Unique identifier for the object.
        type: string
      name:
        description: The name of the application.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
    type: object
  stripe.ApplicationFee:
    properties:
      account:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: ID of the Stripe account this fee was taken from.
      amount:
        description: Amount earned, in cents (or local equivalent).
        type: integer
      amount_refunded:
        description: Amount in cents (or local equivalent) refunded (can be less than
          the amount attribute on the fee if a partial refund was issued)
        type: integer
      application:
        allOf:
        - $ref: '#/definitions/stripe.Application'
        description: ID of the Connect application that earned the fee.
      balance_transaction:
        allOf:
        - $ref: '#/definitions/stripe.BalanceTransaction'
        description: Balance transaction that describes the impact of this collected
          application fee on your account balance (not including refunds).
      charge:
        allOf:
        - $ref: '#/definitions/stripe.Charge'
        description: ID of the charge that the application fee was taken from.
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      fee_source:
        allOf:
        - $ref: '#/definitions/stripe.ApplicationFeeFeeSource'
        description: Polymorphic source of the application fee. Includes the ID of
          the object the application fee was created from.
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      originating_transaction:
        allOf:
        - $ref: '#/definitions/stripe.Charge'
        description: ID of the corresponding charge on the platform account, if this
          fee was the result of a charge using the `destination` parameter.
      refunded:
        description: Whether the fee has been fully refunded. If the fee is only partially
          refunded, this attribute will still be false.
        type: boolean
      refunds:
        allOf:
        - $ref: '#/definitions/stripe.FeeRefundList'
        description: A list of refunds that have been applied to the fee.
    type: object
  stripe.ApplicationFeeFeeSource:
    properties:
      charge:
        description: Charge ID that created this application fee.
        type: string
      payout:
        description: Payout ID that created this application fee.
        type: string
      type:
        allOf:
        - $ref: '#/definitions/stripe.ApplicationFeeFeeSourceType'
        description: Type of object that created the application fee, either `charge`
          or `payout`.
    type: object
  stripe.ApplicationFeeFeeSourceType:
    enum:
    - charge
    - payout
    type: string
    x-enum-varnames:
    - ApplicationFeeFeeSourceTypeCharge
    - ApplicationFeeFeeSourceTypePayout
  stripe.BalanceTransaction:
    properties:
      amount:
        description: Gross amount of this transaction (in cents (or local equivalent)).
          A positive value represents funds charged to another party, and a negative
          value represents funds sent to another party.
        type: integer
      available_on:
        description: The date that the transaction's net funds become available in
          the Stripe balance.
        type: integer
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      exchange_rate:
        description: If applicable, this transaction uses an exchange rate. If money
          converts from currency A to currency B, then the `amount` in currency A,
          multipled by the `exchange_rate`, equals the `amount` in currency B. For
          example, if you charge a customer 10.00 EUR, the PaymentIntent's `amount`
          is `1000` and `currency` is `eur`. If this converts to 12.34 USD in your
          Stripe account, the BalanceTransaction's `amount` is `1234`, its `currency`
          is `usd`, and the `exchange_rate` is `1.234`.
        type: number
      fee:
        description: Fees (in cents (or local equivalent)) paid for this transaction.
          Represented as a positive integer when assessed.
        type: integer
      fee_details:
        description: Detailed breakdown of fees (in cents (or local equivalent)) paid
          for this transaction.
        items:
          $ref: '#/definitions/stripe.BalanceTransactionFeeDetail'
        type: array
      id:
        description: Unique identifier for the object.
        type: string
      net:
        description: Net impact to a Stripe balance (in cents (or local equivalent)).
          A positive value represents incrementing a Stripe balance, and a negative
          value decrementing a Stripe balance. You can calculate the net impact of
          a transaction on a balance by `amount` - `fee`
        type: integer
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      reporting_category:
        allOf:
        - $ref: '#/definitions/stripe.BalanceTransactionReportingCategory'
        description: Learn more about how [reporting categories](https://stripe.com/docs/reports/reporting-categories)
          can help you understand balance transactions from an accounting perspective.
      source:
        allOf:
        - $ref: '#/definitions/stripe.BalanceTransactionSource'
        description: This transaction relates to the Stripe object.
      status:
        allOf:
        - $ref: '#/definitions/stripe.BalanceTransactionStatus'
        description: The transaction's net funds status in the Stripe balance, which
          are either `available` or `pending`.
      type:
        allOf:
        - $ref: '#/definitions/stripe.BalanceTransactionType'
        description: 'Transaction type: `adjustment`, `advance`, `advance_funding`,
          `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`,
          `climate_order_purchase`, `climate_order_refund`, `connect_collection_transfer`,
          `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`,
          `issuing_dispute`, `issuing_transaction`, `obligation_outbound`, `obligation_reversal_inbound`,
          `payment`, `payment_failure_refund`, `payment_network_reserve_hold`, `payment_network_reserve_release`,
          `payment_refund`, `payment_reversal`, `payment_unreconciled`, `payout`,
          `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`,
          `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`,
          `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`.
          Learn more about [balance transaction types and what they represent](https://stripe.com/docs/reports/balance-transaction-types).
          To classify transactions for accounting purposes, consider `reporting_category`
          instead.'
    type: object
  stripe.BalanceTransactionFeeDetail:
    properties:
      amount:
        description: Amount of the fee, in cents.
        type: integer
      application:
        description: ID of the Connect application that earned the fee.
        type: string
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      type:
        description: 'Type of the fee, one of: `application_fee`, `payment_method_passthrough_fee`,
          `stripe_fee` or `tax`.'
        type: string
    type: object
  stripe.BalanceTransactionReportingCategory:
    enum:
    - advance
    - advance_funding
    - charge
    - charge_failure
    - connect_collection_transfer
    - connect_reserved_funds
    - dispute
    - dispute_reversal
    - fee
    - issuing_authorization_hold
    - issuing_authorization_release
    - issuing_transaction
    - other_adjustment
    - partial_capture_reversal
    - payout
    - payout_reversal
    - platform_earning
    - platform_earning_refund
    - refund
    - refund_failure
    - risk_reserved_funds
    - tax
    - topup
    - topup_reversal
    - transfer
    - transfer_reversal
    type: string
    x-enum-varnames:
    - BalanceTransactionReportingCategoryAdvance
    - BalanceTransactionReportingCategoryAdvanceFunding
    - BalanceTransactionReportingCategoryCharge
    - BalanceTransactionReportingCategoryChargeFailure
    - BalanceTransactionReportingCategoryConnectCollectionTransfer
    - BalanceTransactionReportingCategoryConnectReservedFunds
    - BalanceTransactionReportingCategoryDispute
    - BalanceTransactionReportingCategoryDisputeReversal
    - BalanceTransactionReportingCategoryFee
    - BalanceTransactionReportingCategoryIssuingAuthorizationHold
    - BalanceTransactionReportingCategoryIssuingAuthorizationRelease
    - BalanceTransactionReportingCategoryIssuingTransaction
    - BalanceTransactionReportingCategoryOtherAdjustment
    - BalanceTransactionReportingCategoryPartialCaptureReversal
    - BalanceTransactionReportingCategoryPayout
    - BalanceTransactionReportingCategoryPayoutReversal
    - BalanceTransactionReportingCategoryPlatformEarning
    - BalanceTransactionReportingCategoryPlatformEarningRefund
    - BalanceTransactionReportingCategoryRefund
    - BalanceTransactionReportingCategoryRefundFailure
    - BalanceTransactionReportingCategoryRiskReservedFunds
    - BalanceTransactionReportingCategoryTax
    - BalanceTransactionReportingCategoryTopup
    - BalanceTransactionReportingCategoryTopupReversal
    - BalanceTransactionReportingCategoryTransfer
    - BalanceTransactionReportingCategoryTransferReversal
  stripe.BalanceTransactionSource:
    properties:
      id:
        type: string
      object:
        $ref: '#/definitions/stripe.BalanceTransactionSourceType'
    type: object
  stripe.BalanceTransactionSourceType:
    enum:
    - application_fee
    - charge
    - connect_collection_transfer
    - customer_cash_balance_transaction
    - dispute
    - fee_refund
    - issuing.authorization
    - issuing.dispute
    - issuing.transaction
    - payout
    - refund
    - reserve_transaction
    - tax_deducted_at_source
    - topup
    - transfer
    - transfer_reversal
    type: string
    x-enum-varnames:
    - BalanceTransactionSourceTypeApplicationFee
    - BalanceTransactionSourceTypeCharge
    - BalanceTransactionSourceTypeConnectCollectionTransfer
    - BalanceTransactionSourceTypeCustomerCashBalanceTransaction
    - BalanceTransactionSourceTypeDispute
    - BalanceTransactionSourceTypeFeeRefund
    - BalanceTransactionSourceTypeIssuingAuthorization
    - BalanceTransactionSourceTypeIssuingDispute
    - BalanceTransactionSourceTypeIssuingTransaction
    - BalanceTransactionSourceTypePayout
    - BalanceTransactionSourceTypeRefund
    - BalanceTransactionSourceTypeReserveTransaction
    - BalanceTransactionSourceTypeTaxDeductedAtSource
    - BalanceTransactionSourceTypeTopup
    - BalanceTransactionSourceTypeTransfer
    - BalanceTransactionSourceTypeTransferReversal
  stripe.BalanceTransactionStatus:
    enum:
    - available
    - pending
    type: string
    x-enum-varnames:
    - BalanceTransactionStatusAvailable
    - BalanceTransactionStatusPending
  stripe.BalanceTransactionType:
    enum:
    - adjustment
    - advance
    - advance_funding
    - anticipation_repayment
    - application_fee
    - application_fee_refund
    - charge
    - climate_order_purchase
    - climate_order_refund
    - connect_collection_transfer
    - contribution
    - issuing_authorization_hold
    - issuing_authorization_release
    - issuing_dispute
    - issuing_transaction
    - obligation_outbound
    - obligation_reversal_inbound
    - payment
    - payment_failure_refund
    - payment_network_reserve_hold
    - payment_network_reserve_release
    - payment_refund
    - payment_reversal
    - payment_unreconciled
    - payout
    - payout_cancel
    - payout_failure
    - refund
    - refund_failure
    - reserve_transaction
    - reserved_funds
    - stripe_fee
    - stripe_fx_fee
    - tax_fee
    - topup
    - topup_reversal
    - transfer
    - transfer_cancel
    - transfer_failure
    - transfer_refund
    type: string
    x-enum-varnames:
    - BalanceTransactionTypeAdjustment
    - BalanceTransactionTypeAdvance
    - BalanceTransactionTypeAdvanceFunding
    - BalanceTransactionTypeAnticipationRepayment
    - BalanceTransactionTypeApplicationFee
    - BalanceTransactionTypeApplicationFeeRefund
    - BalanceTransactionTypeCharge
    - BalanceTransactionTypeClimateOrderPurchase
    - BalanceTransactionTypeClimateOrderRefund
    - BalanceTransactionTypeConnectCollectionTransfer
    - BalanceTransactionTypeContribution
    - BalanceTransactionTypeIssuingAuthorizationHold
    - BalanceTransactionTypeIssuingAuthorizationRelease
    - BalanceTransactionTypeIssuingDispute
    - BalanceTransactionTypeIssuingTransaction
    - BalanceTransactionTypeObligationOutbound
    - BalanceTransactionTypeObligationReversalInbound
    - BalanceTransactionTypePayment
    - BalanceTransactionTypePaymentFailureRefund
    - BalanceTransactionTypePaymentNetworkReserveHold
    - BalanceTransactionTypePaymentNetworkReserveRelease
    - BalanceTransactionTypePaymentRefund
    - BalanceTransactionTypePaymentReversal
    - BalanceTransactionTypePaymentUnreconciled
    - BalanceTransactionTypePayout
    - BalanceTransactionTypePayoutCancel
    - BalanceTransactionTypePayoutFailure
    - BalanceTransactionTypeRefund
    - BalanceTransactionTypeRefundFailure
    - BalanceTransactionTypeReserveTransaction
    - BalanceTransactionTypeReservedFunds
    - BalanceTransactionTypeStripeFee
    - BalanceTransactionTypeStripeFxFee
    - BalanceTransactionTypeTaxFee
    - BalanceTransactionTypeTopup
    - BalanceTransactionTypeTopupReversal
    - BalanceTransactionTypeTransfer
    - BalanceTransactionTypeTransferCancel
    - BalanceTransactionTypeTransferFailure
    - BalanceTransactionTypeTransferRefund
  stripe.BankAccountAccountHolderType:
    enum:
    - company
    - individual
    type: string
    x-enum-varnames:
    - BankAccountAccountHolderTypeCompany
    - BankAccountAccountHolderTypeIndividual
  stripe.BillingCreditBalanceTransaction:
    properties:
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      credit:
        allOf:
        - $ref: '#/definitions/stripe.BillingCreditBalanceTransactionCredit'
        description: Credit details for this credit balance transaction. Only present
          if type is `credit`.
      credit_grant:
        allOf:
        - $ref: '#/definitions/stripe.BillingCreditGrant'
        description: The credit grant associated with this credit balance transaction.
      debit:
        allOf:
        - $ref: '#/definitions/stripe.BillingCreditBalanceTransactionDebit'
        description: Debit details for this credit balance transaction. Only present
          if type is `debit`.
      effective_at:
        description: The effective time of this credit balance transaction.
        type: integer
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      test_clock:
        allOf:
        - $ref: '#/definitions/stripe.TestHelpersTestClock'
        description: ID of the test clock this credit balance transaction belongs
          to.
      type:
        allOf:
        - $ref: '#/definitions/stripe.BillingCreditBalanceTransactionType'
        description: The type of credit balance transaction (credit or debit).
    type: object
  stripe.BillingCreditBalanceTransactionCredit:
    properties:
      amount:
        $ref: '#/definitions/stripe.BillingCreditBalanceTransactionCreditAmount'
      type:
        allOf:
        - $ref: '#/definitions/stripe.BillingCreditBalanceTransactionCreditType'
        description: The type of credit transaction.
    type: object
  stripe.BillingCreditBalanceTransactionCreditAmount:
    properties:
      monetary:
        allOf:
        - $ref: '#/definitions/stripe.BillingCreditBalanceTransactionCreditAmountMonetary'
        description: The monetary amount.
      type:
        allOf:
        - $ref: '#/definitions/stripe.BillingCreditBalanceTransactionCreditAmountType'
        description: The type of this amount. We currently only support `monetary`
          billing credits.
    type: object
  stripe.BillingCreditBalanceTransactionCreditAmountMonetary:
    properties:
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      value:
        description: A positive integer representing the amount.
        type: integer
    type: object
  stripe.BillingCreditBalanceTransactionCreditAmountType:
    enum:
    - monetary
    type: string
    x-enum-varnames:
    - BillingCreditBalanceTransactionCreditAmountTypeMonetary
  stripe.BillingCreditBalanceTransactionCreditType:
    enum:
    - credits_granted
    type: string
    x-enum-varnames:
    - BillingCreditBalanceTransactionCreditTypeCreditsGranted
  stripe.BillingCreditBalanceTransactionDebit:
    properties:
      amount:
        $ref: '#/definitions/stripe.BillingCreditBalanceTransactionDebitAmount'
      credits_applied:
        allOf:
        - $ref: '#/definitions/stripe.BillingCreditBalanceTransactionDebitCreditsApplied'
        description: Details of how the billing credits were applied to an invoice.
          Only present if `type` is `credits_applied`.
      type:
        allOf:
        - $ref: '#/definitions/stripe.BillingCreditBalanceTransactionDebitType'
        description: The type of debit transaction.
    type: object
  stripe.BillingCreditBalanceTransactionDebitAmount:
    properties:
      monetary:
        allOf:
        - $ref: '#/definitions/stripe.BillingCreditBalanceTransactionDebitAmountMonetary'
        description: The monetary amount.
      type:
        allOf:
        - $ref: '#/definitions/stripe.BillingCreditBalanceTransactionDebitAmountType'
        description: The type of this amount. We currently only support `monetary`
          billing credits.
    type: object
  stripe.BillingCreditBalanceTransactionDebitAmountMonetary:
    properties:
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      value:
        description: A positive integer representing the amount.
        type: integer
    type: object
  stripe.BillingCreditBalanceTransactionDebitAmountType:
    enum:
    - monetary
    type: string
    x-enum-varnames:
    - BillingCreditBalanceTransactionDebitAmountTypeMonetary
  stripe.BillingCreditBalanceTransactionDebitCreditsApplied:
    properties:
      invoice:
        allOf:
        - $ref: '#/definitions/stripe.Invoice'
        description: The invoice to which the billing credits were applied.
      invoice_line_item:
        description: The invoice line item to which the billing credits were applied.
        type: string
    type: object
  stripe.BillingCreditBalanceTransactionDebitType:
    enum:
    - credits_applied
    - credits_expired
    - credits_voided
    type: string
    x-enum-varnames:
    - BillingCreditBalanceTransactionDebitTypeCreditsApplied
    - BillingCreditBalanceTransactionDebitTypeCreditsExpired
    - BillingCreditBalanceTransactionDebitTypeCreditsVoided
  stripe.BillingCreditBalanceTransactionType:
    enum:
    - credit
    - debit
    type: string
    x-enum-varnames:
    - BillingCreditBalanceTransactionTypeCredit
    - BillingCreditBalanceTransactionTypeDebit
  stripe.BillingCreditGrant:
    properties:
      amount:
        $ref: '#/definitions/stripe.BillingCreditGrantAmount'
      applicability_config:
        $ref: '#/definitions/stripe.BillingCreditGrantApplicabilityConfig'
      category:
        allOf:
        - $ref: '#/definitions/stripe.BillingCreditGrantCategory'
        description: The category of this credit grant. This is for tracking purposes
          and will not be displayed to the customer.
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      customer:
        allOf:
        - $ref: '#/definitions/stripe.Customer'
        description: ID of the customer to whom the billing credits are granted.
      effective_at:
        description: The time when the billing credits become effective i.e when they
          are eligible to be used.
        type: integer
      expires_at:
        description: The time when the billing credits will expire. If not present,
          the billing credits will never expire.
        type: integer
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      name:
        description: A descriptive name shown in dashboard.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      test_clock:
        allOf:
        - $ref: '#/definitions/stripe.TestHelpersTestClock'
        description: ID of the test clock this credit grant belongs to.
      updated:
        description: Time at which the object was last updated. Measured in seconds
          since the Unix epoch.
        type: integer
      voided_at:
        description: The time when this credit grant was voided. If not present, the
          credit grant hasn't been voided.
        type: integer
    type: object
  stripe.BillingCreditGrantAmount:
    properties:
      monetary:
        allOf:
        - $ref: '#/definitions/stripe.BillingCreditGrantAmountMonetary'
        description: The monetary amount.
      type:
        allOf:
        - $ref: '#/definitions/stripe.BillingCreditGrantAmountType'
        description: The type of this amount. We currently only support `monetary`
          billing credits.
    type: object
  stripe.BillingCreditGrantAmountMonetary:
    properties:
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      value:
        description: A positive integer representing the amount.
        type: integer
    type: object
  stripe.BillingCreditGrantAmountType:
    enum:
    - monetary
    type: string
    x-enum-varnames:
    - BillingCreditGrantAmountTypeMonetary
  stripe.BillingCreditGrantApplicabilityConfig:
    properties:
      scope:
        $ref: '#/definitions/stripe.BillingCreditGrantApplicabilityConfigScope'
    type: object
  stripe.BillingCreditGrantApplicabilityConfigScope:
    properties:
      price_type:
        allOf:
        - $ref: '#/definitions/stripe.BillingCreditGrantApplicabilityConfigScopePriceType'
        description: The price type to which credit grants can apply to. We currently
          only support `metered` price type. This refers to prices that have a [Billing
          Meter](https://docs.stripe.com/api/billing/meter) attached to them.
    type: object
  stripe.BillingCreditGrantApplicabilityConfigScopePriceType:
    enum:
    - metered
    type: string
    x-enum-varnames:
    - BillingCreditGrantApplicabilityConfigScopePriceTypeMetered
  stripe.BillingCreditGrantCategory:
    enum:
    - paid
    - promotional
    type: string
    x-enum-varnames:
    - BillingCreditGrantCategoryPaid
    - BillingCreditGrantCategoryPromotional
  stripe.CardFunding:
    enum:
    - credit
    - debit
    - prepaid
    - unknown
    type: string
    x-enum-varnames:
    - CardFundingCredit
    - CardFundingDebit
    - CardFundingPrepaid
    - CardFundingUnknown
  stripe.CashBalance:
    properties:
      available:
        additionalProperties:
          type: integer
        description: A hash of all cash balances available to this customer. You cannot
          delete a customer with any cash balances, even if the balance is 0. Amounts
          are represented in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).
        type: object
      customer:
        description: The ID of the customer whose cash balance this object represents.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      settings:
        $ref: '#/definitions/stripe.CashBalanceSettings'
    type: object
  stripe.CashBalanceSettings:
    properties:
      reconciliation_mode:
        allOf:
        - $ref: '#/definitions/stripe.CashBalanceSettingsReconciliationMode'
        description: The configuration for how funds that land in the customer cash
          balance are reconciled.
      using_merchant_default:
        description: A flag to indicate if reconciliation mode returned is the user's
          default or is specific to this customer cash balance
        type: boolean
    type: object
  stripe.CashBalanceSettingsReconciliationMode:
    enum:
    - automatic
    - manual
    type: string
    x-enum-varnames:
    - CashBalanceSettingsReconciliationModeAutomatic
    - CashBalanceSettingsReconciliationModeManual
  stripe.Charge:
    properties:
      amount:
        description: Amount intended to be collected by this payment. A positive integer
          representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal)
          (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency).
          The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts).
          The amount value supports up to eight digits (e.g., a value of 99999999
          for a USD charge of $999,999.99).
        type: integer
      amount_captured:
        description: Amount in cents (or local equivalent) captured (can be less than
          the amount attribute on the charge if a partial capture was made).
        type: integer
      amount_refunded:
        description: Amount in cents (or local equivalent) refunded (can be less than
          the amount attribute on the charge if a partial refund was issued).
        type: integer
      application:
        allOf:
        - $ref: '#/definitions/stripe.Application'
        description: ID of the Connect application that created the charge.
      application_fee:
        allOf:
        - $ref: '#/definitions/stripe.ApplicationFee'
        description: The application fee (if any) for the charge. [See the Connect
          documentation](https://stripe.com/docs/connect/direct-charges#collect-fees)
          for details.
      application_fee_amount:
        description: The amount of the application fee (if any) requested for the
          charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collect-fees)
          for details.
        type: integer
      authorization_code:
        description: Authorization code on the charge.
        type: string
      balance_transaction:
        allOf:
        - $ref: '#/definitions/stripe.BalanceTransaction'
        description: ID of the balance transaction that describes the impact of this
          charge on your account balance (not including refunds or disputes).
      billing_details:
        $ref: '#/definitions/stripe.ChargeBillingDetails'
      calculated_statement_descriptor:
        description: The full statement descriptor that is passed to card networks,
          and that is displayed on your customers' credit card and bank statements.
          Allows you to see what the statement descriptor looks like after the static
          and dynamic portions are combined. This value only exists for card payments.
        type: string
      captured:
        description: If the charge was created without capturing, this Boolean represents
          whether it is still uncaptured or has since been captured.
        type: boolean
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      customer:
        allOf:
        - $ref: '#/definitions/stripe.Customer'
        description: ID of the customer this charge is for if one exists.
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      disputed:
        description: Whether the charge has been disputed.
        type: boolean
      failure_balance_transaction:
        allOf:
        - $ref: '#/definitions/stripe.BalanceTransaction'
        description: ID of the balance transaction that describes the reversal of
          the balance on your account due to payment failure.
      failure_code:
        description: Error code explaining reason for charge failure if available
          (see [the errors section](https://stripe.com/docs/error-codes) for a list
          of codes).
        type: string
      failure_message:
        description: Message to user further explaining reason for charge failure
          if available.
        type: string
      fraud_details:
        allOf:
        - $ref: '#/definitions/stripe.ChargeFraudDetails'
        description: Information on fraud assessments for the charge.
      id:
        description: Unique identifier for the object.
        type: string
      invoice:
        allOf:
        - $ref: '#/definitions/stripe.Invoice'
        description: ID of the invoice this charge is for if one exists.
      level3:
        $ref: '#/definitions/stripe.ChargeLevel3'
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      on_behalf_of:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The account (if any) the charge was made on behalf of without
          triggering an automatic transfer. See the [Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers)
          for details.
      outcome:
        allOf:
        - $ref: '#/definitions/stripe.ChargeOutcome'
        description: Details about whether the payment was accepted, and why. See
          [understanding declines](https://stripe.com/docs/declines) for details.
      paid:
        description: '`true` if the charge succeeded, or was successfully authorized
          for later capture.'
        type: boolean
      payment_intent:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntent'
        description: ID of the PaymentIntent associated with this charge, if one exists.
      payment_method:
        description: ID of the payment method used in this charge.
        type: string
      payment_method_details:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetails'
        description: Details about the payment method at the time of the transaction.
      radar_options:
        allOf:
        - $ref: '#/definitions/stripe.ChargeRadarOptions'
        description: Options to configure Radar. See [Radar Session](https://stripe.com/docs/radar/radar-session)
          for more information.
      receipt_email:
        description: This is the email address that the receipt for this charge was
          sent to.
        type: string
      receipt_number:
        description: This is the transaction number that appears on email receipts
          sent for this charge. This attribute will be `null` until a receipt has
          been sent.
        type: string
      receipt_url:
        description: This is the URL to view the receipt for this charge. The receipt
          is kept up-to-date to the latest state of the charge, including any refunds.
          If the charge is for an Invoice, the receipt will be stylized as an Invoice
          receipt.
        type: string
      refunded:
        description: Whether the charge has been fully refunded. If the charge is
          only partially refunded, this attribute will still be false.
        type: boolean
      refunds:
        allOf:
        - $ref: '#/definitions/stripe.RefundList'
        description: A list of refunds that have been applied to the charge.
      review:
        allOf:
        - $ref: '#/definitions/stripe.Review'
        description: ID of the review associated with this charge if one exists.
      shipping:
        allOf:
        - $ref: '#/definitions/stripe.ShippingDetails'
        description: Shipping information for the charge.
      source:
        allOf:
        - $ref: '#/definitions/stripe.PaymentSource'
        description: This is a legacy field that will be removed in the future. It
          contains the Source, Card, or BankAccount object used for the charge. For
          details about the payment method used for this charge, refer to `payment_method`
          or `payment_method_details` instead.
      source_transfer:
        allOf:
        - $ref: '#/definitions/stripe.Transfer'
        description: The transfer ID which created this charge. Only present if the
          charge came from another Stripe account. [See the Connect documentation](https://docs.stripe.com/connect/destination-charges)
          for details.
      statement_descriptor:
        description: |-
          For a non-card charge, text that appears on the customer's statement as the statement descriptor. This value overrides the account's default statement descriptor. For information about requirements, including the 22-character limit, see [the Statement Descriptor docs](https://docs.stripe.com/get-started/account/statement-descriptors).

          For a card charge, this value is ignored unless you don't specify a `statement_descriptor_suffix`, in which case this value is used as the suffix.
        type: string
      statement_descriptor_suffix:
        description: Provides information about a card charge. Concatenated to the
          account's [statement descriptor prefix](https://docs.stripe.com/get-started/account/statement-descriptors#static)
          to form the complete statement descriptor that appears on the customer's
          statement. If the account has no prefix value, the suffix is concatenated
          to the account's statement descriptor.
        type: string
      status:
        allOf:
        - $ref: '#/definitions/stripe.ChargeStatus'
        description: The status of the payment is either `succeeded`, `pending`, or
          `failed`.
      transfer:
        allOf:
        - $ref: '#/definitions/stripe.Transfer'
        description: ID of the transfer to the `destination` account (only applicable
          if the charge was created using the `destination` parameter).
      transfer_data:
        allOf:
        - $ref: '#/definitions/stripe.ChargeTransferData'
        description: An optional dictionary including the account to automatically
          transfer to as part of a destination charge. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges)
          for details.
      transfer_group:
        description: A string that identifies this transaction as part of a group.
          See the [Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options)
          for details.
        type: string
    type: object
  stripe.ChargeBillingDetails:
    properties:
      address:
        allOf:
        - $ref: '#/definitions/stripe.Address'
        description: Billing address.
      email:
        description: Email address.
        type: string
      name:
        description: Full name.
        type: string
      phone:
        description: Billing phone number (including extension).
        type: string
    type: object
  stripe.ChargeFraudDetails:
    properties:
      stripe_report:
        allOf:
        - $ref: '#/definitions/stripe.ChargeFraudStripeReport'
        description: Assessments from Stripe. If set, the value is `fraudulent`.
      user_report:
        allOf:
        - $ref: '#/definitions/stripe.ChargeFraudUserReport'
        description: Assessments reported by you. If set, possible values of are `safe`
          and `fraudulent`.
    type: object
  stripe.ChargeFraudStripeReport:
    enum:
    - fraudulent
    type: string
    x-enum-varnames:
    - ChargeFraudStripeReportFraudulent
  stripe.ChargeFraudUserReport:
    enum:
    - fraudulent
    - safe
    type: string
    x-enum-varnames:
    - ChargeFraudUserReportFraudulent
    - ChargeFraudUserReportSafe
  stripe.ChargeLevel3:
    properties:
      customer_reference:
        type: string
      line_items:
        items:
          $ref: '#/definitions/stripe.ChargeLevel3LineItem'
        type: array
      merchant_reference:
        type: string
      shipping_address_zip:
        type: string
      shipping_amount:
        type: integer
      shipping_from_zip:
        type: string
    type: object
  stripe.ChargeLevel3LineItem:
    properties:
      discount_amount:
        type: integer
      product_code:
        type: string
      product_description:
        type: string
      quantity:
        type: integer
      tax_amount:
        type: integer
      unit_cost:
        type: integer
    type: object
  stripe.ChargeOutcome:
    properties:
      network_status:
        description: Possible values are `approved_by_network`, `declined_by_network`,
          `not_sent_to_network`, and `reversed_after_approval`. The value `reversed_after_approval`
          indicates the payment was [blocked by Stripe](https://stripe.com/docs/declines#blocked-payments)
          after bank authorization, and may temporarily appear as "pending" on a cardholder's
          statement.
        type: string
      reason:
        description: An enumerated value providing a more detailed explanation of
          the outcome's `type`. Charges blocked by Radar's default block rule have
          the value `highest_risk_level`. Charges placed in review by Radar's default
          review rule have the value `elevated_risk_level`. Charges authorized, blocked,
          or placed in review by custom rules have the value `rule`. See [understanding
          declines](https://stripe.com/docs/declines) for more details.
        type: string
      risk_level:
        description: Stripe Radar's evaluation of the riskiness of the payment. Possible
          values for evaluated payments are `normal`, `elevated`, `highest`. For non-card
          payments, and card-based payments predating the public assignment of risk
          levels, this field will have the value `not_assessed`. In the event of an
          error in the evaluation, this field will have the value `unknown`. This
          field is only available with Radar.
        type: string
      risk_score:
        description: Stripe Radar's evaluation of the riskiness of the payment. Possible
          values for evaluated payments are between 0 and 100. For non-card payments,
          card-based payments predating the public assignment of risk scores, or in
          the event of an error during evaluation, this field will not be present.
          This field is only available with Radar for Fraud Teams.
        type: integer
      rule:
        allOf:
        - $ref: '#/definitions/stripe.ChargeOutcomeRule'
        description: The ID of the Radar rule that matched the payment, if applicable.
      seller_message:
        description: A human-readable description of the outcome type and reason,
          designed for you (the recipient of the payment), not your customer.
        type: string
      type:
        description: Possible values are `authorized`, `manual_review`, `issuer_declined`,
          `blocked`, and `invalid`. See [understanding declines](https://stripe.com/docs/declines)
          and [Radar reviews](https://stripe.com/docs/radar/reviews) for details.
        type: string
    type: object
  stripe.ChargeOutcomeRule:
    properties:
      action:
        description: The action taken on the payment.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      predicate:
        description: The predicate to evaluate the payment against.
        type: string
    type: object
  stripe.ChargePaymentMethodDetails:
    properties:
      ach_credit_transfer:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsACHCreditTransfer'
      ach_debit:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsACHDebit'
      acss_debit:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsACSSDebit'
      affirm:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsAffirm'
      afterpay_clearpay:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsAfterpayClearpay'
      alipay:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsAlipay'
      alma:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsAlma'
      amazon_pay:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsAmazonPay'
      au_becs_debit:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsAUBECSDebit'
      bacs_debit:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsBACSDebit'
      bancontact:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsBancontact'
      blik:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsBLIK'
      boleto:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsBoleto'
      card:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCard'
      card_present:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardPresent'
      cashapp:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCashApp'
      customer_balance:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCustomerBalance'
      eps:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsEPS'
      fpx:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsFPX'
      giropay:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsGiropay'
      grabpay:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsGrabpay'
      ideal:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsIDEAL'
      interac_present:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsInteracPresent'
      kakao_pay:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsKakaoPay'
      klarna:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsKlarna'
      konbini:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsKonbini'
      kr_card:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsKrCard'
      link:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsLink'
      mobilepay:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsMobilepay'
      multibanco:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsMultibanco'
      naver_pay:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsNaverPay'
      oxxo:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsOXXO'
      p24:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsP24'
      payco:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsPayco'
      paynow:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsPayNow'
      paypal:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsPaypal'
      pix:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsPix'
      promptpay:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsPromptPay'
      revolut_pay:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsRevolutPay'
      samsung_pay:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsSamsungPay'
      sepa_credit_transfer:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsSEPACreditTransfer'
      sepa_debit:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsSEPADebit'
      sofort:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsSofort'
      stripe_account:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsStripeAccount'
      swish:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsSwish'
      twint:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsTWINT'
      type:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsType'
        description: |-
          The type of transaction-specific details of the payment method used in the payment, one of `ach_credit_transfer`, `ach_debit`, `acss_debit`, `alipay`, `au_becs_debit`, `bancontact`, `card`, `card_present`, `eps`, `giropay`, `ideal`, `klarna`, `multibanco`, `p24`, `sepa_debit`, `sofort`, `stripe_account`, or `wechat`.
          An additional hash is included on `payment_method_details` with a name matching this value.
          It contains information specific to the payment method.
      us_bank_account:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsUSBankAccount'
      wechat:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsWeChat'
      wechat_pay:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsWeChatPay'
      zip:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsZip'
    type: object
  stripe.ChargePaymentMethodDetailsACHCreditTransfer:
    properties:
      account_number:
        description: Account number to transfer funds to.
        type: string
      bank_name:
        description: Name of the bank associated with the routing number.
        type: string
      routing_number:
        description: Routing transit number for the bank account to transfer funds
          to.
        type: string
      swift_code:
        description: SWIFT code of the bank associated with the routing number.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsACHDebit:
    properties:
      account_holder_type:
        allOf:
        - $ref: '#/definitions/stripe.BankAccountAccountHolderType'
        description: Type of entity that holds the account. This can be either `individual`
          or `company`.
      bank_name:
        description: Name of the bank associated with the bank account.
        type: string
      country:
        description: Two-letter ISO code representing the country the bank account
          is located in.
        type: string
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use
          this attribute to check whether two bank accounts are the same.
        type: string
      last4:
        description: Last four digits of the bank account number.
        type: string
      routing_number:
        description: Routing transit number of the bank account.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsACSSDebit:
    properties:
      bank_name:
        description: Name of the bank associated with the bank account.
        type: string
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use
          this attribute to check whether two bank accounts are the same.
        type: string
      institution_number:
        description: Institution number of the bank account
        type: string
      last4:
        description: Last four digits of the bank account number.
        type: string
      mandate:
        description: ID of the mandate used to make this payment.
        type: string
      transit_number:
        description: Transit number of the bank account.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsAUBECSDebit:
    properties:
      bsb_number:
        description: Bank-State-Branch number of the bank account.
        type: string
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use
          this attribute to check whether two bank accounts are the same.
        type: string
      last4:
        description: Last four digits of the bank account number.
        type: string
      mandate:
        description: ID of the mandate used to make this payment.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsAffirm:
    properties:
      transaction_id:
        description: The Affirm transaction ID associated with this payment.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsAfterpayClearpay:
    properties:
      order_id:
        description: The Afterpay order ID associated with this payment intent.
        type: string
      reference:
        description: Order identifier shown to the merchant in Afterpay's online portal.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsAlipay:
    properties:
      buyer_id:
        description: Uniquely identifies this particular Alipay account. You can use
          this attribute to check whether two Alipay accounts are the same.
        type: string
      fingerprint:
        description: Uniquely identifies this particular Alipay account. You can use
          this attribute to check whether two Alipay accounts are the same.
        type: string
      transaction_id:
        description: Transaction ID of this particular Alipay transaction.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsAlma:
    type: object
  stripe.ChargePaymentMethodDetailsAmazonPay:
    type: object
  stripe.ChargePaymentMethodDetailsBACSDebit:
    properties:
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use
          this attribute to check whether two bank accounts are the same.
        type: string
      last4:
        description: Last four digits of the bank account number.
        type: string
      mandate:
        description: ID of the mandate used to make this payment.
        type: string
      sort_code:
        description: Sort code of the bank account. (e.g., `10-20-30`)
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsBLIK:
    properties:
      buyer_id:
        description: A unique and immutable identifier assigned by BLIK to every buyer.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsBancontact:
    properties:
      bank_code:
        description: Bank code of bank associated with the bank account.
        type: string
      bank_name:
        description: Name of the bank associated with the bank account.
        type: string
      bic:
        description: Bank Identifier Code of the bank associated with the bank account.
        type: string
      generated_sepa_debit:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethod'
        description: The ID of the SEPA Direct Debit PaymentMethod which was generated
          by this Charge.
      generated_sepa_debit_mandate:
        allOf:
        - $ref: '#/definitions/stripe.Mandate'
        description: The mandate for the SEPA Direct Debit PaymentMethod which was
          generated by this Charge.
      iban_last4:
        description: Last four characters of the IBAN.
        type: string
      preferred_language:
        description: |-
          Preferred language of the Bancontact authorization page that the customer is redirected to.
          Can be one of `en`, `de`, `fr`, or `nl`
        type: string
      verified_name:
        description: |-
          Owner's verified full name. Values are verified or provided by Bancontact directly
          (if supported) at the time of authorization or settlement. They cannot be set or mutated.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsBoleto:
    properties:
      tax_id:
        description: The tax ID of the customer (CPF for individuals consumers or
          CNPJ for businesses consumers)
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsCard:
    properties:
      amount_authorized:
        description: The authorized amount.
        type: integer
      authorization_code:
        description: Authorization code on the charge.
        type: string
      brand:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodCardBrand'
        description: Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`,
          `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
      capture_before:
        description: When using manual capture, a future timestamp at which the charge
          will be automatically refunded if uncaptured.
        type: integer
      checks:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardChecks'
        description: Check results by Card networks on Card address and CVC at time
          of payment.
      country:
        description: Two-letter ISO code representing the country of the card. You
          could use this attribute to get a sense of the international breakdown of
          cards you've collected.
        type: string
      description:
        description: |-
          Please note that the fields below are for internal use only and are not returned
          as part of standard API requests.
          A high-level description of the type of cards issued in this range. (For internal use only and not typically available in standard API requests.)
        type: string
      exp_month:
        description: Two-digit number representing the card's expiration month.
        type: integer
      exp_year:
        description: Four-digit number representing the card's expiration year.
        type: integer
      extended_authorization:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardExtendedAuthorization'
      fingerprint:
        description: |-
          Uniquely identifies this particular card number. You can use this attribute to check whether two customers who've signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.

          *As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*
        type: string
      funding:
        allOf:
        - $ref: '#/definitions/stripe.CardFunding'
        description: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
      iin:
        description: Issuer identification number of the card. (For internal use only
          and not typically available in standard API requests.)
        type: string
      incremental_authorization:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardIncrementalAuthorization'
      installments:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardInstallments'
        description: |-
          Installment details for this payment (Mexico only).

          For more information, see the [installments integration guide](https://stripe.com/docs/payments/installments).
      issuer:
        description: The name of the card's issuing bank. (For internal use only and
          not typically available in standard API requests.)
        type: string
      last4:
        description: The last four digits of the card.
        type: string
      mandate:
        description: ID of the mandate used to make this payment or created by it.
        type: string
      moto:
        description: True if this payment was marked as MOTO and out of scope for
          SCA.
        type: boolean
      multicapture:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardMulticapture'
      network:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardNetwork'
        description: Identifies which network this charge was processed on. Can be
          `amex`, `cartes_bancaires`, `diners`, `discover`, `eftpos_au`, `interac`,
          `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
      network_token:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardNetworkToken'
        description: If this card has network token credentials, this contains the
          details of the network token credentials.
      overcapture:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardOvercapture'
      three_d_secure:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardThreeDSecure'
        description: Populated if this transaction used 3D Secure authentication.
      wallet:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardWallet'
        description: If this Card is part of a card wallet, this contains the details
          of the card wallet.
    type: object
  stripe.ChargePaymentMethodDetailsCardChecks:
    properties:
      address_line1_check:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardChecksAddressLine1Check'
        description: If a address line1 was provided, results of the check, one of
          `pass`, `fail`, `unavailable`, or `unchecked`.
      address_postal_code_check:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardChecksAddressPostalCodeCheck'
        description: If a address postal code was provided, results of the check,
          one of `pass`, `fail`, `unavailable`, or `unchecked`.
      cvc_check:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardChecksCVCCheck'
        description: If a CVC was provided, results of the check, one of `pass`, `fail`,
          `unavailable`, or `unchecked`.
    type: object
  stripe.ChargePaymentMethodDetailsCardChecksAddressLine1Check:
    enum:
    - fail
    - pass
    - unavailable
    - unchecked
    type: string
    x-enum-varnames:
    - ChargePaymentMethodDetailsCardChecksAddressLine1CheckFail
    - ChargePaymentMethodDetailsCardChecksAddressLine1CheckPass
    - ChargePaymentMethodDetailsCardChecksAddressLine1CheckUnavailable
    - ChargePaymentMethodDetailsCardChecksAddressLine1CheckUnchecked
  stripe.ChargePaymentMethodDetailsCardChecksAddressPostalCodeCheck:
    enum:
    - fail
    - pass
    - unavailable
    - unchecked
    type: string
    x-enum-varnames:
    - ChargePaymentMethodDetailsCardChecksAddressPostalCodeCheckFail
    - ChargePaymentMethodDetailsCardChecksAddressPostalCodeCheckPass
    - ChargePaymentMethodDetailsCardChecksAddressPostalCodeCheckUnavailable
    - ChargePaymentMethodDetailsCardChecksAddressPostalCodeCheckUnchecked
  stripe.ChargePaymentMethodDetailsCardChecksCVCCheck:
    enum:
    - fail
    - pass
    - unavailable
    - unchecked
    type: string
    x-enum-varnames:
    - ChargePaymentMethodDetailsCardChecksCVCCheckFail
    - ChargePaymentMethodDetailsCardChecksCVCCheckPass
    - ChargePaymentMethodDetailsCardChecksCVCCheckUnavailable
    - ChargePaymentMethodDetailsCardChecksCVCCheckUnchecked
  stripe.ChargePaymentMethodDetailsCardExtendedAuthorization:
    properties:
      status:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardExtendedAuthorizationStatus'
        description: Indicates whether or not the capture window is extended beyond
          the standard authorization.
    type: object
  stripe.ChargePaymentMethodDetailsCardExtendedAuthorizationStatus:
    enum:
    - disabled
    - enabled
    type: string
    x-enum-varnames:
    - ChargePaymentMethodDetailsCardExtendedAuthorizationStatusDisabled
    - ChargePaymentMethodDetailsCardExtendedAuthorizationStatusEnabled
  stripe.ChargePaymentMethodDetailsCardIncrementalAuthorization:
    properties:
      status:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardIncrementalAuthorizationStatus'
        description: Indicates whether or not the incremental authorization feature
          is supported.
    type: object
  stripe.ChargePaymentMethodDetailsCardIncrementalAuthorizationStatus:
    enum:
    - available
    - unavailable
    type: string
    x-enum-varnames:
    - ChargePaymentMethodDetailsCardIncrementalAuthorizationStatusAvailable
    - ChargePaymentMethodDetailsCardIncrementalAuthorizationStatusUnavailable
  stripe.ChargePaymentMethodDetailsCardInstallments:
    properties:
      plan:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardInstallmentsPlan'
        description: Installment plan selected for the payment.
    type: object
  stripe.ChargePaymentMethodDetailsCardMulticapture:
    properties:
      status:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardMulticaptureStatus'
        description: Indicates whether or not multiple captures are supported.
    type: object
  stripe.ChargePaymentMethodDetailsCardMulticaptureStatus:
    enum:
    - available
    - unavailable
    type: string
    x-enum-varnames:
    - ChargePaymentMethodDetailsCardMulticaptureStatusAvailable
    - ChargePaymentMethodDetailsCardMulticaptureStatusUnavailable
  stripe.ChargePaymentMethodDetailsCardNetwork:
    enum:
    - amex
    - cartes_bancaires
    - diners
    - discover
    - interac
    - jcb
    - mastercard
    - unionpay
    - visa
    - unknown
    type: string
    x-enum-varnames:
    - ChargePaymentMethodDetailsCardNetworkAmex
    - ChargePaymentMethodDetailsCardNetworkCartesBancaires
    - ChargePaymentMethodDetailsCardNetworkDiners
    - ChargePaymentMethodDetailsCardNetworkDiscover
    - ChargePaymentMethodDetailsCardNetworkInterac
    - ChargePaymentMethodDetailsCardNetworkJCB
    - ChargePaymentMethodDetailsCardNetworkMastercard
    - ChargePaymentMethodDetailsCardNetworkUnionpay
    - ChargePaymentMethodDetailsCardNetworkVisa
    - ChargePaymentMethodDetailsCardNetworkUnknown
  stripe.ChargePaymentMethodDetailsCardNetworkToken:
    properties:
      used:
        description: Indicates if Stripe used a network token, either user provided
          or Stripe managed when processing the transaction.
        type: boolean
    type: object
  stripe.ChargePaymentMethodDetailsCardOvercapture:
    properties:
      maximum_amount_capturable:
        description: The maximum amount that can be captured.
        type: integer
      status:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardOvercaptureStatus'
        description: Indicates whether or not the authorized amount can be over-captured.
    type: object
  stripe.ChargePaymentMethodDetailsCardOvercaptureStatus:
    enum:
    - available
    - unavailable
    type: string
    x-enum-varnames:
    - ChargePaymentMethodDetailsCardOvercaptureStatusAvailable
    - ChargePaymentMethodDetailsCardOvercaptureStatusUnavailable
  stripe.ChargePaymentMethodDetailsCardPresent:
    properties:
      amount_authorized:
        description: The authorized amount
        type: integer
      brand:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodCardBrand'
        description: Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`,
          `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
      brand_product:
        description: The [product code](https://stripe.com/docs/card-product-codes)
          that identifies the specific program or product associated with a card.
        type: string
      capture_before:
        description: When using manual capture, a future timestamp after which the
          charge will be automatically refunded if uncaptured.
        type: integer
      cardholder_name:
        description: The cardholder name as read from the card, in [ISO 7813](https://en.wikipedia.org/wiki/ISO/IEC_7813)
          format. May include alphanumeric characters, special characters and first/last
          name separator (`/`). In some cases, the cardholder name may not be available
          depending on how the issuer has configured the card. Cardholder name is
          typically not available on swipe or contactless payments, such as those
          made with Apple Pay and Google Pay.
        type: string
      country:
        description: Two-letter ISO code representing the country of the card. You
          could use this attribute to get a sense of the international breakdown of
          cards you've collected.
        type: string
      description:
        description: |-
          Please note that the fields below are for internal use only and are not returned
          as part of standard API requests.
          A high-level description of the type of cards issued in this range. (For internal use only and not typically available in standard API requests.)
        type: string
      emv_auth_data:
        description: Authorization response cryptogram.
        type: string
      exp_month:
        description: Two-digit number representing the card's expiration month.
        type: integer
      exp_year:
        description: Four-digit number representing the card's expiration year.
        type: integer
      fingerprint:
        description: |-
          Uniquely identifies this particular card number. You can use this attribute to check whether two customers who've signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.

          *As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*
        type: string
      funding:
        allOf:
        - $ref: '#/definitions/stripe.CardFunding'
        description: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
      generated_card:
        description: ID of a card PaymentMethod generated from the card_present PaymentMethod
          that may be attached to a Customer for future transactions. Only present
          if it was possible to generate a card PaymentMethod.
        type: string
      iin:
        description: Issuer identification number of the card. (For internal use only
          and not typically available in standard API requests.)
        type: string
      incremental_authorization_supported:
        description: Whether this [PaymentIntent](https://stripe.com/docs/api/payment_intents)
          is eligible for incremental authorizations. Request support using [request_incremental_authorization_support](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-payment_method_options-card_present-request_incremental_authorization_support).
        type: boolean
      issuer:
        description: The name of the card's issuing bank. (For internal use only and
          not typically available in standard API requests.)
        type: string
      last4:
        description: The last four digits of the card.
        type: string
      network:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardPresentNetwork'
        description: Identifies which network this charge was processed on. Can be
          `amex`, `cartes_bancaires`, `diners`, `discover`, `eftpos_au`, `interac`,
          `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
      network_transaction_id:
        description: This is used by the financial networks to identify a transaction.
          Visa calls this the Transaction ID, Mastercard calls this the Trace ID,
          and American Express calls this the Acquirer Reference Data. The first three
          digits of the Trace ID is the Financial Network Code, the next 6 digits
          is the Banknet Reference Number, and the last 4 digits represent the date
          (MM/DD). This field will be available for successful Visa, Mastercard, or
          American Express transactions and always null for other card brands.
        type: string
      offline:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardPresentOffline'
        description: Details about payments collected offline.
      overcapture_supported:
        description: Defines whether the authorized amount can be over-captured or
          not
        type: boolean
      preferred_locales:
        description: EMV tag 5F2D. Preferred languages specified by the integrated
          circuit chip.
        items:
          type: string
        type: array
      read_method:
        description: How card details were read in this transaction.
        type: string
      receipt:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardPresentReceipt'
        description: A collection of fields required to be displayed on receipts.
          Only required for EMV transactions.
      wallet:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardPresentWallet'
    type: object
  stripe.ChargePaymentMethodDetailsCardPresentNetwork:
    enum:
    - amex
    - cartes_bancaires
    - diners
    - discover
    - interac
    - jcb
    - mastercard
    - unionpay
    - visa
    - unknown
    type: string
    x-enum-varnames:
    - ChargePaymentMethodDetailsCardPresentNetworkAmex
    - ChargePaymentMethodDetailsCardPresentNetworkCartesBancaires
    - ChargePaymentMethodDetailsCardPresentNetworkDiners
    - ChargePaymentMethodDetailsCardPresentNetworkDiscover
    - ChargePaymentMethodDetailsCardPresentNetworkInterac
    - ChargePaymentMethodDetailsCardPresentNetworkJCB
    - ChargePaymentMethodDetailsCardPresentNetworkMastercard
    - ChargePaymentMethodDetailsCardPresentNetworkUnionpay
    - ChargePaymentMethodDetailsCardPresentNetworkVisa
    - ChargePaymentMethodDetailsCardPresentNetworkUnknown
  stripe.ChargePaymentMethodDetailsCardPresentOffline:
    properties:
      stored_at:
        description: Time at which the payment was collected while offline
        type: integer
      type:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardPresentOfflineType'
        description: The method used to process this payment method offline. Only
          deferred is allowed.
    type: object
  stripe.ChargePaymentMethodDetailsCardPresentOfflineType:
    enum:
    - deferred
    type: string
    x-enum-varnames:
    - ChargePaymentMethodDetailsCardPresentOfflineTypeDeferred
  stripe.ChargePaymentMethodDetailsCardPresentReceipt:
    properties:
      account_type:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardPresentReceiptAccountType'
        description: The type of account being debited or credited
      application_cryptogram:
        description: EMV tag 9F26, cryptogram generated by the integrated circuit
          chip.
        type: string
      application_preferred_name:
        description: Mnenomic of the Application Identifier.
        type: string
      authorization_code:
        description: Identifier for this transaction.
        type: string
      authorization_response_code:
        description: EMV tag 8A. A code returned by the card issuer.
        type: string
      cardholder_verification_method:
        description: 'Describes the method used by the cardholder to verify ownership
          of the card. One of the following: `approval`, `failure`, `none`, `offline_pin`,
          `offline_pin_and_signature`, `online_pin`, or `signature`.'
        type: string
      dedicated_file_name:
        description: EMV tag 84. Similar to the application identifier stored on the
          integrated circuit chip.
        type: string
      terminal_verification_results:
        description: The outcome of a series of EMV functions performed by the card
          reader.
        type: string
      transaction_status_information:
        description: An indication of various EMV functions performed during the transaction.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsCardPresentReceiptAccountType:
    enum:
    - checking
    - credit
    - prepaid
    - unknown
    type: string
    x-enum-varnames:
    - ChargePaymentMethodDetailsCardPresentReceiptAccountTypeChecking
    - ChargePaymentMethodDetailsCardPresentReceiptAccountTypeCredit
    - ChargePaymentMethodDetailsCardPresentReceiptAccountTypePrepaid
    - ChargePaymentMethodDetailsCardPresentReceiptAccountTypeUnknown
  stripe.ChargePaymentMethodDetailsCardPresentWallet:
    properties:
      type:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardPresentWalletType'
        description: The type of mobile wallet, one of `apple_pay`, `google_pay`,
          `samsung_pay`, or `unknown`.
    type: object
  stripe.ChargePaymentMethodDetailsCardPresentWalletType:
    enum:
    - apple_pay
    - google_pay
    - samsung_pay
    - unknown
    type: string
    x-enum-varnames:
    - ChargePaymentMethodDetailsCardPresentWalletTypeApplePay
    - ChargePaymentMethodDetailsCardPresentWalletTypeGooglePay
    - ChargePaymentMethodDetailsCardPresentWalletTypeSamsungPay
    - ChargePaymentMethodDetailsCardPresentWalletTypeUnknown
  stripe.ChargePaymentMethodDetailsCardThreeDSecure:
    properties:
      authentication_flow:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardThreeDSecureAuthenticationFlow'
        description: |-
          For authenticated transactions: how the customer was authenticated by
          the issuing bank.
      electronic_commerce_indicator:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardThreeDSecureElectronicCommerceIndicator'
        description: |-
          The Electronic Commerce Indicator (ECI). A protocol-level field
          indicating what degree of authentication was performed.
      exemption_indicator:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardThreeDSecureExemptionIndicator'
        description: The exemption requested via 3DS and accepted by the issuer at
          authentication time.
      exemption_indicator_applied:
        description: |-
          Whether Stripe requested the value of `exemption_indicator` in the transaction. This will depend on
          the outcome of Stripe's internal risk assessment.
        type: boolean
      result:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardThreeDSecureResult'
        description: Indicates the outcome of 3D Secure authentication.
      result_reason:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardThreeDSecureResultReason'
        description: |-
          Additional information about why 3D Secure succeeded or failed based
          on the `result`.
      transaction_id:
        description: |-
          The 3D Secure 1 XID or 3D Secure 2 Directory Server Transaction ID
          (dsTransId) for this payment.
        type: string
      version:
        description: The version of 3D Secure that was used.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsCardThreeDSecureAuthenticationFlow:
    enum:
    - challenge
    - frictionless
    type: string
    x-enum-varnames:
    - ChargePaymentMethodDetailsCardThreeDSecureAuthenticationFlowChallenge
    - ChargePaymentMethodDetailsCardThreeDSecureAuthenticationFlowFrictionless
  stripe.ChargePaymentMethodDetailsCardThreeDSecureElectronicCommerceIndicator:
    enum:
    - "01"
    - "02"
    - "05"
    - "06"
    - "07"
    type: string
    x-enum-varnames:
    - ChargePaymentMethodDetailsCardThreeDSecureElectronicCommerceIndicator01
    - ChargePaymentMethodDetailsCardThreeDSecureElectronicCommerceIndicator02
    - ChargePaymentMethodDetailsCardThreeDSecureElectronicCommerceIndicator05
    - ChargePaymentMethodDetailsCardThreeDSecureElectronicCommerceIndicator06
    - ChargePaymentMethodDetailsCardThreeDSecureElectronicCommerceIndicator07
  stripe.ChargePaymentMethodDetailsCardThreeDSecureExemptionIndicator:
    enum:
    - low_risk
    - none
    type: string
    x-enum-varnames:
    - ChargePaymentMethodDetailsCardThreeDSecureExemptionIndicatorLowRisk
    - ChargePaymentMethodDetailsCardThreeDSecureExemptionIndicatorNone
  stripe.ChargePaymentMethodDetailsCardThreeDSecureResult:
    enum:
    - attempt_acknowledged
    - authenticated
    - exempted
    - failed
    - not_supported
    - processing_error
    type: string
    x-enum-varnames:
    - ChargePaymentMethodDetailsCardThreeDSecureResultAttemptAcknowledged
    - ChargePaymentMethodDetailsCardThreeDSecureResultAuthenticated
    - ChargePaymentMethodDetailsCardThreeDSecureResultExempted
    - ChargePaymentMethodDetailsCardThreeDSecureResultFailed
    - ChargePaymentMethodDetailsCardThreeDSecureResultNotSupported
    - ChargePaymentMethodDetailsCardThreeDSecureResultProcessingError
  stripe.ChargePaymentMethodDetailsCardThreeDSecureResultReason:
    enum:
    - abandoned
    - bypassed
    - canceled
    - card_not_enrolled
    - network_not_supported
    - protocol_error
    - rejected
    type: string
    x-enum-varnames:
    - ChargePaymentMethodDetailsCardThreeDSecureResultReasonAbandoned
    - ChargePaymentMethodDetailsCardThreeDSecureResultReasonBypassed
    - ChargePaymentMethodDetailsCardThreeDSecureResultReasonCanceled
    - ChargePaymentMethodDetailsCardThreeDSecureResultReasonCardNotEnrolled
    - ChargePaymentMethodDetailsCardThreeDSecureResultReasonNetworkNotSupported
    - ChargePaymentMethodDetailsCardThreeDSecureResultReasonProtocolError
    - ChargePaymentMethodDetailsCardThreeDSecureResultReasonRejected
  stripe.ChargePaymentMethodDetailsCardWallet:
    properties:
      amex_express_checkout:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardWalletAmexExpressCheckout'
      apple_pay:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardWalletApplePay'
      dynamic_last4:
        description: (For tokenized numbers only.) The last four digits of the device
          account number.
        type: string
      google_pay:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardWalletGooglePay'
      link:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardWalletLink'
      masterpass:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardWalletMasterpass'
      samsung_pay:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardWalletSamsungPay'
      type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodCardWalletType'
        description: The type of the card wallet, one of `amex_express_checkout`,
          `apple_pay`, `google_pay`, `masterpass`, `samsung_pay`, `visa_checkout`,
          or `link`. An additional hash is included on the Wallet subhash with a name
          matching this value. It contains additional information specific to the
          card wallet type.
      visa_checkout:
        $ref: '#/definitions/stripe.ChargePaymentMethodDetailsCardWalletVisaCheckout'
    type: object
  stripe.ChargePaymentMethodDetailsCardWalletAmexExpressCheckout:
    type: object
  stripe.ChargePaymentMethodDetailsCardWalletApplePay:
    type: object
  stripe.ChargePaymentMethodDetailsCardWalletGooglePay:
    type: object
  stripe.ChargePaymentMethodDetailsCardWalletLink:
    type: object
  stripe.ChargePaymentMethodDetailsCardWalletMasterpass:
    properties:
      billing_address:
        allOf:
        - $ref: '#/definitions/stripe.Address'
        description: Owner's verified billing address. Values are verified or provided
          by the wallet directly (if supported) at the time of authorization or settlement.
          They cannot be set or mutated.
      email:
        description: Owner's verified email. Values are verified or provided by the
          wallet directly (if supported) at the time of authorization or settlement.
          They cannot be set or mutated.
        type: string
      name:
        description: Owner's verified full name. Values are verified or provided by
          the wallet directly (if supported) at the time of authorization or settlement.
          They cannot be set or mutated.
        type: string
      shipping_address:
        allOf:
        - $ref: '#/definitions/stripe.Address'
        description: Owner's verified shipping address. Values are verified or provided
          by the wallet directly (if supported) at the time of authorization or settlement.
          They cannot be set or mutated.
    type: object
  stripe.ChargePaymentMethodDetailsCardWalletSamsungPay:
    type: object
  stripe.ChargePaymentMethodDetailsCardWalletVisaCheckout:
    properties:
      billing_address:
        allOf:
        - $ref: '#/definitions/stripe.Address'
        description: Owner's verified billing address. Values are verified or provided
          by the wallet directly (if supported) at the time of authorization or settlement.
          They cannot be set or mutated.
      email:
        description: Owner's verified email. Values are verified or provided by the
          wallet directly (if supported) at the time of authorization or settlement.
          They cannot be set or mutated.
        type: string
      name:
        description: Owner's verified full name. Values are verified or provided by
          the wallet directly (if supported) at the time of authorization or settlement.
          They cannot be set or mutated.
        type: string
      shipping_address:
        allOf:
        - $ref: '#/definitions/stripe.Address'
        description: Owner's verified shipping address. Values are verified or provided
          by the wallet directly (if supported) at the time of authorization or settlement.
          They cannot be set or mutated.
    type: object
  stripe.ChargePaymentMethodDetailsCashApp:
    properties:
      buyer_id:
        description: A unique and immutable identifier assigned by Cash App to every
          buyer.
        type: string
      cashtag:
        description: A public identifier for buyers using Cash App.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsCustomerBalance:
    type: object
  stripe.ChargePaymentMethodDetailsEPS:
    properties:
      bank:
        description: The customer's bank. Should be one of `arzte_und_apotheker_bank`,
          `austrian_anadi_bank_ag`, `bank_austria`, `bankhaus_carl_spangler`, `bankhaus_schelhammer_und_schattera_ag`,
          `bawag_psk_ag`, `bks_bank_ag`, `brull_kallmus_bank_ag`, `btv_vier_lander_bank`,
          `capital_bank_grawe_gruppe_ag`, `deutsche_bank_ag`, `dolomitenbank`, `easybank_ag`,
          `erste_bank_und_sparkassen`, `hypo_alpeadriabank_international_ag`, `hypo_noe_lb_fur_niederosterreich_u_wien`,
          `hypo_oberosterreich_salzburg_steiermark`, `hypo_tirol_bank_ag`, `hypo_vorarlberg_bank_ag`,
          `hypo_bank_burgenland_aktiengesellschaft`, `marchfelder_bank`, `oberbank_ag`,
          `raiffeisen_bankengruppe_osterreich`, `schoellerbank_ag`, `sparda_bank_wien`,
          `volksbank_gruppe`, `volkskreditbank_ag`, or `vr_bank_braunau`.
        type: string
      verified_name:
        description: |-
          Owner's verified full name. Values are verified or provided by EPS directly
          (if supported) at the time of authorization or settlement. They cannot be set or mutated.
          EPS rarely provides this information so the attribute is usually empty.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsFPX:
    properties:
      account_holder_type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodFPXAccountHolderType'
        description: Account holder type, if provided. Can be one of `individual`
          or `company`.
      bank:
        description: The customer's bank. Can be one of `affin_bank`, `agrobank`,
          `alliance_bank`, `ambank`, `bank_islam`, `bank_muamalat`, `bank_rakyat`,
          `bsn`, `cimb`, `hong_leong_bank`, `hsbc`, `kfh`, `maybank2u`, `ocbc`, `public_bank`,
          `rhb`, `standard_chartered`, `uob`, `deutsche_bank`, `maybank2e`, `pb_enterprise`,
          or `bank_of_china`.
        type: string
      transaction_id:
        description: Unique transaction id generated by FPX for every request from
          the merchant
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsGiropay:
    properties:
      bank_code:
        description: Bank code of bank associated with the bank account.
        type: string
      bank_name:
        description: Name of the bank associated with the bank account.
        type: string
      bic:
        description: Bank Identifier Code of the bank associated with the bank account.
        type: string
      verified_name:
        description: |-
          Owner's verified full name. Values are verified or provided by Giropay directly
          (if supported) at the time of authorization or settlement. They cannot be set or mutated.
          Giropay rarely provides this information so the attribute is usually empty.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsGrabpay:
    properties:
      transaction_id:
        description: Unique transaction id generated by GrabPay
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsIDEAL:
    properties:
      bank:
        description: The customer's bank. Can be one of `abn_amro`, `asn_bank`, `bunq`,
          `handelsbanken`, `ing`, `knab`, `moneyou`, `n26`, `nn`, `rabobank`, `regiobank`,
          `revolut`, `sns_bank`, `triodos_bank`, `van_lanschot`, or `yoursafe`.
        type: string
      bic:
        description: The Bank Identifier Code of the customer's bank.
        type: string
      generated_sepa_debit:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethod'
        description: The ID of the SEPA Direct Debit PaymentMethod which was generated
          by this Charge.
      generated_sepa_debit_mandate:
        allOf:
        - $ref: '#/definitions/stripe.Mandate'
        description: The mandate for the SEPA Direct Debit PaymentMethod which was
          generated by this Charge.
      iban_last4:
        description: Last four characters of the IBAN.
        type: string
      verified_name:
        description: |-
          Owner's verified full name. Values are verified or provided by iDEAL directly
          (if supported) at the time of authorization or settlement. They cannot be set or mutated.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsInteracPresent:
    properties:
      brand:
        description: Card brand. Can be `interac`, `mastercard` or `visa`.
        type: string
      cardholder_name:
        description: The cardholder name as read from the card, in [ISO 7813](https://en.wikipedia.org/wiki/ISO/IEC_7813)
          format. May include alphanumeric characters, special characters and first/last
          name separator (`/`). In some cases, the cardholder name may not be available
          depending on how the issuer has configured the card. Cardholder name is
          typically not available on swipe or contactless payments, such as those
          made with Apple Pay and Google Pay.
        type: string
      country:
        description: Two-letter ISO code representing the country of the card. You
          could use this attribute to get a sense of the international breakdown of
          cards you've collected.
        type: string
      description:
        description: |-
          Please note that the fields below are for internal use only and are not returned
          as part of standard API requests.
          A high-level description of the type of cards issued in this range. (For internal use only and not typically available in standard API requests.)
        type: string
      emv_auth_data:
        description: Authorization response cryptogram.
        type: string
      exp_month:
        description: Two-digit number representing the card's expiration month.
        type: integer
      exp_year:
        description: Four-digit number representing the card's expiration year.
        type: integer
      fingerprint:
        description: |-
          Uniquely identifies this particular card number. You can use this attribute to check whether two customers who've signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.

          *As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*
        type: string
      funding:
        description: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
        type: string
      generated_card:
        description: ID of a card PaymentMethod generated from the card_present PaymentMethod
          that may be attached to a Customer for future transactions. Only present
          if it was possible to generate a card PaymentMethod.
        type: string
      iin:
        description: Issuer identification number of the card. (For internal use only
          and not typically available in standard API requests.)
        type: string
      issuer:
        description: The name of the card's issuing bank. (For internal use only and
          not typically available in standard API requests.)
        type: string
      last4:
        description: The last four digits of the card.
        type: string
      network:
        description: Identifies which network this charge was processed on. Can be
          `amex`, `cartes_bancaires`, `diners`, `discover`, `eftpos_au`, `interac`,
          `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
        type: string
      network_transaction_id:
        description: This is used by the financial networks to identify a transaction.
          Visa calls this the Transaction ID, Mastercard calls this the Trace ID,
          and American Express calls this the Acquirer Reference Data. The first three
          digits of the Trace ID is the Financial Network Code, the next 6 digits
          is the Banknet Reference Number, and the last 4 digits represent the date
          (MM/DD). This field will be available for successful Visa, Mastercard, or
          American Express transactions and always null for other card brands.
        type: string
      preferred_locales:
        description: EMV tag 5F2D. Preferred languages specified by the integrated
          circuit chip.
        items:
          type: string
        type: array
      read_method:
        description: How card details were read in this transaction.
        type: string
      receipt:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsInteracPresentReceipt'
        description: A collection of fields required to be displayed on receipts.
          Only required for EMV transactions.
    type: object
  stripe.ChargePaymentMethodDetailsInteracPresentReceipt:
    properties:
      account_type:
        description: The type of account being debited or credited
        type: string
      application_cryptogram:
        description: EMV tag 9F26, cryptogram generated by the integrated circuit
          chip.
        type: string
      application_preferred_name:
        description: Mnenomic of the Application Identifier.
        type: string
      authorization_code:
        description: Identifier for this transaction.
        type: string
      authorization_response_code:
        description: EMV tag 8A. A code returned by the card issuer.
        type: string
      cardholder_verification_method:
        description: 'Describes the method used by the cardholder to verify ownership
          of the card. One of the following: `approval`, `failure`, `none`, `offline_pin`,
          `offline_pin_and_signature`, `online_pin`, or `signature`.'
        type: string
      dedicated_file_name:
        description: EMV tag 84. Similar to the application identifier stored on the
          integrated circuit chip.
        type: string
      terminal_verification_results:
        description: The outcome of a series of EMV functions performed by the card
          reader.
        type: string
      transaction_status_information:
        description: An indication of various EMV functions performed during the transaction.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsKakaoPay:
    properties:
      buyer_id:
        description: A unique identifier for the buyer as determined by the local
          payment processor.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsKlarna:
    properties:
      payer_details:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsKlarnaPayerDetails'
        description: The payer details for this transaction.
      payment_method_category:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsKlarnaPaymentMethodCategory'
        description: |-
          The Klarna payment method used for this transaction.
          Can be one of `pay_later`, `pay_now`, `pay_with_financing`, or `pay_in_installments`
      preferred_locale:
        description: |-
          Preferred language of the Klarna authorization page that the customer is redirected to.
          Can be one of `de-AT`, `en-AT`, `nl-BE`, `fr-BE`, `en-BE`, `de-DE`, `en-DE`, `da-DK`, `en-DK`, `es-ES`, `en-ES`, `fi-FI`, `sv-FI`, `en-FI`, `en-GB`, `en-IE`, `it-IT`, `en-IT`, `nl-NL`, `en-NL`, `nb-NO`, `en-NO`, `sv-SE`, `en-SE`, `en-US`, `es-US`, `fr-FR`, `en-FR`, `cs-CZ`, `en-CZ`, `ro-RO`, `en-RO`, `el-GR`, `en-GR`, `en-AU`, `en-NZ`, `en-CA`, `fr-CA`, `pl-PL`, `en-PL`, `pt-PT`, `en-PT`, `de-CH`, `fr-CH`, `it-CH`, or `en-CH`
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsKlarnaPayerDetails:
    properties:
      address:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsKlarnaPayerDetailsAddress'
        description: The payer's address
    type: object
  stripe.ChargePaymentMethodDetailsKlarnaPayerDetailsAddress:
    properties:
      country:
        description: The payer address country
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsKlarnaPaymentMethodCategory:
    enum:
    - pay_later
    - pay_now
    - pay_with_financing
    - pay_in_installments
    type: string
    x-enum-varnames:
    - ChargePaymentMethodDetailsKlarnaPaymentMethodCategoryPayLater
    - ChargePaymentMethodDetailsKlarnaPaymentMethodCategoryPayNow
    - ChargePaymentMethodDetailsKlarnaPaymentMethodCategoryPayWithFinancing
    - ChargePaymentMethodDetailsKlarnaPaymentMethodCategoryPayInInstallments
  stripe.ChargePaymentMethodDetailsKonbini:
    properties:
      store:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsKonbiniStore'
        description: If the payment succeeded, this contains the details of the convenience
          store where the payment was completed.
    type: object
  stripe.ChargePaymentMethodDetailsKonbiniStore:
    properties:
      chain:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsKonbiniStoreChain'
        description: The name of the convenience store chain where the payment was
          completed.
    type: object
  stripe.ChargePaymentMethodDetailsKonbiniStoreChain:
    enum:
    - familymart
    - lawson
    - ministop
    - seicomart
    type: string
    x-enum-varnames:
    - ChargePaymentMethodDetailsKonbiniStoreChainFamilyMart
    - ChargePaymentMethodDetailsKonbiniStoreChainLawson
    - ChargePaymentMethodDetailsKonbiniStoreChainMinistop
    - ChargePaymentMethodDetailsKonbiniStoreChainSeicomart
  stripe.ChargePaymentMethodDetailsKrCard:
    properties:
      brand:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsKrCardBrand'
        description: The local credit or debit card brand.
      buyer_id:
        description: A unique identifier for the buyer as determined by the local
          payment processor.
        type: string
      last4:
        description: The last four digits of the card. This may not be present for
          American Express cards.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsKrCardBrand:
    enum:
    - bc
    - citi
    - hana
    - hyundai
    - jeju
    - jeonbuk
    - kakaobank
    - kbank
    - kdbbank
    - kookmin
    - kwangju
    - lotte
    - mg
    - nh
    - post
    - samsung
    - savingsbank
    - shinhan
    - shinhyup
    - suhyup
    - tossbank
    - woori
    type: string
    x-enum-varnames:
    - ChargePaymentMethodDetailsKrCardBrandBc
    - ChargePaymentMethodDetailsKrCardBrandCiti
    - ChargePaymentMethodDetailsKrCardBrandHana
    - ChargePaymentMethodDetailsKrCardBrandHyundai
    - ChargePaymentMethodDetailsKrCardBrandJeju
    - ChargePaymentMethodDetailsKrCardBrandJeonbuk
    - ChargePaymentMethodDetailsKrCardBrandKakaobank
    - ChargePaymentMethodDetailsKrCardBrandKbank
    - ChargePaymentMethodDetailsKrCardBrandKdbbank
    - ChargePaymentMethodDetailsKrCardBrandKookmin
    - ChargePaymentMethodDetailsKrCardBrandKwangju
    - ChargePaymentMethodDetailsKrCardBrandLotte
    - ChargePaymentMethodDetailsKrCardBrandMg
    - ChargePaymentMethodDetailsKrCardBrandNh
    - ChargePaymentMethodDetailsKrCardBrandPost
    - ChargePaymentMethodDetailsKrCardBrandSamsung
    - ChargePaymentMethodDetailsKrCardBrandSavingsbank
    - ChargePaymentMethodDetailsKrCardBrandShinhan
    - ChargePaymentMethodDetailsKrCardBrandShinhyup
    - ChargePaymentMethodDetailsKrCardBrandSuhyup
    - ChargePaymentMethodDetailsKrCardBrandTossbank
    - ChargePaymentMethodDetailsKrCardBrandWoori
  stripe.ChargePaymentMethodDetailsLink:
    properties:
      country:
        description: |-
          Two-letter ISO code representing the funding source country beneath the Link payment.
          You could use this attribute to get a sense of international fees.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsMobilepay:
    properties:
      card:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsMobilepayCard'
        description: Internal card details
    type: object
  stripe.ChargePaymentMethodDetailsMobilepayCard:
    properties:
      brand:
        description: Brand of the card used in the transaction
        type: string
      country:
        description: Two-letter ISO code representing the country of the card
        type: string
      exp_month:
        description: Two digit number representing the card's expiration month
        type: integer
      exp_year:
        description: Two digit number representing the card's expiration year
        type: integer
      last4:
        description: The last 4 digits of the card
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsMultibanco:
    properties:
      entity:
        description: Entity number associated with this Multibanco payment.
        type: string
      reference:
        description: Reference number associated with this Multibanco payment.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsNaverPay:
    properties:
      buyer_id:
        description: A unique identifier for the buyer as determined by the local
          payment processor.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsOXXO:
    properties:
      number:
        description: OXXO reference number
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsP24:
    properties:
      bank:
        description: The customer's bank. Can be one of `ing`, `citi_handlowy`, `tmobile_usbugi_bankowe`,
          `plus_bank`, `etransfer_pocztowy24`, `banki_spbdzielcze`, `bank_nowy_bfg_sa`,
          `getin_bank`, `velobank`, `blik`, `noble_pay`, `ideabank`, `envelobank`,
          `santander_przelew24`, `nest_przelew`, `mbank_mtransfer`, `inteligo`, `pbac_z_ipko`,
          `bnp_paribas`, `credit_agricole`, `toyota_bank`, `bank_pekao_sa`, `volkswagen_bank`,
          `bank_millennium`, `alior_bank`, or `boz`.
        type: string
      reference:
        description: Unique reference for this Przelewy24 payment.
        type: string
      verified_name:
        description: |-
          Owner's verified full name. Values are verified or provided by Przelewy24 directly
          (if supported) at the time of authorization or settlement. They cannot be set or mutated.
          Przelewy24 rarely provides this information so the attribute is usually empty.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsPayNow:
    properties:
      reference:
        description: Reference number associated with this PayNow payment
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsPayco:
    properties:
      buyer_id:
        description: A unique identifier for the buyer as determined by the local
          payment processor.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsPaypal:
    properties:
      payer_email:
        description: |-
          Owner's email. Values are provided by PayPal directly
          (if supported) at the time of authorization or settlement. They cannot be set or mutated.
        type: string
      payer_id:
        description: PayPal account PayerID. This identifier uniquely identifies the
          PayPal customer.
        type: string
      payer_name:
        description: |-
          Owner's full name. Values provided by PayPal directly
          (if supported) at the time of authorization or settlement. They cannot be set or mutated.
        type: string
      seller_protection:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsPaypalSellerProtection'
        description: The level of protection offered as defined by PayPal Seller Protection
          for Merchants, for this transaction.
      transaction_id:
        description: A unique ID generated by PayPal for this transaction.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsPaypalSellerProtection:
    properties:
      dispute_categories:
        description: An array of conditions that are covered for the transaction,
          if applicable.
        items:
          $ref: '#/definitions/stripe.ChargePaymentMethodDetailsPaypalSellerProtectionDisputeCategory'
        type: array
      status:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsPaypalSellerProtectionStatus'
        description: Indicates whether the transaction is eligible for PayPal's seller
          protection.
    type: object
  stripe.ChargePaymentMethodDetailsPaypalSellerProtectionDisputeCategory:
    enum:
    - fraudulent
    - product_not_received
    type: string
    x-enum-varnames:
    - ChargePaymentMethodDetailsPaypalSellerProtectionDisputeCategoryFraudulent
    - ChargePaymentMethodDetailsPaypalSellerProtectionDisputeCategoryProductNotReceived
  stripe.ChargePaymentMethodDetailsPaypalSellerProtectionStatus:
    enum:
    - eligible
    - not_eligible
    - partially_eligible
    type: string
    x-enum-varnames:
    - ChargePaymentMethodDetailsPaypalSellerProtectionStatusEligible
    - ChargePaymentMethodDetailsPaypalSellerProtectionStatusNotEligible
    - ChargePaymentMethodDetailsPaypalSellerProtectionStatusPartiallyEligible
  stripe.ChargePaymentMethodDetailsPix:
    properties:
      bank_transaction_id:
        description: Unique transaction id generated by BCB
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsPromptPay:
    properties:
      reference:
        description: Bill reference generated by PromptPay
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsRevolutPay:
    type: object
  stripe.ChargePaymentMethodDetailsSEPACreditTransfer:
    properties:
      bank_name:
        description: Name of the bank associated with the bank account.
        type: string
      bic:
        description: Bank Identifier Code of the bank associated with the bank account.
        type: string
      iban:
        description: IBAN of the bank account to transfer funds to.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsSEPADebit:
    properties:
      bank_code:
        description: Bank code of bank associated with the bank account.
        type: string
      branch_code:
        description: Branch code of bank associated with the bank account.
        type: string
      country:
        description: Two-letter ISO code representing the country the bank account
          is located in.
        type: string
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use
          this attribute to check whether two bank accounts are the same.
        type: string
      last4:
        description: Last four characters of the IBAN.
        type: string
      mandate:
        description: Find the ID of the mandate used for this payment under the [payment_method_details.sepa_debit.mandate](https://stripe.com/docs/api/charges/object#charge_object-payment_method_details-sepa_debit-mandate)
          property on the Charge. Use this mandate ID to [retrieve the Mandate](https://stripe.com/docs/api/mandates/retrieve).
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsSamsungPay:
    properties:
      buyer_id:
        description: A unique identifier for the buyer as determined by the local
          payment processor.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsSofort:
    properties:
      bank_code:
        description: Bank code of bank associated with the bank account.
        type: string
      bank_name:
        description: Name of the bank associated with the bank account.
        type: string
      bic:
        description: Bank Identifier Code of the bank associated with the bank account.
        type: string
      country:
        description: Two-letter ISO code representing the country the bank account
          is located in.
        type: string
      generated_sepa_debit:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethod'
        description: The ID of the SEPA Direct Debit PaymentMethod which was generated
          by this Charge.
      generated_sepa_debit_mandate:
        allOf:
        - $ref: '#/definitions/stripe.Mandate'
        description: The mandate for the SEPA Direct Debit PaymentMethod which was
          generated by this Charge.
      iban_last4:
        description: Last four characters of the IBAN.
        type: string
      preferred_language:
        description: |-
          Preferred language of the SOFORT authorization page that the customer is redirected to.
          Can be one of `de`, `en`, `es`, `fr`, `it`, `nl`, or `pl`
        type: string
      verified_name:
        description: |-
          Owner's verified full name. Values are verified or provided by SOFORT directly
          (if supported) at the time of authorization or settlement. They cannot be set or mutated.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsStripeAccount:
    type: object
  stripe.ChargePaymentMethodDetailsSwish:
    properties:
      fingerprint:
        description: Uniquely identifies the payer's Swish account. You can use this
          attribute to check whether two Swish transactions were paid for by the same
          payer
        type: string
      payment_reference:
        description: Payer bank reference number for the payment
        type: string
      verified_phone_last4:
        description: The last four digits of the Swish account phone number
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsTWINT:
    type: object
  stripe.ChargePaymentMethodDetailsType:
    enum:
    - ach_credit_transfer
    - ach_debit
    - acss_debit
    - alipay
    - au_becs_debit
    - bacs_debit
    - bancontact
    - card
    - card_present
    - eps
    - fpx
    - giropay
    - grabpay
    - ideal
    - interac_present
    - klarna
    - multibanco
    - p24
    - sepa_debit
    - sofort
    - swish
    - stripe_account
    - wechat
    type: string
    x-enum-varnames:
    - ChargePaymentMethodDetailsTypeACHCreditTransfer
    - ChargePaymentMethodDetailsTypeACHDebit
    - ChargePaymentMethodDetailsTypeACSSDebit
    - ChargePaymentMethodDetailsTypeAlipay
    - ChargePaymentMethodDetailsTypeAUBECSDebit
    - ChargePaymentMethodDetailsTypeBACSDebit
    - ChargePaymentMethodDetailsTypeBancontact
    - ChargePaymentMethodDetailsTypeCard
    - ChargePaymentMethodDetailsTypeCardPresent
    - ChargePaymentMethodDetailsTypeEPS
    - ChargePaymentMethodDetailsTypeFPX
    - ChargePaymentMethodDetailsTypeGiropay
    - ChargePaymentMethodDetailsTypeGrabpay
    - ChargePaymentMethodDetailsTypeIDEAL
    - ChargePaymentMethodDetailsTypeInteracPresent
    - ChargePaymentMethodDetailsTypeKlarna
    - ChargePaymentMethodDetailsTypeMultibanco
    - ChargePaymentMethodDetailsTypeP24
    - ChargePaymentMethodDetailsTypeSEPADebit
    - ChargePaymentMethodDetailsTypeSofort
    - ChargePaymentMethodDetailsTypeSwish
    - ChargePaymentMethodDetailsTypeStripeAccount
    - ChargePaymentMethodDetailsTypeWeChat
  stripe.ChargePaymentMethodDetailsUSBankAccount:
    properties:
      account_holder_type:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsUSBankAccountAccountHolderType'
        description: 'Account holder type: individual or company.'
      account_type:
        allOf:
        - $ref: '#/definitions/stripe.ChargePaymentMethodDetailsUSBankAccountAccountType'
        description: 'Account type: checkings or savings. Defaults to checking if
          omitted.'
      bank_name:
        description: Name of the bank associated with the bank account.
        type: string
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use
          this attribute to check whether two bank accounts are the same.
        type: string
      last4:
        description: Last four digits of the bank account number.
        type: string
      mandate:
        allOf:
        - $ref: '#/definitions/stripe.Mandate'
        description: ID of the mandate used to make this payment.
      payment_reference:
        description: Reference number to locate ACH payments with customer's bank.
        type: string
      routing_number:
        description: Routing number of the bank account.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsUSBankAccountAccountHolderType:
    enum:
    - company
    - individual
    type: string
    x-enum-varnames:
    - ChargePaymentMethodDetailsUSBankAccountAccountHolderTypeCompany
    - ChargePaymentMethodDetailsUSBankAccountAccountHolderTypeIndividual
  stripe.ChargePaymentMethodDetailsUSBankAccountAccountType:
    enum:
    - checking
    - savings
    type: string
    x-enum-varnames:
    - ChargePaymentMethodDetailsUSBankAccountAccountTypeChecking
    - ChargePaymentMethodDetailsUSBankAccountAccountTypeSavings
  stripe.ChargePaymentMethodDetailsWeChat:
    type: object
  stripe.ChargePaymentMethodDetailsWeChatPay:
    properties:
      fingerprint:
        description: Uniquely identifies this particular WeChat Pay account. You can
          use this attribute to check whether two WeChat accounts are the same.
        type: string
      transaction_id:
        description: Transaction ID of this particular WeChat Pay transaction.
        type: string
    type: object
  stripe.ChargePaymentMethodDetailsZip:
    type: object
  stripe.ChargeRadarOptions:
    properties:
      session:
        description: A [Radar Session](https://stripe.com/docs/radar/radar-session)
          is a snapshot of the browser metadata and device details that help Radar
          make more accurate predictions on your payments.
        type: string
    type: object
  stripe.ChargeStatus:
    enum:
    - failed
    - pending
    - succeeded
    type: string
    x-enum-varnames:
    - ChargeStatusFailed
    - ChargeStatusPending
    - ChargeStatusSucceeded
  stripe.ChargeTransferData:
    properties:
      amount:
        description: The amount transferred to the destination account, if specified.
          By default, the entire charge amount is transferred to the destination account.
        type: integer
      destination:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: ID of an existing, connected Stripe account to transfer funds
          to if `transfer_data` was specified in the charge request.
    type: object
  stripe.CheckoutSession:
    properties:
      after_expiration:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionAfterExpiration'
        description: When set, provides configuration for actions to take if this
          Checkout Session expires.
      allow_promotion_codes:
        description: Enables user redeemable promotion codes.
        type: boolean
      amount_subtotal:
        description: Total of all items before discounts or taxes are applied.
        type: integer
      amount_total:
        description: Total of all items after discounts and taxes are applied.
        type: integer
      automatic_tax:
        $ref: '#/definitions/stripe.CheckoutSessionAutomaticTax'
      billing_address_collection:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionBillingAddressCollection'
        description: Describes whether Checkout should collect the customer's billing
          address. Defaults to `auto`.
      cancel_url:
        description: If set, Checkout displays a back button and customers will be
          directed to this URL if they decide to cancel payment and return to your
          website.
        type: string
      client_reference_id:
        description: |-
          A unique string to reference the Checkout Session. This can be a
          customer ID, a cart ID, or similar, and can be used to reconcile the
          Session with your internal systems.
        type: string
      client_secret:
        description: Client secret to be used when initializing Stripe.js embedded
          checkout.
        type: string
      consent:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionConsent'
        description: Results of `consent_collection` for this session.
      consent_collection:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionConsentCollection'
        description: When set, provides configuration for the Checkout Session to
          gather active consent from customers.
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      currency_conversion:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionCurrencyConversion'
        description: Currency conversion details for [Adaptive Pricing](https://docs.stripe.com/payments/checkout/adaptive-pricing)
          sessions
      custom_fields:
        description: Collect additional information from your customer using custom
          fields. Up to 3 fields are supported.
        items:
          $ref: '#/definitions/stripe.CheckoutSessionCustomField'
        type: array
      custom_text:
        $ref: '#/definitions/stripe.CheckoutSessionCustomText'
      customer:
        allOf:
        - $ref: '#/definitions/stripe.Customer'
        description: |-
          The ID of the customer for this Session.
          For Checkout Sessions in `subscription` mode or Checkout Sessions with `customer_creation` set as `always` in `payment` mode, Checkout
          will create a new customer object based on information provided
          during the payment flow unless an existing customer was provided when
          the Session was created.
      customer_creation:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionCustomerCreation'
        description: Configure whether a Checkout Session creates a Customer when
          the Checkout Session completes.
      customer_details:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionCustomerDetails'
        description: The customer details including the customer's tax exempt status
          and the customer's tax IDs. Customer's address details are not present on
          Sessions in `setup` mode.
      customer_email:
        description: |-
          If provided, this value will be used when the Customer object is created.
          If not provided, customers will be asked to enter their email address.
          Use this parameter to prefill customer data if you already have an email
          on file. To access information about the customer once the payment flow is
          complete, use the `customer` attribute.
        type: string
      expires_at:
        description: The timestamp at which the Checkout Session will expire.
        type: integer
      id:
        description: Unique identifier for the object.
        type: string
      invoice:
        allOf:
        - $ref: '#/definitions/stripe.Invoice'
        description: ID of the invoice created by the Checkout Session, if it exists.
      invoice_creation:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionInvoiceCreation'
        description: Details on the state of invoice creation for the Checkout Session.
      line_items:
        allOf:
        - $ref: '#/definitions/stripe.LineItemList'
        description: The line items purchased by the customer.
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      locale:
        description: The IETF language tag of the locale Checkout is displayed in.
          If blank or `auto`, the browser's locale is used.
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      mode:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionMode'
        description: The mode of the Checkout Session.
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      payment_intent:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntent'
        description: The ID of the PaymentIntent for Checkout Sessions in `payment`
          mode. You can't confirm or cancel the PaymentIntent for a Checkout Session.
          To cancel, [expire the Checkout Session](https://stripe.com/docs/api/checkout/sessions/expire)
          instead.
      payment_link:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLink'
        description: The ID of the Payment Link that created this Session.
      payment_method_collection:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodCollection'
        description: Configure whether a Checkout Session should collect a payment
          method. Defaults to `always`.
      payment_method_configuration_details:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodConfigurationDetails'
        description: Information about the payment method configuration used for this
          Checkout session if using dynamic payment methods.
      payment_method_options:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptions'
        description: Payment-method-specific configuration for the PaymentIntent or
          SetupIntent of this CheckoutSession.
      payment_method_types:
        description: |-
          A list of the types of payment methods (e.g. card) this Checkout
          Session is allowed to accept.
        items:
          type: string
        type: array
      payment_status:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentStatus'
        description: |-
          The payment status of the Checkout Session, one of `paid`, `unpaid`, or `no_payment_required`.
          You can use this value to decide when to fulfill your customer's order.
      phone_number_collection:
        $ref: '#/definitions/stripe.CheckoutSessionPhoneNumberCollection'
      recovered_from:
        description: The ID of the original expired Checkout Session that triggered
          the recovery flow.
        type: string
      redirect_on_completion:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionRedirectOnCompletion'
        description: 'This parameter applies to `ui_mode: embedded`. Learn more about
          the [redirect behavior](https://stripe.com/docs/payments/checkout/custom-success-page?payment-ui=embedded-form)
          of embedded sessions. Defaults to `always`.'
      return_url:
        description: 'Applies to Checkout Sessions with `ui_mode: embedded`. The URL
          to redirect your customer back to after they authenticate or cancel their
          payment on the payment method''s app or site.'
        type: string
      saved_payment_method_options:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionSavedPaymentMethodOptions'
        description: Controls saved payment method settings for the session. Only
          available in `payment` and `subscription` mode.
      setup_intent:
        allOf:
        - $ref: '#/definitions/stripe.SetupIntent'
        description: The ID of the SetupIntent for Checkout Sessions in `setup` mode.
          You can't confirm or cancel the SetupIntent for a Checkout Session. To cancel,
          [expire the Checkout Session](https://stripe.com/docs/api/checkout/sessions/expire)
          instead.
      shipping_address_collection:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionShippingAddressCollection'
        description: When set, provides configuration for Checkout to collect a shipping
          address from a customer.
      shipping_cost:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionShippingCost'
        description: The details of the customer cost of shipping, including the customer
          chosen ShippingRate.
      shipping_details:
        allOf:
        - $ref: '#/definitions/stripe.ShippingDetails'
        description: Shipping information for this Checkout Session.
      shipping_options:
        description: The shipping rate options applied to this Session.
        items:
          $ref: '#/definitions/stripe.CheckoutSessionShippingOption'
        type: array
      status:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionStatus'
        description: The status of the Checkout Session, one of `open`, `complete`,
          or `expired`.
      submit_type:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionSubmitType'
        description: |-
          Describes the type of transaction being performed by Checkout in order to customize
          relevant text on the page, such as the submit button. `submit_type` can only be
          specified on Checkout Sessions in `payment` mode. If blank or `auto`, `pay` is used.
      subscription:
        allOf:
        - $ref: '#/definitions/stripe.Subscription'
        description: The ID of the subscription for Checkout Sessions in `subscription`
          mode.
      success_url:
        description: |-
          The URL the customer will be directed to after the payment or
          subscription creation is successful.
        type: string
      tax_id_collection:
        $ref: '#/definitions/stripe.CheckoutSessionTaxIDCollection'
      total_details:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionTotalDetails'
        description: Tax and discount details for the computed total amount.
      ui_mode:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionUIMode'
        description: The UI mode of the Session. Defaults to `hosted`.
      url:
        description: |-
          The URL to the Checkout Session. Redirect customers to this URL to take them to Checkout. If you're using [Custom Domains](https://stripe.com/docs/payments/checkout/custom-domains), the URL will use your subdomain. Otherwise, it'll use `checkout.stripe.com.`
          This value is only present when the session is active.
        type: string
    type: object
  stripe.CheckoutSessionAfterExpiration:
    properties:
      recovery:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionAfterExpirationRecovery'
        description: When set, configuration used to recover the Checkout Session
          on expiry.
    type: object
  stripe.CheckoutSessionAfterExpirationRecovery:
    properties:
      allow_promotion_codes:
        description: Enables user redeemable promotion codes on the recovered Checkout
          Sessions. Defaults to `false`
        type: boolean
      enabled:
        description: |-
          If `true`, a recovery url will be generated to recover this Checkout Session if it
          expires before a transaction is completed. It will be attached to the
          Checkout Session object upon expiration.
        type: boolean
      expires_at:
        description: The timestamp at which the recovery URL will expire.
        type: integer
      url:
        description: URL that creates a new Checkout Session when clicked that is
          a copy of this expired Checkout Session
        type: string
    type: object
  stripe.CheckoutSessionAutomaticTax:
    properties:
      enabled:
        description: Indicates whether automatic tax is enabled for the session
        type: boolean
      liability:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionAutomaticTaxLiability'
        description: The account that's liable for tax. If set, the business address
          and tax registrations required to perform the tax calculation are loaded
          from this account. The tax transaction is returned in the report of the
          connected account.
      status:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionAutomaticTaxStatus'
        description: The status of the most recent automated tax calculation for this
          session.
    type: object
  stripe.CheckoutSessionAutomaticTaxLiability:
    properties:
      account:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The connected account being referenced when `type` is `account`.
      type:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionAutomaticTaxLiabilityType'
        description: Type of the account referenced.
    type: object
  stripe.CheckoutSessionAutomaticTaxLiabilityType:
    enum:
    - account
    - self
    type: string
    x-enum-varnames:
    - CheckoutSessionAutomaticTaxLiabilityTypeAccount
    - CheckoutSessionAutomaticTaxLiabilityTypeSelf
  stripe.CheckoutSessionAutomaticTaxStatus:
    enum:
    - complete
    - failed
    - requires_location_inputs
    type: string
    x-enum-varnames:
    - CheckoutSessionAutomaticTaxStatusComplete
    - CheckoutSessionAutomaticTaxStatusFailed
    - CheckoutSessionAutomaticTaxStatusRequiresLocationInputs
  stripe.CheckoutSessionBillingAddressCollection:
    enum:
    - auto
    - required
    type: string
    x-enum-varnames:
    - CheckoutSessionBillingAddressCollectionAuto
    - CheckoutSessionBillingAddressCollectionRequired
  stripe.CheckoutSessionConsent:
    properties:
      promotions:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionConsentPromotions'
        description: |-
          If `opt_in`, the customer consents to receiving promotional communications
          from the merchant about this Checkout Session.
      terms_of_service:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionConsentTermsOfService'
        description: If `accepted`, the customer in this Checkout Session has agreed
          to the merchant's terms of service.
    type: object
  stripe.CheckoutSessionConsentCollection:
    properties:
      payment_method_reuse_agreement:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionConsentCollectionPaymentMethodReuseAgreement'
        description: If set to `hidden`, it will hide legal text related to the reuse
          of a payment method.
      promotions:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionConsentCollectionPromotions'
        description: |-
          If set to `auto`, enables the collection of customer consent for promotional communications. The Checkout
          Session will determine whether to display an option to opt into promotional communication
          from the merchant depending on the customer's locale. Only available to US merchants.
      terms_of_service:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionConsentCollectionTermsOfService'
        description: If set to `required`, it requires customers to accept the terms
          of service before being able to pay.
    type: object
  stripe.CheckoutSessionConsentCollectionPaymentMethodReuseAgreement:
    properties:
      position:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionConsentCollectionPaymentMethodReuseAgreementPosition'
        description: |-
          Determines the position and visibility of the payment method reuse agreement in the UI. When set to `auto`, Stripe's defaults will be used.

          When set to `hidden`, the payment method reuse agreement text will always be hidden in the UI.
    type: object
  stripe.CheckoutSessionConsentCollectionPaymentMethodReuseAgreementPosition:
    enum:
    - auto
    - hidden
    type: string
    x-enum-varnames:
    - CheckoutSessionConsentCollectionPaymentMethodReuseAgreementPositionAuto
    - CheckoutSessionConsentCollectionPaymentMethodReuseAgreementPositionHidden
  stripe.CheckoutSessionConsentCollectionPromotions:
    enum:
    - auto
    - none
    type: string
    x-enum-varnames:
    - CheckoutSessionConsentCollectionPromotionsAuto
    - CheckoutSessionConsentCollectionPromotionsNone
  stripe.CheckoutSessionConsentCollectionTermsOfService:
    enum:
    - none
    - required
    type: string
    x-enum-varnames:
    - CheckoutSessionConsentCollectionTermsOfServiceNone
    - CheckoutSessionConsentCollectionTermsOfServiceRequired
  stripe.CheckoutSessionConsentPromotions:
    enum:
    - opt_in
    - opt_out
    type: string
    x-enum-varnames:
    - CheckoutSessionConsentPromotionsOptIn
    - CheckoutSessionConsentPromotionsOptOut
  stripe.CheckoutSessionConsentTermsOfService:
    enum:
    - accepted
    type: string
    x-enum-varnames:
    - CheckoutSessionConsentTermsOfServiceAccepted
  stripe.CheckoutSessionCurrencyConversion:
    properties:
      amount_subtotal:
        description: Total of all items in source currency before discounts or taxes
          are applied.
        type: integer
      amount_total:
        description: Total of all items in source currency after discounts and taxes
          are applied.
        type: integer
      fx_rate:
        description: Exchange rate used to convert source currency amounts to customer
          currency amounts
        example: "0"
        type: string
      source_currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Creation currency of the CheckoutSession before localization
    type: object
  stripe.CheckoutSessionCustomField:
    properties:
      dropdown:
        $ref: '#/definitions/stripe.CheckoutSessionCustomFieldDropdown'
      key:
        description: String of your choice that your integration can use to reconcile
          this field. Must be unique to this field, alphanumeric, and up to 200 characters.
        type: string
      label:
        $ref: '#/definitions/stripe.CheckoutSessionCustomFieldLabel'
      numeric:
        $ref: '#/definitions/stripe.CheckoutSessionCustomFieldNumeric'
      optional:
        description: Whether the customer is required to complete the field before
          completing the Checkout Session. Defaults to `false`.
        type: boolean
      text:
        $ref: '#/definitions/stripe.CheckoutSessionCustomFieldText'
      type:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionCustomFieldType'
        description: The type of the field.
    type: object
  stripe.CheckoutSessionCustomFieldDropdown:
    properties:
      default_value:
        description: The value that will pre-fill on the payment page.
        type: string
      options:
        description: The options available for the customer to select. Up to 200 options
          allowed.
        items:
          $ref: '#/definitions/stripe.CheckoutSessionCustomFieldDropdownOption'
        type: array
      value:
        description: The option selected by the customer. This will be the `value`
          for the option.
        type: string
    type: object
  stripe.CheckoutSessionCustomFieldDropdownOption:
    properties:
      label:
        description: The label for the option, displayed to the customer. Up to 100
          characters.
        type: string
      value:
        description: The value for this option, not displayed to the customer, used
          by your integration to reconcile the option selected by the customer. Must
          be unique to this option, alphanumeric, and up to 100 characters.
        type: string
    type: object
  stripe.CheckoutSessionCustomFieldLabel:
    properties:
      custom:
        description: Custom text for the label, displayed to the customer. Up to 50
          characters.
        type: string
      type:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionCustomFieldLabelType'
        description: The type of the label.
    type: object
  stripe.CheckoutSessionCustomFieldLabelType:
    enum:
    - custom
    type: string
    x-enum-varnames:
    - CheckoutSessionCustomFieldLabelTypeCustom
  stripe.CheckoutSessionCustomFieldNumeric:
    properties:
      default_value:
        description: The value that will pre-fill the field on the payment page.
        type: string
      maximum_length:
        description: The maximum character length constraint for the customer's input.
        type: integer
      minimum_length:
        description: The minimum character length requirement for the customer's input.
        type: integer
      value:
        description: The value entered by the customer, containing only digits.
        type: string
    type: object
  stripe.CheckoutSessionCustomFieldText:
    properties:
      default_value:
        description: The value that will pre-fill the field on the payment page.
        type: string
      maximum_length:
        description: The maximum character length constraint for the customer's input.
        type: integer
      minimum_length:
        description: The minimum character length requirement for the customer's input.
        type: integer
      value:
        description: The value entered by the customer.
        type: string
    type: object
  stripe.CheckoutSessionCustomFieldType:
    enum:
    - dropdown
    - numeric
    - text
    type: string
    x-enum-varnames:
    - CheckoutSessionCustomFieldTypeDropdown
    - CheckoutSessionCustomFieldTypeNumeric
    - CheckoutSessionCustomFieldTypeText
  stripe.CheckoutSessionCustomText:
    properties:
      after_submit:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionCustomTextAfterSubmit'
        description: Custom text that should be displayed after the payment confirmation
          button.
      shipping_address:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionCustomTextShippingAddress'
        description: Custom text that should be displayed alongside shipping address
          collection.
      submit:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionCustomTextSubmit'
        description: Custom text that should be displayed alongside the payment confirmation
          button.
      terms_of_service_acceptance:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionCustomTextTermsOfServiceAcceptance'
        description: Custom text that should be displayed in place of the default
          terms of service agreement text.
    type: object
  stripe.CheckoutSessionCustomTextAfterSubmit:
    properties:
      message:
        description: Text may be up to 1200 characters in length.
        type: string
    type: object
  stripe.CheckoutSessionCustomTextShippingAddress:
    properties:
      message:
        description: Text may be up to 1200 characters in length.
        type: string
    type: object
  stripe.CheckoutSessionCustomTextSubmit:
    properties:
      message:
        description: Text may be up to 1200 characters in length.
        type: string
    type: object
  stripe.CheckoutSessionCustomTextTermsOfServiceAcceptance:
    properties:
      message:
        description: Text may be up to 1200 characters in length.
        type: string
    type: object
  stripe.CheckoutSessionCustomerCreation:
    enum:
    - always
    - if_required
    type: string
    x-enum-varnames:
    - CheckoutSessionCustomerCreationAlways
    - CheckoutSessionCustomerCreationIfRequired
  stripe.CheckoutSessionCustomerDetails:
    properties:
      address:
        allOf:
        - $ref: '#/definitions/stripe.Address'
        description: 'The customer''s address after a completed Checkout Session.
          Note: This property is populated only for sessions on or after March 30,
          2022.'
      email:
        description: |-
          The email associated with the Customer, if one exists, on the Checkout Session after a completed Checkout Session or at time of session expiry.
          Otherwise, if the customer has consented to promotional content, this value is the most recent valid email provided by the customer on the Checkout form.
        type: string
      name:
        description: 'The customer''s name after a completed Checkout Session. Note:
          This property is populated only for sessions on or after March 30, 2022.'
        type: string
      phone:
        description: The customer's phone number after a completed Checkout Session.
        type: string
      tax_exempt:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionCustomerDetailsTaxExempt'
        description: The customer's tax exempt status after a completed Checkout Session.
      tax_ids:
        description: The customer's tax IDs after a completed Checkout Session.
        items:
          $ref: '#/definitions/stripe.CheckoutSessionCustomerDetailsTaxID'
        type: array
    type: object
  stripe.CheckoutSessionCustomerDetailsTaxExempt:
    enum:
    - exempt
    - none
    - reverse
    type: string
    x-enum-varnames:
    - CheckoutSessionCustomerDetailsTaxExemptExempt
    - CheckoutSessionCustomerDetailsTaxExemptNone
    - CheckoutSessionCustomerDetailsTaxExemptReverse
  stripe.CheckoutSessionCustomerDetailsTaxID:
    properties:
      type:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionCustomerDetailsTaxIDType'
        description: The type of the tax ID, one of `ad_nrt`, `ar_cuit`, `eu_vat`,
          `bo_tin`, `br_cnpj`, `br_cpf`, `cn_tin`, `co_nit`, `cr_tin`, `do_rcn`, `ec_ruc`,
          `eu_oss_vat`, `hr_oib`, `pe_ruc`, `ro_tin`, `rs_pib`, `sv_nit`, `uy_ruc`,
          `ve_rif`, `vn_tin`, `gb_vat`, `nz_gst`, `au_abn`, `au_arn`, `in_gst`, `no_vat`,
          `no_voec`, `za_vat`, `ch_vat`, `mx_rfc`, `sg_uen`, `ru_inn`, `ru_kpp`, `ca_bn`,
          `hk_br`, `es_cif`, `tw_vat`, `th_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `li_uid`,
          `my_itn`, `us_ein`, `kr_brn`, `ca_qst`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`,
          `ca_pst_sk`, `my_sst`, `sg_gst`, `ae_trn`, `cl_tin`, `sa_vat`, `id_npwp`,
          `my_frp`, `il_vat`, `ge_vat`, `ua_vat`, `is_vat`, `bg_uic`, `hu_tin`, `si_tin`,
          `ke_pin`, `tr_tin`, `eg_tin`, `ph_tin`, `bh_vat`, `kz_bin`, `ng_tin`, `om_vat`,
          `de_stn`, `ch_uid`, `tz_vat`, `uz_vat`, `uz_tin`, `md_vat`, `ma_vat`, `by_tin`,
          or `unknown`
      value:
        description: The value of the tax ID.
        type: string
    type: object
  stripe.CheckoutSessionCustomerDetailsTaxIDType:
    enum:
    - ad_nrt
    - ae_trn
    - ar_cuit
    - au_abn
    - au_arn
    - bg_uic
    - bh_vat
    - bo_tin
    - br_cnpj
    - br_cpf
    - by_tin
    - ca_bn
    - ca_gst_hst
    - ca_pst_bc
    - ca_pst_mb
    - ca_pst_sk
    - ca_qst
    - ch_uid
    - ch_vat
    - cl_tin
    - cn_tin
    - co_nit
    - cr_tin
    - de_stn
    - do_rcn
    - ec_ruc
    - eg_tin
    - es_cif
    - eu_oss_vat
    - eu_vat
    - gb_vat
    - ge_vat
    - hk_br
    - hr_oib
    - hu_tin
    - id_npwp
    - il_vat
    - in_gst
    - is_vat
    - jp_cn
    - jp_rn
    - jp_trn
    - ke_pin
    - kr_brn
    - kz_bin
    - li_uid
    - ma_vat
    - md_vat
    - mx_rfc
    - my_frp
    - my_itn
    - my_sst
    - ng_tin
    - no_vat
    - no_voec
    - nz_gst
    - om_vat
    - pe_ruc
    - ph_tin
    - ro_tin
    - rs_pib
    - ru_inn
    - ru_kpp
    - sa_vat
    - sg_gst
    - sg_uen
    - si_tin
    - sv_nit
    - th_vat
    - tr_tin
    - tw_vat
    - tz_vat
    - ua_vat
    - unknown
    - us_ein
    - uy_ruc
    - uz_tin
    - uz_vat
    - ve_rif
    - vn_tin
    - za_vat
    type: string
    x-enum-varnames:
    - CheckoutSessionCustomerDetailsTaxIDTypeADNRT
    - CheckoutSessionCustomerDetailsTaxIDTypeAETRN
    - CheckoutSessionCustomerDetailsTaxIDTypeARCUIT
    - CheckoutSessionCustomerDetailsTaxIDTypeAUABN
    - CheckoutSessionCustomerDetailsTaxIDTypeAUARN
    - CheckoutSessionCustomerDetailsTaxIDTypeBGUIC
    - CheckoutSessionCustomerDetailsTaxIDTypeBhVAT
    - CheckoutSessionCustomerDetailsTaxIDTypeBOTIN
    - CheckoutSessionCustomerDetailsTaxIDTypeBRCNPJ
    - CheckoutSessionCustomerDetailsTaxIDTypeBRCPF
    - CheckoutSessionCustomerDetailsTaxIDTypeByTin
    - CheckoutSessionCustomerDetailsTaxIDTypeCABN
    - CheckoutSessionCustomerDetailsTaxIDTypeCAGSTHST
    - CheckoutSessionCustomerDetailsTaxIDTypeCAPSTBC
    - CheckoutSessionCustomerDetailsTaxIDTypeCAPSTMB
    - CheckoutSessionCustomerDetailsTaxIDTypeCAPSTSK
    - CheckoutSessionCustomerDetailsTaxIDTypeCAQST
    - CheckoutSessionCustomerDetailsTaxIDTypeCHUID
    - CheckoutSessionCustomerDetailsTaxIDTypeCHVAT
    - CheckoutSessionCustomerDetailsTaxIDTypeCLTIN
    - CheckoutSessionCustomerDetailsTaxIDTypeCNTIN
    - CheckoutSessionCustomerDetailsTaxIDTypeCONIT
    - CheckoutSessionCustomerDetailsTaxIDTypeCRTIN
    - CheckoutSessionCustomerDetailsTaxIDTypeDEStn
    - CheckoutSessionCustomerDetailsTaxIDTypeDORCN
    - CheckoutSessionCustomerDetailsTaxIDTypeECRUC
    - CheckoutSessionCustomerDetailsTaxIDTypeEGTIN
    - CheckoutSessionCustomerDetailsTaxIDTypeESCIF
    - CheckoutSessionCustomerDetailsTaxIDTypeEUOSSVAT
    - CheckoutSessionCustomerDetailsTaxIDTypeEUVAT
    - CheckoutSessionCustomerDetailsTaxIDTypeGBVAT
    - CheckoutSessionCustomerDetailsTaxIDTypeGEVAT
    - CheckoutSessionCustomerDetailsTaxIDTypeHKBR
    - CheckoutSessionCustomerDetailsTaxIDTypeHROIB
    - CheckoutSessionCustomerDetailsTaxIDTypeHUTIN
    - CheckoutSessionCustomerDetailsTaxIDTypeIDNPWP
    - CheckoutSessionCustomerDetailsTaxIDTypeILVAT
    - CheckoutSessionCustomerDetailsTaxIDTypeINGST
    - CheckoutSessionCustomerDetailsTaxIDTypeISVAT
    - CheckoutSessionCustomerDetailsTaxIDTypeJPCN
    - CheckoutSessionCustomerDetailsTaxIDTypeJPRN
    - CheckoutSessionCustomerDetailsTaxIDTypeJPTRN
    - CheckoutSessionCustomerDetailsTaxIDTypeKEPIN
    - CheckoutSessionCustomerDetailsTaxIDTypeKRBRN
    - CheckoutSessionCustomerDetailsTaxIDTypeKzBin
    - CheckoutSessionCustomerDetailsTaxIDTypeLIUID
    - CheckoutSessionCustomerDetailsTaxIDTypeMaVAT
    - CheckoutSessionCustomerDetailsTaxIDTypeMdVAT
    - CheckoutSessionCustomerDetailsTaxIDTypeMXRFC
    - CheckoutSessionCustomerDetailsTaxIDTypeMYFRP
    - CheckoutSessionCustomerDetailsTaxIDTypeMYITN
    - CheckoutSessionCustomerDetailsTaxIDTypeMYSST
    - CheckoutSessionCustomerDetailsTaxIDTypeNgTin
    - CheckoutSessionCustomerDetailsTaxIDTypeNOVAT
    - CheckoutSessionCustomerDetailsTaxIDTypeNOVOEC
    - CheckoutSessionCustomerDetailsTaxIDTypeNZGST
    - CheckoutSessionCustomerDetailsTaxIDTypeOmVAT
    - CheckoutSessionCustomerDetailsTaxIDTypePERUC
    - CheckoutSessionCustomerDetailsTaxIDTypePHTIN
    - CheckoutSessionCustomerDetailsTaxIDTypeROTIN
    - CheckoutSessionCustomerDetailsTaxIDTypeRSPIB
    - CheckoutSessionCustomerDetailsTaxIDTypeRUINN
    - CheckoutSessionCustomerDetailsTaxIDTypeRUKPP
    - CheckoutSessionCustomerDetailsTaxIDTypeSAVAT
    - CheckoutSessionCustomerDetailsTaxIDTypeSGGST
    - CheckoutSessionCustomerDetailsTaxIDTypeSGUEN
    - CheckoutSessionCustomerDetailsTaxIDTypeSITIN
    - CheckoutSessionCustomerDetailsTaxIDTypeSVNIT
    - CheckoutSessionCustomerDetailsTaxIDTypeTHVAT
    - CheckoutSessionCustomerDetailsTaxIDTypeTRTIN
    - CheckoutSessionCustomerDetailsTaxIDTypeTWVAT
    - CheckoutSessionCustomerDetailsTaxIDTypeTzVAT
    - CheckoutSessionCustomerDetailsTaxIDTypeUAVAT
    - CheckoutSessionCustomerDetailsTaxIDTypeUnknown
    - CheckoutSessionCustomerDetailsTaxIDTypeUSEIN
    - CheckoutSessionCustomerDetailsTaxIDTypeUYRUC
    - CheckoutSessionCustomerDetailsTaxIDTypeUzTin
    - CheckoutSessionCustomerDetailsTaxIDTypeUzVAT
    - CheckoutSessionCustomerDetailsTaxIDTypeVERIF
    - CheckoutSessionCustomerDetailsTaxIDTypeVNTIN
    - CheckoutSessionCustomerDetailsTaxIDTypeZAVAT
  stripe.CheckoutSessionInvoiceCreation:
    properties:
      enabled:
        description: Indicates whether invoice creation is enabled for the Checkout
          Session.
        type: boolean
      invoice_data:
        $ref: '#/definitions/stripe.CheckoutSessionInvoiceCreationInvoiceData'
    type: object
  stripe.CheckoutSessionInvoiceCreationInvoiceData:
    properties:
      account_tax_ids:
        description: The account tax IDs associated with the invoice.
        items:
          $ref: '#/definitions/stripe.TaxID'
        type: array
      custom_fields:
        description: Custom fields displayed on the invoice.
        items:
          $ref: '#/definitions/stripe.CheckoutSessionInvoiceCreationInvoiceDataCustomField'
        type: array
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      footer:
        description: Footer displayed on the invoice.
        type: string
      issuer:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionInvoiceCreationInvoiceDataIssuer'
        description: The connected account that issues the invoice. The invoice is
          presented with the branding and support information of the specified account.
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      rendering_options:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionInvoiceCreationInvoiceDataRenderingOptions'
        description: Options for invoice PDF rendering.
    type: object
  stripe.CheckoutSessionInvoiceCreationInvoiceDataCustomField:
    properties:
      name:
        description: The name of the custom field.
        type: string
      value:
        description: The value of the custom field.
        type: string
    type: object
  stripe.CheckoutSessionInvoiceCreationInvoiceDataIssuer:
    properties:
      account:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The connected account being referenced when `type` is `account`.
      type:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionInvoiceCreationInvoiceDataIssuerType'
        description: Type of the account referenced.
    type: object
  stripe.CheckoutSessionInvoiceCreationInvoiceDataIssuerType:
    enum:
    - account
    - self
    type: string
    x-enum-varnames:
    - CheckoutSessionInvoiceCreationInvoiceDataIssuerTypeAccount
    - CheckoutSessionInvoiceCreationInvoiceDataIssuerTypeSelf
  stripe.CheckoutSessionInvoiceCreationInvoiceDataRenderingOptions:
    properties:
      amount_tax_display:
        description: How line-item prices and amounts will be displayed with respect
          to tax on invoice PDFs.
        type: string
    type: object
  stripe.CheckoutSessionMode:
    enum:
    - payment
    - setup
    - subscription
    type: string
    x-enum-varnames:
    - CheckoutSessionModePayment
    - CheckoutSessionModeSetup
    - CheckoutSessionModeSubscription
  stripe.CheckoutSessionPaymentMethodCollection:
    enum:
    - always
    - if_required
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodCollectionAlways
    - CheckoutSessionPaymentMethodCollectionIfRequired
  stripe.CheckoutSessionPaymentMethodConfigurationDetails:
    properties:
      id:
        description: ID of the payment method configuration used.
        type: string
      parent:
        description: ID of the parent payment method configuration used.
        type: string
    type: object
  stripe.CheckoutSessionPaymentMethodOptions:
    properties:
      acss_debit:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsACSSDebit'
      affirm:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsAffirm'
      afterpay_clearpay:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsAfterpayClearpay'
      alipay:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsAlipay'
      amazon_pay:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsAmazonPay'
      au_becs_debit:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsAUBECSDebit'
      bacs_debit:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsBACSDebit'
      bancontact:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsBancontact'
      boleto:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsBoleto'
      card:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsCard'
      cashapp:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsCashApp'
      customer_balance:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsCustomerBalance'
      eps:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsEPS'
      fpx:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsFPX'
      giropay:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsGiropay'
      grabpay:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsGrabpay'
      ideal:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsIDEAL'
      kakao_pay:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsKakaoPay'
      klarna:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsKlarna'
      konbini:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsKonbini'
      kr_card:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsKrCard'
      link:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsLink'
      mobilepay:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsMobilepay'
      multibanco:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsMultibanco'
      naver_pay:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsNaverPay'
      oxxo:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsOXXO'
      p24:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsP24'
      payco:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsPayco'
      paynow:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsPayNow'
      paypal:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsPaypal'
      pix:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsPix'
      revolut_pay:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsRevolutPay'
      samsung_pay:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsSamsungPay'
      sepa_debit:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsSEPADebit'
      sofort:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsSofort'
      swish:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsSwish'
      us_bank_account:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsUSBankAccount'
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsACSSDebit:
    properties:
      currency:
        type: string
      mandate_options:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsACSSDebitMandateOptions'
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsACSSDebitSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
      verification_method:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsACSSDebitVerificationMethod'
        description: Bank account verification method.
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsACSSDebitMandateOptions:
    properties:
      custom_mandate_url:
        description: A URL for custom mandate text
        type: string
      default_for:
        description: List of Stripe products where this mandate can be selected automatically.
          Returned when the Session is in `setup` mode.
        items:
          $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsACSSDebitMandateOptionsDefaultFor'
        type: array
      interval_description:
        description: Description of the interval. Only required if the 'payment_schedule'
          parameter is 'interval' or 'combined'.
        type: string
      payment_schedule:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsACSSDebitMandateOptionsPaymentSchedule'
        description: Payment schedule for the mandate.
      transaction_type:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsACSSDebitMandateOptionsTransactionType'
        description: Transaction type of the mandate.
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsACSSDebitMandateOptionsDefaultFor:
    enum:
    - invoice
    - subscription
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsACSSDebitMandateOptionsDefaultForInvoice
    - CheckoutSessionPaymentMethodOptionsACSSDebitMandateOptionsDefaultForSubscription
  stripe.CheckoutSessionPaymentMethodOptionsACSSDebitMandateOptionsPaymentSchedule:
    enum:
    - combined
    - interval
    - sporadic
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsACSSDebitMandateOptionsPaymentScheduleCombined
    - CheckoutSessionPaymentMethodOptionsACSSDebitMandateOptionsPaymentScheduleInterval
    - CheckoutSessionPaymentMethodOptionsACSSDebitMandateOptionsPaymentScheduleSporadic
  stripe.CheckoutSessionPaymentMethodOptionsACSSDebitMandateOptionsTransactionType:
    enum:
    - business
    - personal
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsACSSDebitMandateOptionsTransactionTypeBusiness
    - CheckoutSessionPaymentMethodOptionsACSSDebitMandateOptionsTransactionTypePersonal
  stripe.CheckoutSessionPaymentMethodOptionsACSSDebitSetupFutureUsage:
    enum:
    - none
    - off_session
    - on_session
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsACSSDebitSetupFutureUsageNone
    - CheckoutSessionPaymentMethodOptionsACSSDebitSetupFutureUsageOffSession
    - CheckoutSessionPaymentMethodOptionsACSSDebitSetupFutureUsageOnSession
  stripe.CheckoutSessionPaymentMethodOptionsACSSDebitVerificationMethod:
    enum:
    - automatic
    - instant
    - microdeposits
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsACSSDebitVerificationMethodAutomatic
    - CheckoutSessionPaymentMethodOptionsACSSDebitVerificationMethodInstant
    - CheckoutSessionPaymentMethodOptionsACSSDebitVerificationMethodMicrodeposits
  stripe.CheckoutSessionPaymentMethodOptionsAUBECSDebit:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsAUBECSDebitSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsAUBECSDebitSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsAUBECSDebitSetupFutureUsageNone
  stripe.CheckoutSessionPaymentMethodOptionsAffirm:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsAffirmSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsAffirmSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsAffirmSetupFutureUsageNone
  stripe.CheckoutSessionPaymentMethodOptionsAfterpayClearpay:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsAfterpayClearpaySetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsAfterpayClearpaySetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsAfterpayClearpaySetupFutureUsageNone
  stripe.CheckoutSessionPaymentMethodOptionsAlipay:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsAlipaySetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsAlipaySetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsAlipaySetupFutureUsageNone
  stripe.CheckoutSessionPaymentMethodOptionsAmazonPay:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsAmazonPaySetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsAmazonPaySetupFutureUsage:
    enum:
    - none
    - off_session
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsAmazonPaySetupFutureUsageNone
    - CheckoutSessionPaymentMethodOptionsAmazonPaySetupFutureUsageOffSession
  stripe.CheckoutSessionPaymentMethodOptionsBACSDebit:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsBACSDebitSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsBACSDebitSetupFutureUsage:
    enum:
    - none
    - off_session
    - on_session
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsBACSDebitSetupFutureUsageNone
    - CheckoutSessionPaymentMethodOptionsBACSDebitSetupFutureUsageOffSession
    - CheckoutSessionPaymentMethodOptionsBACSDebitSetupFutureUsageOnSession
  stripe.CheckoutSessionPaymentMethodOptionsBancontact:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsBancontactSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsBancontactSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsBancontactSetupFutureUsageNone
  stripe.CheckoutSessionPaymentMethodOptionsBoleto:
    properties:
      expires_after_days:
        description: The number of calendar days before a Boleto voucher expires.
          For example, if you create a Boleto voucher on Monday and you set expires_after_days
          to 2, the Boleto voucher will expire on Wednesday at 23:59 America/Sao_Paulo
          time.
        type: integer
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsBoletoSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsBoletoSetupFutureUsage:
    enum:
    - none
    - off_session
    - on_session
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsBoletoSetupFutureUsageNone
    - CheckoutSessionPaymentMethodOptionsBoletoSetupFutureUsageOffSession
    - CheckoutSessionPaymentMethodOptionsBoletoSetupFutureUsageOnSession
  stripe.CheckoutSessionPaymentMethodOptionsCard:
    properties:
      installments:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsCardInstallments'
      request_three_d_secure:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsCardRequestThreeDSecure'
        description: We strongly recommend that you rely on our SCA Engine to automatically
          prompt your customers for authentication based on risk level and [other
          requirements](https://stripe.com/docs/strong-customer-authentication). However,
          if you wish to request 3D Secure based on logic from your own fraud engine,
          provide this option. If not provided, this value defaults to `automatic`.
          Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds)
          for more information on how this configuration interacts with Radar and
          our SCA Engine.
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsCardSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
      statement_descriptor_suffix_kana:
        description: Provides information about a card payment that customers see
          on their statements. Concatenated with the Kana prefix (shortened Kana descriptor)
          or Kana statement descriptor that's set on the account to form the complete
          statement descriptor. Maximum 22 characters. On card statements, the *concatenation*
          of both prefix and suffix (including separators) will appear truncated to
          22 characters.
        type: string
      statement_descriptor_suffix_kanji:
        description: Provides information about a card payment that customers see
          on their statements. Concatenated with the Kanji prefix (shortened Kanji
          descriptor) or Kanji statement descriptor that's set on the account to form
          the complete statement descriptor. Maximum 17 characters. On card statements,
          the *concatenation* of both prefix and suffix (including separators) will
          appear truncated to 17 characters.
        type: string
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsCardInstallments:
    properties:
      enabled:
        description: Indicates if installments are enabled
        type: boolean
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsCardRequestThreeDSecure:
    enum:
    - any
    - automatic
    - challenge
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsCardRequestThreeDSecureAny
    - CheckoutSessionPaymentMethodOptionsCardRequestThreeDSecureAutomatic
    - CheckoutSessionPaymentMethodOptionsCardRequestThreeDSecureChallenge
  stripe.CheckoutSessionPaymentMethodOptionsCardSetupFutureUsage:
    enum:
    - none
    - off_session
    - on_session
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsCardSetupFutureUsageNone
    - CheckoutSessionPaymentMethodOptionsCardSetupFutureUsageOffSession
    - CheckoutSessionPaymentMethodOptionsCardSetupFutureUsageOnSession
  stripe.CheckoutSessionPaymentMethodOptionsCashApp:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsCashAppSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsCashAppSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsCashAppSetupFutureUsageNone
  stripe.CheckoutSessionPaymentMethodOptionsCustomerBalance:
    properties:
      bank_transfer:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsCustomerBalanceBankTransfer'
      funding_type:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsCustomerBalanceFundingType'
        description: 'The funding method type to be used when there are not enough
          funds in the customer balance. Permitted values include: `bank_transfer`.'
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsCustomerBalanceSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsCustomerBalanceBankTransfer:
    properties:
      eu_bank_transfer:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsCustomerBalanceBankTransferEUBankTransfer'
      requested_address_types:
        description: |-
          List of address types that should be returned in the financial_addresses response. If not specified, all valid types will be returned.

          Permitted values include: `sort_code`, `zengin`, `iban`, or `spei`.
        items:
          $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsCustomerBalanceBankTransferRequestedAddressType'
        type: array
      type:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsCustomerBalanceBankTransferType'
        description: 'The bank transfer type that this PaymentIntent is allowed to
          use for funding Permitted values include: `eu_bank_transfer`, `gb_bank_transfer`,
          `jp_bank_transfer`, `mx_bank_transfer`, or `us_bank_transfer`.'
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsCustomerBalanceBankTransferEUBankTransfer:
    properties:
      country:
        description: 'The desired country code of the bank account information. Permitted
          values include: `BE`, `DE`, `ES`, `FR`, `IE`, or `NL`.'
        type: string
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsCustomerBalanceBankTransferRequestedAddressType:
    enum:
    - aba
    - iban
    - sepa
    - sort_code
    - spei
    - swift
    - zengin
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsCustomerBalanceBankTransferRequestedAddressTypeABA
    - CheckoutSessionPaymentMethodOptionsCustomerBalanceBankTransferRequestedAddressTypeIBAN
    - CheckoutSessionPaymentMethodOptionsCustomerBalanceBankTransferRequestedAddressTypeSEPA
    - CheckoutSessionPaymentMethodOptionsCustomerBalanceBankTransferRequestedAddressTypeSortCode
    - CheckoutSessionPaymentMethodOptionsCustomerBalanceBankTransferRequestedAddressTypeSpei
    - CheckoutSessionPaymentMethodOptionsCustomerBalanceBankTransferRequestedAddressTypeSwift
    - CheckoutSessionPaymentMethodOptionsCustomerBalanceBankTransferRequestedAddressTypeZengin
  stripe.CheckoutSessionPaymentMethodOptionsCustomerBalanceBankTransferType:
    enum:
    - eu_bank_transfer
    - gb_bank_transfer
    - jp_bank_transfer
    - mx_bank_transfer
    - us_bank_transfer
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsCustomerBalanceBankTransferTypeEUBankTransfer
    - CheckoutSessionPaymentMethodOptionsCustomerBalanceBankTransferTypeGBBankTransfer
    - CheckoutSessionPaymentMethodOptionsCustomerBalanceBankTransferTypeJPBankTransfer
    - CheckoutSessionPaymentMethodOptionsCustomerBalanceBankTransferTypeMXBankTransfer
    - CheckoutSessionPaymentMethodOptionsCustomerBalanceBankTransferTypeUSBankTransfer
  stripe.CheckoutSessionPaymentMethodOptionsCustomerBalanceFundingType:
    enum:
    - bank_transfer
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsCustomerBalanceFundingTypeBankTransfer
  stripe.CheckoutSessionPaymentMethodOptionsCustomerBalanceSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsCustomerBalanceSetupFutureUsageNone
  stripe.CheckoutSessionPaymentMethodOptionsEPS:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsEPSSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsEPSSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsEPSSetupFutureUsageNone
  stripe.CheckoutSessionPaymentMethodOptionsFPX:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsFPXSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsFPXSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsFPXSetupFutureUsageNone
  stripe.CheckoutSessionPaymentMethodOptionsGiropay:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsGiropaySetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsGiropaySetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsGiropaySetupFutureUsageNone
  stripe.CheckoutSessionPaymentMethodOptionsGrabpay:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsGrabpaySetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsGrabpaySetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsGrabpaySetupFutureUsageNone
  stripe.CheckoutSessionPaymentMethodOptionsIDEAL:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsIDEALSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsIDEALSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsIDEALSetupFutureUsageNone
  stripe.CheckoutSessionPaymentMethodOptionsKakaoPay:
    properties:
      capture_method:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsKakaoPayCaptureMethod'
        description: Controls when the funds will be captured from the customer's
          account.
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsKakaoPaySetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsKakaoPayCaptureMethod:
    enum:
    - manual
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsKakaoPayCaptureMethodManual
  stripe.CheckoutSessionPaymentMethodOptionsKakaoPaySetupFutureUsage:
    enum:
    - none
    - off_session
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsKakaoPaySetupFutureUsageNone
    - CheckoutSessionPaymentMethodOptionsKakaoPaySetupFutureUsageOffSession
  stripe.CheckoutSessionPaymentMethodOptionsKlarna:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsKlarnaSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsKlarnaSetupFutureUsage:
    enum:
    - none
    - off_session
    - on_session
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsKlarnaSetupFutureUsageNone
    - CheckoutSessionPaymentMethodOptionsKlarnaSetupFutureUsageOffSession
    - CheckoutSessionPaymentMethodOptionsKlarnaSetupFutureUsageOnSession
  stripe.CheckoutSessionPaymentMethodOptionsKonbini:
    properties:
      expires_after_days:
        description: The number of calendar days (between 1 and 60) after which Konbini
          payment instructions will expire. For example, if a PaymentIntent is confirmed
          with Konbini and `expires_after_days` set to 2 on Monday JST, the instructions
          will expire on Wednesday 23:59:59 JST.
        type: integer
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsKonbiniSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsKonbiniSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsKonbiniSetupFutureUsageNone
  stripe.CheckoutSessionPaymentMethodOptionsKrCard:
    properties:
      capture_method:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsKrCardCaptureMethod'
        description: Controls when the funds will be captured from the customer's
          account.
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsKrCardSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsKrCardCaptureMethod:
    enum:
    - manual
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsKrCardCaptureMethodManual
  stripe.CheckoutSessionPaymentMethodOptionsKrCardSetupFutureUsage:
    enum:
    - none
    - off_session
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsKrCardSetupFutureUsageNone
    - CheckoutSessionPaymentMethodOptionsKrCardSetupFutureUsageOffSession
  stripe.CheckoutSessionPaymentMethodOptionsLink:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsLinkSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsLinkSetupFutureUsage:
    enum:
    - none
    - off_session
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsLinkSetupFutureUsageNone
    - CheckoutSessionPaymentMethodOptionsLinkSetupFutureUsageOffSession
  stripe.CheckoutSessionPaymentMethodOptionsMobilepay:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsMobilepaySetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsMobilepaySetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsMobilepaySetupFutureUsageNone
  stripe.CheckoutSessionPaymentMethodOptionsMultibanco:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsMultibancoSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsMultibancoSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsMultibancoSetupFutureUsageNone
  stripe.CheckoutSessionPaymentMethodOptionsNaverPay:
    properties:
      capture_method:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsNaverPayCaptureMethod'
        description: Controls when the funds will be captured from the customer's
          account.
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsNaverPayCaptureMethod:
    enum:
    - manual
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsNaverPayCaptureMethodManual
  stripe.CheckoutSessionPaymentMethodOptionsOXXO:
    properties:
      expires_after_days:
        description: The number of calendar days before an OXXO invoice expires. For
          example, if you create an OXXO invoice on Monday and you set expires_after_days
          to 2, the OXXO invoice will expire on Wednesday at 23:59 America/Mexico_City
          time.
        type: integer
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsOXXOSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsOXXOSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsOXXOSetupFutureUsageNone
  stripe.CheckoutSessionPaymentMethodOptionsP24:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsP24SetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsP24SetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsP24SetupFutureUsageNone
  stripe.CheckoutSessionPaymentMethodOptionsPayNow:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsPayNowSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsPayNowSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsPayNowSetupFutureUsageNone
  stripe.CheckoutSessionPaymentMethodOptionsPayco:
    properties:
      capture_method:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsPaycoCaptureMethod'
        description: Controls when the funds will be captured from the customer's
          account.
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsPaycoCaptureMethod:
    enum:
    - manual
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsPaycoCaptureMethodManual
  stripe.CheckoutSessionPaymentMethodOptionsPaypal:
    properties:
      capture_method:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsPaypalCaptureMethod'
        description: Controls when the funds will be captured from the customer's
          account.
      preferred_locale:
        description: Preferred locale of the PayPal checkout page that the customer
          is redirected to.
        type: string
      reference:
        description: A reference of the PayPal transaction visible to customer which
          is mapped to PayPal's invoice ID. This must be a globally unique ID if you
          have configured in your PayPal settings to block multiple payments per invoice
          ID.
        type: string
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsPaypalSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsPaypalCaptureMethod:
    enum:
    - manual
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsPaypalCaptureMethodManual
  stripe.CheckoutSessionPaymentMethodOptionsPaypalSetupFutureUsage:
    enum:
    - none
    - off_session
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsPaypalSetupFutureUsageNone
    - CheckoutSessionPaymentMethodOptionsPaypalSetupFutureUsageOffSession
  stripe.CheckoutSessionPaymentMethodOptionsPix:
    properties:
      expires_after_seconds:
        description: The number of seconds after which Pix payment will expire.
        type: integer
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsRevolutPay:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsRevolutPaySetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsRevolutPaySetupFutureUsage:
    enum:
    - none
    - off_session
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsRevolutPaySetupFutureUsageNone
    - CheckoutSessionPaymentMethodOptionsRevolutPaySetupFutureUsageOffSession
  stripe.CheckoutSessionPaymentMethodOptionsSEPADebit:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsSEPADebitSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsSEPADebitSetupFutureUsage:
    enum:
    - none
    - off_session
    - on_session
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsSEPADebitSetupFutureUsageNone
    - CheckoutSessionPaymentMethodOptionsSEPADebitSetupFutureUsageOffSession
    - CheckoutSessionPaymentMethodOptionsSEPADebitSetupFutureUsageOnSession
  stripe.CheckoutSessionPaymentMethodOptionsSamsungPay:
    properties:
      capture_method:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsSamsungPayCaptureMethod'
        description: Controls when the funds will be captured from the customer's
          account.
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsSamsungPayCaptureMethod:
    enum:
    - manual
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsSamsungPayCaptureMethodManual
  stripe.CheckoutSessionPaymentMethodOptionsSofort:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsSofortSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsSofortSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsSofortSetupFutureUsageNone
  stripe.CheckoutSessionPaymentMethodOptionsSwish:
    properties:
      reference:
        description: The order reference that will be displayed to customers in the
          Swish application. Defaults to the `id` of the Payment Intent.
        type: string
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsUSBankAccount:
    properties:
      financial_connections:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsUSBankAccountFinancialConnections'
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsUSBankAccountSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
      verification_method:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsUSBankAccountVerificationMethod'
        description: Bank account verification method.
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsUSBankAccountFinancialConnections:
    properties:
      filters:
        $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsUSBankAccountFinancialConnectionsFilters'
      permissions:
        description: The list of permissions to request. The `payment_method` permission
          must be included.
        items:
          $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsUSBankAccountFinancialConnectionsPermission'
        type: array
      prefetch:
        description: Data features requested to be retrieved upon account creation.
        items:
          $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsUSBankAccountFinancialConnectionsPrefetch'
        type: array
      return_url:
        description: For webview integrations only. Upon completing OAuth login in
          the native browser, the user will be redirected to this URL to return to
          your app.
        type: string
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsUSBankAccountFinancialConnectionsFilters:
    properties:
      account_subcategories:
        description: The account subcategories to use to filter for possible accounts
          to link. Valid subcategories are `checking` and `savings`.
        items:
          $ref: '#/definitions/stripe.CheckoutSessionPaymentMethodOptionsUSBankAccountFinancialConnectionsFiltersAccountSubcategory'
        type: array
    type: object
  stripe.CheckoutSessionPaymentMethodOptionsUSBankAccountFinancialConnectionsFiltersAccountSubcategory:
    enum:
    - checking
    - savings
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsUSBankAccountFinancialConnectionsFiltersAccountSubcategoryChecking
    - CheckoutSessionPaymentMethodOptionsUSBankAccountFinancialConnectionsFiltersAccountSubcategorySavings
  stripe.CheckoutSessionPaymentMethodOptionsUSBankAccountFinancialConnectionsPermission:
    enum:
    - balances
    - ownership
    - payment_method
    - transactions
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsUSBankAccountFinancialConnectionsPermissionBalances
    - CheckoutSessionPaymentMethodOptionsUSBankAccountFinancialConnectionsPermissionOwnership
    - CheckoutSessionPaymentMethodOptionsUSBankAccountFinancialConnectionsPermissionPaymentMethod
    - CheckoutSessionPaymentMethodOptionsUSBankAccountFinancialConnectionsPermissionTransactions
  stripe.CheckoutSessionPaymentMethodOptionsUSBankAccountFinancialConnectionsPrefetch:
    enum:
    - balances
    - ownership
    - transactions
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsUSBankAccountFinancialConnectionsPrefetchBalances
    - CheckoutSessionPaymentMethodOptionsUSBankAccountFinancialConnectionsPrefetchOwnership
    - CheckoutSessionPaymentMethodOptionsUSBankAccountFinancialConnectionsPrefetchTransactions
  stripe.CheckoutSessionPaymentMethodOptionsUSBankAccountSetupFutureUsage:
    enum:
    - none
    - off_session
    - on_session
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsUSBankAccountSetupFutureUsageNone
    - CheckoutSessionPaymentMethodOptionsUSBankAccountSetupFutureUsageOffSession
    - CheckoutSessionPaymentMethodOptionsUSBankAccountSetupFutureUsageOnSession
  stripe.CheckoutSessionPaymentMethodOptionsUSBankAccountVerificationMethod:
    enum:
    - automatic
    - instant
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentMethodOptionsUSBankAccountVerificationMethodAutomatic
    - CheckoutSessionPaymentMethodOptionsUSBankAccountVerificationMethodInstant
  stripe.CheckoutSessionPaymentStatus:
    enum:
    - no_payment_required
    - paid
    - unpaid
    type: string
    x-enum-varnames:
    - CheckoutSessionPaymentStatusNoPaymentRequired
    - CheckoutSessionPaymentStatusPaid
    - CheckoutSessionPaymentStatusUnpaid
  stripe.CheckoutSessionPhoneNumberCollection:
    properties:
      enabled:
        description: Indicates whether phone number collection is enabled for the
          session
        type: boolean
    type: object
  stripe.CheckoutSessionRedirectOnCompletion:
    enum:
    - always
    - if_required
    - never
    type: string
    x-enum-varnames:
    - CheckoutSessionRedirectOnCompletionAlways
    - CheckoutSessionRedirectOnCompletionIfRequired
    - CheckoutSessionRedirectOnCompletionNever
  stripe.CheckoutSessionSavedPaymentMethodOptions:
    properties:
      allow_redisplay_filters:
        description: 'Uses the `allow_redisplay` value of each saved payment method
          to filter the set presented to a returning customer. By default, only saved
          payment methods with ''allow_redisplay: ‘always'' are shown in Checkout.'
        items:
          $ref: '#/definitions/stripe.CheckoutSessionSavedPaymentMethodOptionsAllowRedisplayFilter'
        type: array
      payment_method_remove:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionSavedPaymentMethodOptionsPaymentMethodRemove'
        description: Enable customers to choose if they wish to remove their saved
          payment methods. Disabled by default.
      payment_method_save:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionSavedPaymentMethodOptionsPaymentMethodSave'
        description: Enable customers to choose if they wish to save their payment
          method for future use. Disabled by default.
    type: object
  stripe.CheckoutSessionSavedPaymentMethodOptionsAllowRedisplayFilter:
    enum:
    - always
    - limited
    - unspecified
    type: string
    x-enum-varnames:
    - CheckoutSessionSavedPaymentMethodOptionsAllowRedisplayFilterAlways
    - CheckoutSessionSavedPaymentMethodOptionsAllowRedisplayFilterLimited
    - CheckoutSessionSavedPaymentMethodOptionsAllowRedisplayFilterUnspecified
  stripe.CheckoutSessionSavedPaymentMethodOptionsPaymentMethodRemove:
    enum:
    - disabled
    - enabled
    type: string
    x-enum-varnames:
    - CheckoutSessionSavedPaymentMethodOptionsPaymentMethodRemoveDisabled
    - CheckoutSessionSavedPaymentMethodOptionsPaymentMethodRemoveEnabled
  stripe.CheckoutSessionSavedPaymentMethodOptionsPaymentMethodSave:
    enum:
    - disabled
    - enabled
    type: string
    x-enum-varnames:
    - CheckoutSessionSavedPaymentMethodOptionsPaymentMethodSaveDisabled
    - CheckoutSessionSavedPaymentMethodOptionsPaymentMethodSaveEnabled
  stripe.CheckoutSessionShippingAddressCollection:
    properties:
      allowed_countries:
        description: |-
          An array of two-letter ISO country codes representing which countries Checkout should provide as options for
          shipping locations. Unsupported country codes: `AS, CX, CC, CU, HM, IR, KP, MH, FM, NF, MP, PW, SD, SY, UM, VI`.
        items:
          type: string
        type: array
    type: object
  stripe.CheckoutSessionShippingCost:
    properties:
      amount_subtotal:
        description: Total shipping cost before any discounts or taxes are applied.
        type: integer
      amount_tax:
        description: Total tax amount applied due to shipping costs. If no tax was
          applied, defaults to 0.
        type: integer
      amount_total:
        description: Total shipping cost after discounts and taxes are applied.
        type: integer
      shipping_rate:
        allOf:
        - $ref: '#/definitions/stripe.ShippingRate'
        description: The ID of the ShippingRate for this order.
      taxes:
        description: The taxes applied to the shipping rate.
        items:
          $ref: '#/definitions/stripe.CheckoutSessionShippingCostTax'
        type: array
    type: object
  stripe.CheckoutSessionShippingCostTax:
    properties:
      amount:
        description: Amount of tax applied for this rate.
        type: integer
      rate:
        allOf:
        - $ref: '#/definitions/stripe.TaxRate'
        description: |-
          Tax rates can be applied to [invoices](https://stripe.com/docs/billing/invoices/tax-rates), [subscriptions](https://stripe.com/docs/billing/subscriptions/taxes) and [Checkout Sessions](https://stripe.com/docs/payments/checkout/set-up-a-subscription#tax-rates) to collect tax.

          Related guide: [Tax rates](https://stripe.com/docs/billing/taxes/tax-rates)
      taxability_reason:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionShippingCostTaxTaxabilityReason'
        description: The reasoning behind this tax, for example, if the product is
          tax exempt. The possible values for this field may be extended as new tax
          rules are supported.
      taxable_amount:
        description: The amount on which tax is calculated, in cents (or local equivalent).
        type: integer
    type: object
  stripe.CheckoutSessionShippingCostTaxTaxabilityReason:
    enum:
    - customer_exempt
    - not_collecting
    - not_subject_to_tax
    - not_supported
    - portion_product_exempt
    - portion_reduced_rated
    - portion_standard_rated
    - product_exempt
    - product_exempt_holiday
    - proportionally_rated
    - reduced_rated
    - reverse_charge
    - standard_rated
    - taxable_basis_reduced
    - zero_rated
    type: string
    x-enum-varnames:
    - CheckoutSessionShippingCostTaxTaxabilityReasonCustomerExempt
    - CheckoutSessionShippingCostTaxTaxabilityReasonNotCollecting
    - CheckoutSessionShippingCostTaxTaxabilityReasonNotSubjectToTax
    - CheckoutSessionShippingCostTaxTaxabilityReasonNotSupported
    - CheckoutSessionShippingCostTaxTaxabilityReasonPortionProductExempt
    - CheckoutSessionShippingCostTaxTaxabilityReasonPortionReducedRated
    - CheckoutSessionShippingCostTaxTaxabilityReasonPortionStandardRated
    - CheckoutSessionShippingCostTaxTaxabilityReasonProductExempt
    - CheckoutSessionShippingCostTaxTaxabilityReasonProductExemptHoliday
    - CheckoutSessionShippingCostTaxTaxabilityReasonProportionallyRated
    - CheckoutSessionShippingCostTaxTaxabilityReasonReducedRated
    - CheckoutSessionShippingCostTaxTaxabilityReasonReverseCharge
    - CheckoutSessionShippingCostTaxTaxabilityReasonStandardRated
    - CheckoutSessionShippingCostTaxTaxabilityReasonTaxableBasisReduced
    - CheckoutSessionShippingCostTaxTaxabilityReasonZeroRated
  stripe.CheckoutSessionShippingOption:
    properties:
      shipping_amount:
        description: A non-negative integer in cents representing how much to charge.
        type: integer
      shipping_rate:
        allOf:
        - $ref: '#/definitions/stripe.ShippingRate'
        description: The shipping rate.
    type: object
  stripe.CheckoutSessionStatus:
    enum:
    - complete
    - expired
    - open
    type: string
    x-enum-varnames:
    - CheckoutSessionStatusComplete
    - CheckoutSessionStatusExpired
    - CheckoutSessionStatusOpen
  stripe.CheckoutSessionSubmitType:
    enum:
    - auto
    - book
    - donate
    - pay
    type: string
    x-enum-varnames:
    - CheckoutSessionSubmitTypeAuto
    - CheckoutSessionSubmitTypeBook
    - CheckoutSessionSubmitTypeDonate
    - CheckoutSessionSubmitTypePay
  stripe.CheckoutSessionTaxIDCollection:
    properties:
      enabled:
        description: Indicates whether tax ID collection is enabled for the session
        type: boolean
      required:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionTaxIDCollectionRequired'
        description: Indicates whether a tax ID is required on the payment page
    type: object
  stripe.CheckoutSessionTaxIDCollectionRequired:
    enum:
    - if_supported
    - never
    type: string
    x-enum-varnames:
    - CheckoutSessionTaxIDCollectionRequiredIfSupported
    - CheckoutSessionTaxIDCollectionRequiredNever
  stripe.CheckoutSessionTotalDetails:
    properties:
      amount_discount:
        description: This is the sum of all the discounts.
        type: integer
      amount_shipping:
        description: This is the sum of all the shipping amounts.
        type: integer
      amount_tax:
        description: This is the sum of all the tax amounts.
        type: integer
      breakdown:
        $ref: '#/definitions/stripe.CheckoutSessionTotalDetailsBreakdown'
    type: object
  stripe.CheckoutSessionTotalDetailsBreakdown:
    properties:
      discounts:
        description: The aggregated discounts.
        items:
          $ref: '#/definitions/stripe.CheckoutSessionTotalDetailsBreakdownDiscount'
        type: array
      taxes:
        description: The aggregated tax amounts by rate.
        items:
          $ref: '#/definitions/stripe.CheckoutSessionTotalDetailsBreakdownTax'
        type: array
    type: object
  stripe.CheckoutSessionTotalDetailsBreakdownDiscount:
    properties:
      amount:
        description: The amount discounted.
        type: integer
      discount:
        allOf:
        - $ref: '#/definitions/stripe.Discount'
        description: |-
          A discount represents the actual application of a [coupon](https://stripe.com/docs/api#coupons) or [promotion code](https://stripe.com/docs/api#promotion_codes).
          It contains information about when the discount began, when it will end, and what it is applied to.

          Related guide: [Applying discounts to subscriptions](https://stripe.com/docs/billing/subscriptions/discounts)
    type: object
  stripe.CheckoutSessionTotalDetailsBreakdownTax:
    properties:
      amount:
        description: Amount of tax applied for this rate.
        type: integer
      rate:
        allOf:
        - $ref: '#/definitions/stripe.TaxRate'
        description: |-
          Tax rates can be applied to [invoices](https://stripe.com/docs/billing/invoices/tax-rates), [subscriptions](https://stripe.com/docs/billing/subscriptions/taxes) and [Checkout Sessions](https://stripe.com/docs/payments/checkout/set-up-a-subscription#tax-rates) to collect tax.

          Related guide: [Tax rates](https://stripe.com/docs/billing/taxes/tax-rates)
      taxability_reason:
        allOf:
        - $ref: '#/definitions/stripe.CheckoutSessionTotalDetailsBreakdownTaxTaxabilityReason'
        description: The reasoning behind this tax, for example, if the product is
          tax exempt. The possible values for this field may be extended as new tax
          rules are supported.
      taxable_amount:
        description: The amount on which tax is calculated, in cents (or local equivalent).
        type: integer
    type: object
  stripe.CheckoutSessionTotalDetailsBreakdownTaxTaxabilityReason:
    enum:
    - customer_exempt
    - not_collecting
    - not_subject_to_tax
    - not_supported
    - portion_product_exempt
    - portion_reduced_rated
    - portion_standard_rated
    - product_exempt
    - product_exempt_holiday
    - proportionally_rated
    - reduced_rated
    - reverse_charge
    - standard_rated
    - taxable_basis_reduced
    - zero_rated
    type: string
    x-enum-varnames:
    - CheckoutSessionTotalDetailsBreakdownTaxTaxabilityReasonCustomerExempt
    - CheckoutSessionTotalDetailsBreakdownTaxTaxabilityReasonNotCollecting
    - CheckoutSessionTotalDetailsBreakdownTaxTaxabilityReasonNotSubjectToTax
    - CheckoutSessionTotalDetailsBreakdownTaxTaxabilityReasonNotSupported
    - CheckoutSessionTotalDetailsBreakdownTaxTaxabilityReasonPortionProductExempt
    - CheckoutSessionTotalDetailsBreakdownTaxTaxabilityReasonPortionReducedRated
    - CheckoutSessionTotalDetailsBreakdownTaxTaxabilityReasonPortionStandardRated
    - CheckoutSessionTotalDetailsBreakdownTaxTaxabilityReasonProductExempt
    - CheckoutSessionTotalDetailsBreakdownTaxTaxabilityReasonProductExemptHoliday
    - CheckoutSessionTotalDetailsBreakdownTaxTaxabilityReasonProportionallyRated
    - CheckoutSessionTotalDetailsBreakdownTaxTaxabilityReasonReducedRated
    - CheckoutSessionTotalDetailsBreakdownTaxTaxabilityReasonReverseCharge
    - CheckoutSessionTotalDetailsBreakdownTaxTaxabilityReasonStandardRated
    - CheckoutSessionTotalDetailsBreakdownTaxTaxabilityReasonTaxableBasisReduced
    - CheckoutSessionTotalDetailsBreakdownTaxTaxabilityReasonZeroRated
  stripe.CheckoutSessionUIMode:
    enum:
    - embedded
    - hosted
    type: string
    x-enum-varnames:
    - CheckoutSessionUIModeEmbedded
    - CheckoutSessionUIModeHosted
  stripe.Coupon:
    properties:
      amount_off:
        description: Amount (in the `currency` specified) that will be taken off the
          subtotal of any invoices for this customer.
        type: integer
      applies_to:
        $ref: '#/definitions/stripe.CouponAppliesTo'
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: If `amount_off` has been set, the three-letter [ISO code for
          the currency](https://stripe.com/docs/currencies) of the amount to take
          off.
      currency_options:
        additionalProperties:
          $ref: '#/definitions/stripe.CouponCurrencyOptions'
        description: Coupons defined in each available currency option. Each key must
          be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html)
          and a [supported currency](https://stripe.com/docs/currencies).
        type: object
      deleted:
        type: boolean
      duration:
        allOf:
        - $ref: '#/definitions/stripe.CouponDuration'
        description: One of `forever`, `once`, and `repeating`. Describes how long
          a customer who applies this coupon will get the discount.
      duration_in_months:
        description: If `duration` is `repeating`, the number of months the coupon
          applies. Null if coupon `duration` is `forever` or `once`.
        type: integer
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      max_redemptions:
        description: Maximum number of times this coupon can be redeemed, in total,
          across all customers, before it is no longer valid.
        type: integer
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      name:
        description: Name of the coupon displayed to customers on for instance invoices
          or receipts.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      percent_off:
        description: Percent that will be taken off the subtotal of any invoices for
          this customer for the duration of the coupon. For example, a coupon with
          percent_off of 50 will make a $ (or local equivalent)100 invoice $ (or local
          equivalent)50 instead.
        type: number
      redeem_by:
        description: Date after which the coupon can no longer be redeemed.
        type: integer
      times_redeemed:
        description: Number of times this coupon has been applied to a customer.
        type: integer
      valid:
        description: Taking account of the above properties, whether this coupon can
          still be applied to a customer.
        type: boolean
    type: object
  stripe.CouponAppliesTo:
    properties:
      products:
        description: A list of product IDs this coupon applies to
        items:
          type: string
        type: array
    type: object
  stripe.CouponCurrencyOptions:
    properties:
      amount_off:
        description: Amount (in the `currency` specified) that will be taken off the
          subtotal of any invoices for this customer.
        type: integer
    type: object
  stripe.CouponDuration:
    enum:
    - forever
    - once
    - repeating
    type: string
    x-enum-varnames:
    - CouponDurationForever
    - CouponDurationOnce
    - CouponDurationRepeating
  stripe.Currency:
    enum:
    - aed
    - afn
    - all
    - amd
    - ang
    - aoa
    - ars
    - aud
    - awg
    - azn
    - bam
    - bbd
    - bdt
    - bgn
    - bif
    - bmd
    - bnd
    - bob
    - brl
    - bsd
    - bwp
    - bzd
    - cad
    - cdf
    - chf
    - clp
    - cny
    - cop
    - crc
    - cve
    - czk
    - djf
    - dkk
    - dop
    - dzd
    - eek
    - egp
    - etb
    - eur
    - fjd
    - fkp
    - gbp
    - gel
    - gip
    - gmd
    - gnf
    - gtq
    - gyd
    - hkd
    - hnl
    - hrk
    - htg
    - huf
    - idr
    - ils
    - inr
    - isk
    - jmd
    - jpy
    - kes
    - kgs
    - khr
    - kmf
    - krw
    - kyd
    - kzt
    - lak
    - lbp
    - lkr
    - lrd
    - lsl
    - ltl
    - lvl
    - mad
    - mdl
    - mga
    - mkd
    - mnt
    - mop
    - mro
    - mur
    - mvr
    - mwk
    - mxn
    - myr
    - mzn
    - nad
    - ngn
    - nio
    - nok
    - npr
    - nzd
    - pab
    - pen
    - pgk
    - php
    - pkr
    - pln
    - pyg
    - qar
    - ron
    - rsd
    - rub
    - rwf
    - sar
    - sbd
    - scr
    - sek
    - sgd
    - shp
    - sll
    - sos
    - srd
    - std
    - svc
    - szl
    - thb
    - tjs
    - top
    - try
    - ttd
    - twd
    - tzs
    - uah
    - ugx
    - usd
    - uyu
    - uzs
    - vef
    - vnd
    - vuv
    - wst
    - xaf
    - xcd
    - xof
    - xpf
    - yer
    - zar
    - zmw
    type: string
    x-enum-comments:
      CurrencyAED: United Arab Emirates Dirham
      CurrencyAFN: Afghan Afghani
      CurrencyALL: Albanian Lek
      CurrencyAMD: Armenian Dram
      CurrencyANG: Netherlands Antillean Gulden
      CurrencyAOA: Angolan Kwanza
      CurrencyARS: Argentine Peso
      CurrencyAUD: Australian Dollar
      CurrencyAWG: Aruban Florin
      CurrencyAZN: Azerbaijani Manat
      CurrencyBAM: Bosnia & Herzegovina Convertible Mark
      CurrencyBBD: Barbadian Dollar
      CurrencyBDT: Bangladeshi Taka
      CurrencyBGN: Bulgarian Lev
      CurrencyBIF: Burundian Franc
      CurrencyBMD: Bermudian Dollar
      CurrencyBND: Brunei Dollar
      CurrencyBOB: Bolivian Boliviano
      CurrencyBRL: Brazilian Real
      CurrencyBSD: Bahamian Dollar
      CurrencyBWP: Botswana Pula
      CurrencyBZD: Belize Dollar
      CurrencyCAD: Canadian Dollar
      CurrencyCDF: Congolese Franc
      CurrencyCHF: Swiss Franc
      CurrencyCLP: Chilean Peso
      CurrencyCNY: Chinese Renminbi Yuan
      CurrencyCOP: Colombian Peso
      CurrencyCRC: Costa Rican Colón
      CurrencyCVE: Cape Verdean Escudo
      CurrencyCZK: Czech Koruna
      CurrencyDJF: Djiboutian Franc
      CurrencyDKK: Danish Krone
      CurrencyDOP: Dominican Peso
      CurrencyDZD: Algerian Dinar
      CurrencyEEK: Estonian Kroon
      CurrencyEGP: Egyptian Pound
      CurrencyETB: Ethiopian Birr
      CurrencyEUR: Euro
      CurrencyFJD: Fijian Dollar
      CurrencyFKP: Falkland Islands Pound
      CurrencyGBP: British Pound
      CurrencyGEL: Georgian Lari
      CurrencyGIP: Gibraltar Pound
      CurrencyGMD: Gambian Dalasi
      CurrencyGNF: Guinean Franc
      CurrencyGTQ: Guatemalan Quetzal
      CurrencyGYD: Guyanese Dollar
      CurrencyHKD: Hong Kong Dollar
      CurrencyHNL: Honduran Lempira
      CurrencyHRK: Croatian Kuna
      CurrencyHTG: Haitian Gourde
      CurrencyHUF: Hungarian Forint
      CurrencyIDR: Indonesian Rupiah
      CurrencyILS: Israeli New Sheqel
      CurrencyINR: Indian Rupee
      CurrencyISK: Icelandic Króna
      CurrencyJMD: Jamaican Dollar
      CurrencyJPY: Japanese Yen
      CurrencyKES: Kenyan Shilling
      CurrencyKGS: Kyrgyzstani Som
      CurrencyKHR: Cambodian Riel
      CurrencyKMF: Comorian Franc
      CurrencyKRW: South Korean Won
      CurrencyKYD: Cayman Islands Dollar
      CurrencyKZT: Kazakhstani Tenge
      CurrencyLAK: Lao Kip
      CurrencyLBP: Lebanese Pound
      CurrencyLKR: Sri Lankan Rupee
      CurrencyLRD: Liberian Dollar
      CurrencyLSL: Lesotho Loti
      CurrencyLTL: Lithuanian Litas
      CurrencyLVL: Latvian Lats
      CurrencyMAD: Moroccan Dirham
      CurrencyMDL: Moldovan Leu
      CurrencyMGA: Malagasy Ariary
      CurrencyMKD: Macedonian Denar
      CurrencyMNT: Mongolian Tögrög
      CurrencyMOP: Macanese Pataca
      CurrencyMRO: Mauritanian Ouguiya
      CurrencyMUR: Mauritian Rupee
      CurrencyMVR: Maldivian Rufiyaa
      CurrencyMWK: Malawian Kwacha
      CurrencyMXN: Mexican Peso
      CurrencyMYR: Malaysian Ringgit
      CurrencyMZN: Mozambican Metical
      CurrencyNAD: Namibian Dollar
      CurrencyNGN: Nigerian Naira
      CurrencyNIO: Nicaraguan Córdoba
      CurrencyNOK: Norwegian Krone
      CurrencyNPR: Nepalese Rupee
      CurrencyNZD: New Zealand Dollar
      CurrencyPAB: Panamanian Balboa
      CurrencyPEN: Peruvian Nuevo Sol
      CurrencyPGK: Papua New Guinean Kina
      CurrencyPHP: Philippine Peso
      CurrencyPKR: Pakistani Rupee
      CurrencyPLN: Polish Złoty
      CurrencyPYG: Paraguayan Guaraní
      CurrencyQAR: Qatari Riyal
      CurrencyRON: Romanian Leu
      CurrencyRSD: Serbian Dinar
      CurrencyRUB: Russian Ruble
      CurrencyRWF: Rwandan Franc
      CurrencySAR: Saudi Riyal
      CurrencySBD: Solomon Islands Dollar
      CurrencySCR: Seychellois Rupee
      CurrencySEK: Swedish Krona
      CurrencySGD: Singapore Dollar
      CurrencySHP: Saint Helenian Pound
      CurrencySLL: Sierra Leonean Leone
      CurrencySOS: Somali Shilling
      CurrencySRD: Surinamese Dollar
      CurrencySTD: São Tomé and Príncipe Dobra
      CurrencySVC: Salvadoran Colón
      CurrencySZL: Swazi Lilangeni
      CurrencyTHB: Thai Baht
      CurrencyTJS: Tajikistani Somoni
      CurrencyTOP: Tongan Paʻanga
      CurrencyTRY: Turkish Lira
      CurrencyTTD: Trinidad and Tobago Dollar
      CurrencyTWD: New Taiwan Dollar
      CurrencyTZS: Tanzanian Shilling
      CurrencyUAH: Ukrainian Hryvnia
      CurrencyUGX: Ugandan Shilling
      CurrencyUSD: United States Dollar
      CurrencyUYU: Uruguayan Peso
      CurrencyUZS: Uzbekistani Som
      CurrencyVEF: Venezuelan Bolívar
      CurrencyVND: Vietnamese Đồng
      CurrencyVUV: Vanuatu Vatu
      CurrencyWST: Samoan Tala
      CurrencyXAF: Central African Cfa Franc
      CurrencyXCD: East Caribbean Dollar
      CurrencyXOF: West African Cfa Franc
      CurrencyXPF: Cfp Franc
      CurrencyYER: Yemeni Rial
      CurrencyZAR: South African Rand
      CurrencyZMW: Zambian Kwacha
    x-enum-varnames:
    - CurrencyAED
    - CurrencyAFN
    - CurrencyALL
    - CurrencyAMD
    - CurrencyANG
    - CurrencyAOA
    - CurrencyARS
    - CurrencyAUD
    - CurrencyAWG
    - CurrencyAZN
    - CurrencyBAM
    - CurrencyBBD
    - CurrencyBDT
    - CurrencyBGN
    - CurrencyBIF
    - CurrencyBMD
    - CurrencyBND
    - CurrencyBOB
    - CurrencyBRL
    - CurrencyBSD
    - CurrencyBWP
    - CurrencyBZD
    - CurrencyCAD
    - CurrencyCDF
    - CurrencyCHF
    - CurrencyCLP
    - CurrencyCNY
    - CurrencyCOP
    - CurrencyCRC
    - CurrencyCVE
    - CurrencyCZK
    - CurrencyDJF
    - CurrencyDKK
    - CurrencyDOP
    - CurrencyDZD
    - CurrencyEEK
    - CurrencyEGP
    - CurrencyETB
    - CurrencyEUR
    - CurrencyFJD
    - CurrencyFKP
    - CurrencyGBP
    - CurrencyGEL
    - CurrencyGIP
    - CurrencyGMD
    - CurrencyGNF
    - CurrencyGTQ
    - CurrencyGYD
    - CurrencyHKD
    - CurrencyHNL
    - CurrencyHRK
    - CurrencyHTG
    - CurrencyHUF
    - CurrencyIDR
    - CurrencyILS
    - CurrencyINR
    - CurrencyISK
    - CurrencyJMD
    - CurrencyJPY
    - CurrencyKES
    - CurrencyKGS
    - CurrencyKHR
    - CurrencyKMF
    - CurrencyKRW
    - CurrencyKYD
    - CurrencyKZT
    - CurrencyLAK
    - CurrencyLBP
    - CurrencyLKR
    - CurrencyLRD
    - CurrencyLSL
    - CurrencyLTL
    - CurrencyLVL
    - CurrencyMAD
    - CurrencyMDL
    - CurrencyMGA
    - CurrencyMKD
    - CurrencyMNT
    - CurrencyMOP
    - CurrencyMRO
    - CurrencyMUR
    - CurrencyMVR
    - CurrencyMWK
    - CurrencyMXN
    - CurrencyMYR
    - CurrencyMZN
    - CurrencyNAD
    - CurrencyNGN
    - CurrencyNIO
    - CurrencyNOK
    - CurrencyNPR
    - CurrencyNZD
    - CurrencyPAB
    - CurrencyPEN
    - CurrencyPGK
    - CurrencyPHP
    - CurrencyPKR
    - CurrencyPLN
    - CurrencyPYG
    - CurrencyQAR
    - CurrencyRON
    - CurrencyRSD
    - CurrencyRUB
    - CurrencyRWF
    - CurrencySAR
    - CurrencySBD
    - CurrencySCR
    - CurrencySEK
    - CurrencySGD
    - CurrencySHP
    - CurrencySLL
    - CurrencySOS
    - CurrencySRD
    - CurrencySTD
    - CurrencySVC
    - CurrencySZL
    - CurrencyTHB
    - CurrencyTJS
    - CurrencyTOP
    - CurrencyTRY
    - CurrencyTTD
    - CurrencyTWD
    - CurrencyTZS
    - CurrencyUAH
    - CurrencyUGX
    - CurrencyUSD
    - CurrencyUYU
    - CurrencyUZS
    - CurrencyVEF
    - CurrencyVND
    - CurrencyVUV
    - CurrencyWST
    - CurrencyXAF
    - CurrencyXCD
    - CurrencyXOF
    - CurrencyXPF
    - CurrencyYER
    - CurrencyZAR
    - CurrencyZMW
  stripe.Customer:
    properties:
      address:
        allOf:
        - $ref: '#/definitions/stripe.Address'
        description: The customer's address.
      balance:
        description: The current balance, if any, that's stored on the customer. If
          negative, the customer has credit to apply to their next invoice. If positive,
          the customer has an amount owed that's added to their next invoice. The
          balance only considers amounts that Stripe hasn't successfully applied to
          any invoice. It doesn't reflect unpaid invoices. This balance is only taken
          into account after invoices finalize.
        type: integer
      cash_balance:
        allOf:
        - $ref: '#/definitions/stripe.CashBalance'
        description: The current funds being held by Stripe on behalf of the customer.
          You can apply these funds towards payment intents when the source is "cash_balance".
          The `settings[reconciliation_mode]` field describes if these funds apply
          to these payment intents manually or automatically.
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO code for the currency](https://stripe.com/docs/currencies)
          the customer can be charged in for recurring billing purposes.
      default_source:
        allOf:
        - $ref: '#/definitions/stripe.PaymentSource'
        description: |-
          ID of the default payment source for the customer.

          If you use payment methods created through the PaymentMethods API, see the [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) field instead.
      deleted:
        type: boolean
      delinquent:
        description: |-
          Tracks the most recent state change on any invoice belonging to the customer. Paying an invoice or marking it uncollectible via the API will set this field to false. An automatic payment failure or passing the `invoice.due_date` will set this field to `true`.

          If an invoice becomes uncollectible by [dunning](https://stripe.com/docs/billing/automatic-collection), `delinquent` doesn't reset to `false`.

          If you care whether the customer has paid their most recent subscription invoice, use `subscription.status` instead. Paying or marking uncollectible any customer invoice regardless of whether it is the latest invoice for a subscription will always set this field to `false`.
        type: boolean
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      discount:
        allOf:
        - $ref: '#/definitions/stripe.Discount'
        description: Describes the current discount active on the customer, if there
          is one.
      email:
        description: The customer's email address.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      invoice_credit_balance:
        additionalProperties:
          type: integer
        description: The current multi-currency balances, if any, that's stored on
          the customer. If positive in a currency, the customer has a credit to apply
          to their next invoice denominated in that currency. If negative, the customer
          has an amount owed that's added to their next invoice denominated in that
          currency. These balances don't apply to unpaid invoices. They solely track
          amounts that Stripe hasn't successfully applied to any invoice. Stripe only
          applies a balance in a specific currency to an invoice after that invoice
          (which is in the same currency) finalizes.
        type: object
      invoice_prefix:
        description: The prefix for the customer used to generate unique invoice numbers.
        type: string
      invoice_settings:
        $ref: '#/definitions/stripe.CustomerInvoiceSettings'
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      name:
        description: The customer's full name or business name.
        type: string
      next_invoice_sequence:
        description: The suffix of the customer's next invoice number (for example,
          0001). When the account uses account level sequencing, this parameter is
          ignored in API requests and the field omitted in API responses.
        type: integer
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      phone:
        description: The customer's phone number.
        type: string
      preferred_locales:
        description: The customer's preferred locales (languages), ordered by preference.
        items:
          type: string
        type: array
      shipping:
        allOf:
        - $ref: '#/definitions/stripe.ShippingDetails'
        description: Mailing and shipping address for the customer. Appears on invoices
          emailed to this customer.
      sources:
        $ref: '#/definitions/stripe.PaymentSourceList'
      subscriptions:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionList'
        description: The customer's current subscriptions, if any.
      tax:
        $ref: '#/definitions/stripe.CustomerTax'
      tax_exempt:
        allOf:
        - $ref: '#/definitions/stripe.CustomerTaxExempt'
        description: 'Describes the customer''s tax exemption status, which is `none`,
          `exempt`, or `reverse`. When set to `reverse`, invoice and receipt PDFs
          include the following text: **"Reverse charge"**.'
      tax_ids:
        allOf:
        - $ref: '#/definitions/stripe.TaxIDList'
        description: The customer's tax IDs.
      test_clock:
        allOf:
        - $ref: '#/definitions/stripe.TestHelpersTestClock'
        description: ID of the test clock that this customer belongs to.
    type: object
  stripe.CustomerInvoiceSettings:
    properties:
      custom_fields:
        description: Default custom fields to be displayed on invoices for this customer.
        items:
          $ref: '#/definitions/stripe.CustomerInvoiceSettingsCustomField'
        type: array
      default_payment_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethod'
        description: ID of a payment method that's attached to the customer, to be
          used as the customer's default payment method for subscriptions and invoices.
      footer:
        description: Default footer to be displayed on invoices for this customer.
        type: string
      rendering_options:
        allOf:
        - $ref: '#/definitions/stripe.CustomerInvoiceSettingsRenderingOptions'
        description: Default options for invoice PDF rendering for this customer.
    type: object
  stripe.CustomerInvoiceSettingsCustomField:
    properties:
      name:
        description: The name of the custom field.
        type: string
      value:
        description: The value of the custom field.
        type: string
    type: object
  stripe.CustomerInvoiceSettingsRenderingOptions:
    properties:
      amount_tax_display:
        description: How line-item prices and amounts will be displayed with respect
          to tax on invoice PDFs.
        type: string
      template:
        description: ID of the invoice rendering template to be used for this customer's
          invoices. If set, the template will be used on all invoices for this customer
          unless a template is set directly on the invoice.
        type: string
    type: object
  stripe.CustomerTax:
    properties:
      automatic_tax:
        allOf:
        - $ref: '#/definitions/stripe.CustomerTaxAutomaticTax'
        description: Surfaces if automatic tax computation is possible given the current
          customer location information.
      ip_address:
        description: A recent IP address of the customer used for tax reporting and
          tax location inference.
        type: string
      location:
        allOf:
        - $ref: '#/definitions/stripe.CustomerTaxLocation'
        description: The customer's location as identified by Stripe Tax.
    type: object
  stripe.CustomerTaxAutomaticTax:
    enum:
    - failed
    - not_collecting
    - supported
    - unrecognized_location
    type: string
    x-enum-varnames:
    - CustomerTaxAutomaticTaxFailed
    - CustomerTaxAutomaticTaxNotCollecting
    - CustomerTaxAutomaticTaxSupported
    - CustomerTaxAutomaticTaxUnrecognizedLocation
  stripe.CustomerTaxExempt:
    enum:
    - exempt
    - none
    - reverse
    type: string
    x-enum-varnames:
    - CustomerTaxExemptExempt
    - CustomerTaxExemptNone
    - CustomerTaxExemptReverse
  stripe.CustomerTaxLocation:
    properties:
      country:
        description: The customer's country as identified by Stripe Tax.
        type: string
      source:
        allOf:
        - $ref: '#/definitions/stripe.CustomerTaxLocationSource'
        description: The data source used to infer the customer's location.
      state:
        description: The customer's state, county, province, or region as identified
          by Stripe Tax.
        type: string
    type: object
  stripe.CustomerTaxLocationSource:
    enum:
    - billing_address
    - ip_address
    - payment_method
    - shipping_destination
    type: string
    x-enum-varnames:
    - CustomerTaxLocationSourceBillingAddress
    - CustomerTaxLocationSourceIPAddress
    - CustomerTaxLocationSourcePaymentMethod
    - CustomerTaxLocationSourceShippingDestination
  stripe.DeclineCode:
    enum:
    - authentication_required
    - approve_with_id
    - call_issuer
    - card_not_supported
    - card_velocity_exceeded
    - currency_not_supported
    - do_not_honor
    - do_not_try_again
    - duplicate_transaction
    - expired_card
    - fraudulent
    - generic_decline
    - incorrect_number
    - incorrect_cvc
    - incorrect_pin
    - incorrect_zip
    - insufficient_funds
    - invalid_account
    - invalid_amount
    - invalid_cvc
    - invalid_expiry_month
    - invalid_expiry_year
    - invalid_number
    - invalid_pin
    - issuer_not_available
    - lost_card
    - merchant_blacklist
    - new_account_information_available
    - no_action_taken
    - not_permitted
    - offline_pin_required
    - online_or_offline_pin_required
    - pickup_card
    - pin_try_exceeded
    - processing_error
    - reenter_transaction
    - restricted_card
    - revocation_of_all_authorizations
    - revocation_of_authorization
    - security_violation
    - service_not_allowed
    - stolen_card
    - stop_payment_order
    - testmode_decline
    - transaction_not_allowed
    - try_again_later
    - withdrawal_count_limit_exceeded
    type: string
    x-enum-varnames:
    - DeclineCodeAuthenticationRequired
    - DeclineCodeApproveWithID
    - DeclineCodeCallIssuer
    - DeclineCodeCardNotSupported
    - DeclineCodeCardVelocityExceeded
    - DeclineCodeCurrencyNotSupported
    - DeclineCodeDoNotHonor
    - DeclineCodeDoNotTryAgain
    - DeclineCodeDuplicateTransaction
    - DeclineCodeExpiredCard
    - DeclineCodeFraudulent
    - DeclineCodeGenericDecline
    - DeclineCodeIncorrectNumber
    - DeclineCodeIncorrectCVC
    - DeclineCodeIncorrectPIN
    - DeclineCodeIncorrectZip
    - DeclineCodeInsufficientFunds
    - DeclineCodeInvalidAccount
    - DeclineCodeInvalidAmount
    - DeclineCodeInvalidCVC
    - DeclineCodeInvalidExpiryMonth
    - DeclineCodeInvalidExpiryYear
    - DeclineCodeInvalidNumber
    - DeclineCodeInvalidPIN
    - DeclineCodeIssuerNotAvailable
    - DeclineCodeLostCard
    - DeclineCodeMerchantBlacklist
    - DeclineCodeNewAccountInformationAvailable
    - DeclineCodeNoActionTaken
    - DeclineCodeNotPermitted
    - DeclineCodeOfflinePINRequired
    - DeclineCodeOnlineOrOfflinePINRequired
    - DeclineCodePickupCard
    - DeclineCodePINTryExceeded
    - DeclineCodeProcessingError
    - DeclineCodeReenterTransaction
    - DeclineCodeRestrictedCard
    - DeclineCodeRevocationOfAllAuthorizations
    - DeclineCodeRevocationOfAuthorization
    - DeclineCodeSecurityViolation
    - DeclineCodeServiceNotAllowed
    - DeclineCodeStolenCard
    - DeclineCodeStopPaymentOrder
    - DeclineCodeTestModeDecline
    - DeclineCodeTransactionNotAllowed
    - DeclineCodeTryAgainLater
    - DeclineCodeWithdrawalCountLimitExceeded
  stripe.Discount:
    properties:
      checkout_session:
        description: The Checkout session that this coupon is applied to, if it is
          applied to a particular session in payment mode. Will not be present for
          subscription mode.
        type: string
      coupon:
        allOf:
        - $ref: '#/definitions/stripe.Coupon'
        description: |-
          A coupon contains information about a percent-off or amount-off discount you
          might want to apply to a customer. Coupons may be applied to [subscriptions](https://stripe.com/docs/api#subscriptions), [invoices](https://stripe.com/docs/api#invoices),
          [checkout sessions](https://stripe.com/docs/api/checkout/sessions), [quotes](https://stripe.com/docs/api#quotes), and more. Coupons do not work with conventional one-off [charges](https://stripe.com/docs/api#create_charge) or [payment intents](https://stripe.com/docs/api/payment_intents).
      customer:
        allOf:
        - $ref: '#/definitions/stripe.Customer'
        description: The ID of the customer associated with this discount.
      deleted:
        type: boolean
      end:
        description: If the coupon has a duration of `repeating`, the date that this
          discount will end. If the coupon has a duration of `once` or `forever`,
          this attribute will be null.
        type: integer
      id:
        description: The ID of the discount object. Discounts cannot be fetched by
          ID. Use `expand[]=discounts` in API calls to expand discount IDs in an array.
        type: string
      invoice:
        description: The invoice that the discount's coupon was applied to, if it
          was applied directly to a particular invoice.
        type: string
      invoice_item:
        description: The invoice item `id` (or invoice line item `id` for invoice
          line items of type='subscription') that the discount's coupon was applied
          to, if it was applied directly to a particular invoice item or invoice line
          item.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      promotion_code:
        allOf:
        - $ref: '#/definitions/stripe.PromotionCode'
        description: The promotion code applied to create this discount.
      start:
        description: Date that the coupon was applied.
        type: integer
      subscription:
        description: The subscription that this coupon is applied to, if it is applied
          to a particular subscription.
        type: string
      subscription_item:
        description: The subscription item that this coupon is applied to, if it is
          applied to a particular subscription item.
        type: string
    type: object
  stripe.Error:
    properties:
      charge:
        type: string
      code:
        $ref: '#/definitions/stripe.ErrorCode'
      decline_code:
        $ref: '#/definitions/stripe.DeclineCode'
      doc_url:
        type: string
      error:
        description: OAuth specific Error properties. Named OAuthError because of
          name conflict.
        type: string
      error_description:
        type: string
      message:
        type: string
      param:
        type: string
      payment_intent:
        $ref: '#/definitions/stripe.PaymentIntent'
      payment_method:
        $ref: '#/definitions/stripe.PaymentMethod'
      payment_method_type:
        $ref: '#/definitions/stripe.PaymentMethodType'
      request_id:
        type: string
      request_log_url:
        type: string
      setup_intent:
        $ref: '#/definitions/stripe.SetupIntent'
      source:
        $ref: '#/definitions/stripe.PaymentSource'
      status:
        type: integer
      type:
        $ref: '#/definitions/stripe.ErrorType'
    type: object
  stripe.ErrorCode:
    enum:
    - acss_debit_session_incomplete
    - api_key_expired
    - account_closed
    - account_country_invalid_address
    - account_error_country_change_requires_additional_steps
    - account_information_mismatch
    - account_invalid
    - account_number_invalid
    - alipay_upgrade_required
    - amount_too_large
    - amount_too_small
    - application_fees_not_allowed
    - authentication_required
    - balance_insufficient
    - balance_invalid_parameter
    - bank_account_bad_routing_numbers
    - bank_account_declined
    - bank_account_exists
    - bank_account_restricted
    - bank_account_unusable
    - bank_account_unverified
    - bank_account_verification_failed
    - billing_invalid_mandate
    - bitcoin_upgrade_required
    - capture_charge_authorization_expired
    - capture_unauthorized_payment
    - card_decline_rate_limit_exceeded
    - card_declined
    - cardholder_phone_number_required
    - charge_already_captured
    - charge_already_refunded
    - charge_disputed
    - charge_exceeds_source_limit
    - charge_exceeds_transaction_limit
    - charge_expired_for_capture
    - charge_invalid_parameter
    - charge_not_refundable
    - clearing_code_unsupported
    - country_code_invalid
    - country_unsupported
    - coupon_expired
    - customer_max_payment_methods
    - customer_max_subscriptions
    - customer_tax_location_invalid
    - debit_not_authorized
    - email_invalid
    - expired_card
    - financial_connections_account_inactive
    - financial_connections_no_successful_transaction_refresh
    - forwarding_api_inactive
    - forwarding_api_invalid_parameter
    - forwarding_api_upstream_connection_error
    - forwarding_api_upstream_connection_timeout
    - idempotency_key_in_use
    - incorrect_address
    - incorrect_cvc
    - incorrect_number
    - incorrect_zip
    - instant_payouts_config_disabled
    - instant_payouts_currency_disabled
    - instant_payouts_limit_exceeded
    - instant_payouts_unsupported
    - insufficient_funds
    - intent_invalid_state
    - intent_verification_method_missing
    - invalid_cvc
    - invalid_card_type
    - invalid_characters
    - invalid_charge_amount
    - invalid_expiry_month
    - invalid_expiry_year
    - invalid_mandate_reference_prefix_format
    - invalid_number
    - invalid_source_usage
    - invalid_tax_location
    - invoice_no_customer_line_items
    - invoice_no_payment_method_types
    - invoice_no_subscription_line_items
    - invoice_not_editable
    - invoice_on_behalf_of_not_editable
    - invoice_payment_intent_requires_action
    - invoice_upcoming_none
    - livemode_mismatch
    - lock_timeout
    - missing
    - no_account
    - not_allowed_on_standard_account
    - out_of_inventory
    - ownership_declaration_not_allowed
    - parameter_invalid_empty
    - parameter_invalid_integer
    - parameter_invalid_string_blank
    - parameter_invalid_string_empty
    - parameter_missing
    - parameter_unknown
    - parameters_exclusive
    - payment_intent_action_required
    - payment_intent_authentication_failure
    - payment_intent_incompatible_payment_method
    - payment_intent_invalid_parameter
    - payment_intent_konbini_rejected_confirmation_number
    - payment_intent_mandate_invalid
    - payment_intent_payment_attempt_expired
    - payment_intent_payment_attempt_failed
    - payment_intent_unexpected_state
    - payment_method_bank_account_already_verified
    - payment_method_bank_account_blocked
    - payment_method_billing_details_address_missing
    - payment_method_configuration_failures
    - payment_method_currency_mismatch
    - payment_method_customer_decline
    - payment_method_invalid_parameter
    - payment_method_invalid_parameter_testmode
    - payment_method_microdeposit_failed
    - payment_method_microdeposit_verification_amounts_invalid
    - payment_method_microdeposit_verification_amounts_mismatch
    - payment_method_microdeposit_verification_attempts_exceeded
    - payment_method_microdeposit_verification_descriptor_code_mismatch
    - payment_method_microdeposit_verification_timeout
    - payment_method_not_available
    - payment_method_provider_decline
    - payment_method_provider_timeout
    - payment_method_unactivated
    - payment_method_unexpected_state
    - payment_method_unsupported_type
    - payout_reconciliation_not_ready
    - payouts_limit_exceeded
    - payouts_not_allowed
    - platform_api_key_expired
    - platform_account_required
    - postal_code_invalid
    - processing_error
    - product_inactive
    - progressive_onboarding_limit_exceeded
    - rate_limit
    - refer_to_customer
    - refund_disputed_payment
    - resource_already_exists
    - resource_missing
    - return_intent_already_processed
    - routing_number_invalid
    - sepa_unsupported_account
    - sku_inactive
    - secret_key_required
    - setup_attempt_failed
    - setup_intent_authentication_failure
    - setup_intent_invalid_parameter
    - setup_intent_mandate_invalid
    - setup_intent_setup_attempt_expired
    - setup_intent_unexpected_state
    - shipping_address_invalid
    - shipping_calculation_failed
    - state_unsupported
    - status_transition_invalid
    - stripe_tax_inactive
    - tls_version_unsupported
    - tax_id_invalid
    - taxes_calculation_failed
    - terminal_location_country_unsupported
    - terminal_reader_busy
    - terminal_reader_hardware_fault
    - terminal_reader_invalid_location_for_activation
    - terminal_reader_invalid_location_for_payment
    - terminal_reader_offline
    - terminal_reader_timeout
    - testmode_charges_only
    - token_already_used
    - token_card_network_invalid
    - token_in_use
    - transfer_source_balance_parameters_mismatch
    - transfers_not_allowed
    - url_invalid
    type: string
    x-enum-varnames:
    - ErrorCodeACSSDebitSessionIncomplete
    - ErrorCodeAPIKeyExpired
    - ErrorCodeAccountClosed
    - ErrorCodeAccountCountryInvalidAddress
    - ErrorCodeAccountErrorCountryChangeRequiresAdditionalSteps
    - ErrorCodeAccountInformationMismatch
    - ErrorCodeAccountInvalid
    - ErrorCodeAccountNumberInvalid
    - ErrorCodeAlipayUpgradeRequired
    - ErrorCodeAmountTooLarge
    - ErrorCodeAmountTooSmall
    - ErrorCodeApplicationFeesNotAllowed
    - ErrorCodeAuthenticationRequired
    - ErrorCodeBalanceInsufficient
    - ErrorCodeBalanceInvalidParameter
    - ErrorCodeBankAccountBadRoutingNumbers
    - ErrorCodeBankAccountDeclined
    - ErrorCodeBankAccountExists
    - ErrorCodeBankAccountRestricted
    - ErrorCodeBankAccountUnusable
    - ErrorCodeBankAccountUnverified
    - ErrorCodeBankAccountVerificationFailed
    - ErrorCodeBillingInvalidMandate
    - ErrorCodeBitcoinUpgradeRequired
    - ErrorCodeCaptureChargeAuthorizationExpired
    - ErrorCodeCaptureUnauthorizedPayment
    - ErrorCodeCardDeclineRateLimitExceeded
    - ErrorCodeCardDeclined
    - ErrorCodeCardholderPhoneNumberRequired
    - ErrorCodeChargeAlreadyCaptured
    - ErrorCodeChargeAlreadyRefunded
    - ErrorCodeChargeDisputed
    - ErrorCodeChargeExceedsSourceLimit
    - ErrorCodeChargeExceedsTransactionLimit
    - ErrorCodeChargeExpiredForCapture
    - ErrorCodeChargeInvalidParameter
    - ErrorCodeChargeNotRefundable
    - ErrorCodeClearingCodeUnsupported
    - ErrorCodeCountryCodeInvalid
    - ErrorCodeCountryUnsupported
    - ErrorCodeCouponExpired
    - ErrorCodeCustomerMaxPaymentMethods
    - ErrorCodeCustomerMaxSubscriptions
    - ErrorCodeCustomerTaxLocationInvalid
    - ErrorCodeDebitNotAuthorized
    - ErrorCodeEmailInvalid
    - ErrorCodeExpiredCard
    - ErrorCodeFinancialConnectionsAccountInactive
    - ErrorCodeFinancialConnectionsNoSuccessfulTransactionRefresh
    - ErrorCodeForwardingAPIInactive
    - ErrorCodeForwardingAPIInvalidParameter
    - ErrorCodeForwardingAPIUpstreamConnectionError
    - ErrorCodeForwardingAPIUpstreamConnectionTimeout
    - ErrorCodeIdempotencyKeyInUse
    - ErrorCodeIncorrectAddress
    - ErrorCodeIncorrectCVC
    - ErrorCodeIncorrectNumber
    - ErrorCodeIncorrectZip
    - ErrorCodeInstantPayoutsConfigDisabled
    - ErrorCodeInstantPayoutsCurrencyDisabled
    - ErrorCodeInstantPayoutsLimitExceeded
    - ErrorCodeInstantPayoutsUnsupported
    - ErrorCodeInsufficientFunds
    - ErrorCodeIntentInvalidState
    - ErrorCodeIntentVerificationMethodMissing
    - ErrorCodeInvalidCVC
    - ErrorCodeInvalidCardType
    - ErrorCodeInvalidCharacters
    - ErrorCodeInvalidChargeAmount
    - ErrorCodeInvalidExpiryMonth
    - ErrorCodeInvalidExpiryYear
    - ErrorCodeInvalidMandateReferencePrefixFormat
    - ErrorCodeInvalidNumber
    - ErrorCodeInvalidSourceUsage
    - ErrorCodeInvalidTaxLocation
    - ErrorCodeInvoiceNoCustomerLineItems
    - ErrorCodeInvoiceNoPaymentMethodTypes
    - ErrorCodeInvoiceNoSubscriptionLineItems
    - ErrorCodeInvoiceNotEditable
    - ErrorCodeInvoiceOnBehalfOfNotEditable
    - ErrorCodeInvoicePaymentIntentRequiresAction
    - ErrorCodeInvoiceUpcomingNone
    - ErrorCodeLivemodeMismatch
    - ErrorCodeLockTimeout
    - ErrorCodeMissing
    - ErrorCodeNoAccount
    - ErrorCodeNotAllowedOnStandardAccount
    - ErrorCodeOutOfInventory
    - ErrorCodeOwnershipDeclarationNotAllowed
    - ErrorCodeParameterInvalidEmpty
    - ErrorCodeParameterInvalidInteger
    - ErrorCodeParameterInvalidStringBlank
    - ErrorCodeParameterInvalidStringEmpty
    - ErrorCodeParameterMissing
    - ErrorCodeParameterUnknown
    - ErrorCodeParametersExclusive
    - ErrorCodePaymentIntentActionRequired
    - ErrorCodePaymentIntentAuthenticationFailure
    - ErrorCodePaymentIntentIncompatiblePaymentMethod
    - ErrorCodePaymentIntentInvalidParameter
    - ErrorCodePaymentIntentKonbiniRejectedConfirmationNumber
    - ErrorCodePaymentIntentMandateInvalid
    - ErrorCodePaymentIntentPaymentAttemptExpired
    - ErrorCodePaymentIntentPaymentAttemptFailed
    - ErrorCodePaymentIntentUnexpectedState
    - ErrorCodePaymentMethodBankAccountAlreadyVerified
    - ErrorCodePaymentMethodBankAccountBlocked
    - ErrorCodePaymentMethodBillingDetailsAddressMissing
    - ErrorCodePaymentMethodConfigurationFailures
    - ErrorCodePaymentMethodCurrencyMismatch
    - ErrorCodePaymentMethodCustomerDecline
    - ErrorCodePaymentMethodInvalidParameter
    - ErrorCodePaymentMethodInvalidParameterTestmode
    - ErrorCodePaymentMethodMicrodepositFailed
    - ErrorCodePaymentMethodMicrodepositVerificationAmountsInvalid
    - ErrorCodePaymentMethodMicrodepositVerificationAmountsMismatch
    - ErrorCodePaymentMethodMicrodepositVerificationAttemptsExceeded
    - ErrorCodePaymentMethodMicrodepositVerificationDescriptorCodeMismatch
    - ErrorCodePaymentMethodMicrodepositVerificationTimeout
    - ErrorCodePaymentMethodNotAvailable
    - ErrorCodePaymentMethodProviderDecline
    - ErrorCodePaymentMethodProviderTimeout
    - ErrorCodePaymentMethodUnactivated
    - ErrorCodePaymentMethodUnexpectedState
    - ErrorCodePaymentMethodUnsupportedType
    - ErrorCodePayoutReconciliationNotReady
    - ErrorCodePayoutsLimitExceeded
    - ErrorCodePayoutsNotAllowed
    - ErrorCodePlatformAPIKeyExpired
    - ErrorCodePlatformAccountRequired
    - ErrorCodePostalCodeInvalid
    - ErrorCodeProcessingError
    - ErrorCodeProductInactive
    - ErrorCodeProgressiveOnboardingLimitExceeded
    - ErrorCodeRateLimit
    - ErrorCodeReferToCustomer
    - ErrorCodeRefundDisputedPayment
    - ErrorCodeResourceAlreadyExists
    - ErrorCodeResourceMissing
    - ErrorCodeReturnIntentAlreadyProcessed
    - ErrorCodeRoutingNumberInvalid
    - ErrorCodeSEPAUnsupportedAccount
    - ErrorCodeSKUInactive
    - ErrorCodeSecretKeyRequired
    - ErrorCodeSetupAttemptFailed
    - ErrorCodeSetupIntentAuthenticationFailure
    - ErrorCodeSetupIntentInvalidParameter
    - ErrorCodeSetupIntentMandateInvalid
    - ErrorCodeSetupIntentSetupAttemptExpired
    - ErrorCodeSetupIntentUnexpectedState
    - ErrorCodeShippingAddressInvalid
    - ErrorCodeShippingCalculationFailed
    - ErrorCodeStateUnsupported
    - ErrorCodeStatusTransitionInvalid
    - ErrorCodeStripeTaxInactive
    - ErrorCodeTLSVersionUnsupported
    - ErrorCodeTaxIDInvalid
    - ErrorCodeTaxesCalculationFailed
    - ErrorCodeTerminalLocationCountryUnsupported
    - ErrorCodeTerminalReaderBusy
    - ErrorCodeTerminalReaderHardwareFault
    - ErrorCodeTerminalReaderInvalidLocationForActivation
    - ErrorCodeTerminalReaderInvalidLocationForPayment
    - ErrorCodeTerminalReaderOffline
    - ErrorCodeTerminalReaderTimeout
    - ErrorCodeTestmodeChargesOnly
    - ErrorCodeTokenAlreadyUsed
    - ErrorCodeTokenCardNetworkInvalid
    - ErrorCodeTokenInUse
    - ErrorCodeTransferSourceBalanceParametersMismatch
    - ErrorCodeTransfersNotAllowed
    - ErrorCodeURLInvalid
  stripe.ErrorType:
    enum:
    - api_error
    - card_error
    - idempotency_error
    - invalid_request_error
    type: string
    x-enum-varnames:
    - ErrorTypeAPI
    - ErrorTypeCard
    - ErrorTypeIdempotency
    - ErrorTypeInvalidRequest
  stripe.FeeRefund:
    properties:
      amount:
        description: Amount, in cents (or local equivalent).
        type: integer
      balance_transaction:
        allOf:
        - $ref: '#/definitions/stripe.BalanceTransaction'
        description: Balance transaction that describes the impact on your account
          balance.
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      fee:
        allOf:
        - $ref: '#/definitions/stripe.ApplicationFee'
        description: ID of the application fee that was refunded.
      id:
        description: Unique identifier for the object.
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
    type: object
  stripe.FeeRefundList:
    properties:
      data:
        items:
          $ref: '#/definitions/stripe.FeeRefund'
        type: array
      has_more:
        type: boolean
      total_count:
        description: |-
          TotalCount is the total number of objects in the collection (beyond just
          on the current page). This is not returned in most list calls.

          Deprecated: TotalCount is only included in some legacy situations and
          not generally available anymore.
        type: integer
      url:
        type: string
    type: object
  stripe.File:
    properties:
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      expires_at:
        description: The file expires and isn't available at this time in epoch seconds.
        type: integer
      filename:
        description: The suitable name for saving the file to a filesystem.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      links:
        allOf:
        - $ref: '#/definitions/stripe.FileLinkList'
        description: A list of [file links](https://stripe.com/docs/api#file_links)
          that point at this file.
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      purpose:
        allOf:
        - $ref: '#/definitions/stripe.FilePurpose'
        description: The [purpose](https://stripe.com/docs/file-upload#uploading-a-file)
          of the uploaded file.
      size:
        description: The size of the file object in bytes.
        type: integer
      title:
        description: A suitable title for the document.
        type: string
      type:
        description: The returned file type (for example, `csv`, `pdf`, `jpg`, or
          `png`).
        type: string
      url:
        description: Use your live secret API key to download the file from this URL.
        type: string
    type: object
  stripe.FileLink:
    properties:
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      expired:
        description: Returns if the link is already expired.
        type: boolean
      expires_at:
        description: Time that the link expires.
        type: integer
      file:
        allOf:
        - $ref: '#/definitions/stripe.File'
        description: The file object this link points to.
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      url:
        description: The publicly accessible URL to download the file.
        type: string
    type: object
  stripe.FileLinkList:
    properties:
      data:
        items:
          $ref: '#/definitions/stripe.FileLink'
        type: array
      has_more:
        type: boolean
      total_count:
        description: |-
          TotalCount is the total number of objects in the collection (beyond just
          on the current page). This is not returned in most list calls.

          Deprecated: TotalCount is only included in some legacy situations and
          not generally available anymore.
        type: integer
      url:
        type: string
    type: object
  stripe.FilePurpose:
    enum:
    - account_requirement
    - additional_verification
    - business_icon
    - business_logo
    - customer_signature
    - dispute_evidence
    - document_provider_identity_document
    - finance_report_run
    - identity_document
    - identity_document_downloadable
    - issuing_regulatory_reporting
    - pci_document
    - selfie
    - sigma_scheduled_query
    - tax_document_user_upload
    - terminal_reader_splashscreen
    type: string
    x-enum-varnames:
    - FilePurposeAccountRequirement
    - FilePurposeAdditionalVerification
    - FilePurposeBusinessIcon
    - FilePurposeBusinessLogo
    - FilePurposeCustomerSignature
    - FilePurposeDisputeEvidence
    - FilePurposeDocumentProviderIdentityDocument
    - FilePurposeFinanceReportRun
    - FilePurposeIdentityDocument
    - FilePurposeIdentityDocumentDownloadable
    - FilePurposeIssuingRegulatoryReporting
    - FilePurposePCIDocument
    - FilePurposeSelfie
    - FilePurposeSigmaScheduledQuery
    - FilePurposeTaxDocumentUserUpload
    - FilePurposeTerminalReaderSplashscreen
  stripe.Invoice:
    properties:
      account_country:
        description: The country of the business associated with this invoice, most
          often the business creating the invoice.
        type: string
      account_name:
        description: The public name of the business associated with this invoice,
          most often the business creating the invoice.
        type: string
      account_tax_ids:
        description: The account tax IDs associated with the invoice. Only editable
          when the invoice is a draft.
        items:
          $ref: '#/definitions/stripe.TaxID'
        type: array
      amount_due:
        description: Final amount due at this time for this invoice. If the invoice's
          total is smaller than the minimum charge amount, for example, or if there
          is account credit that can be applied to the invoice, the `amount_due` may
          be 0. If there is a positive `starting_balance` for the invoice (the customer
          owes money), the `amount_due` will also take that into account. The charge
          that gets generated for the invoice will be for the amount specified in
          `amount_due`.
        type: integer
      amount_paid:
        description: The amount, in cents (or local equivalent), that was paid.
        type: integer
      amount_remaining:
        description: The difference between amount_due and amount_paid, in cents (or
          local equivalent).
        type: integer
      amount_shipping:
        description: This is the sum of all the shipping amounts.
        type: integer
      application:
        allOf:
        - $ref: '#/definitions/stripe.Application'
        description: ID of the Connect Application that created the invoice.
      application_fee_amount:
        description: The fee in cents (or local equivalent) that will be applied to
          the invoice and transferred to the application owner's Stripe account when
          the invoice is paid.
        type: integer
      attempt_count:
        description: Number of payment attempts made for this invoice, from the perspective
          of the payment retry schedule. Any payment attempt counts as the first attempt,
          and subsequently only automatic retries increment the attempt count. In
          other words, manual payment attempts after the first attempt do not affect
          the retry schedule. If a failure is returned with a non-retryable return
          code, the invoice can no longer be retried unless a new payment method is
          obtained. Retries will continue to be scheduled, and attempt_count will
          continue to increment, but retries will only be executed if a new payment
          method is obtained.
        type: integer
      attempted:
        description: Whether an attempt has been made to pay the invoice. An invoice
          is not attempted until 1 hour after the `invoice.created` webhook, for example,
          so you might not want to display that invoice as unpaid to your users.
        type: boolean
      auto_advance:
        description: Controls whether Stripe performs [automatic collection](https://stripe.com/docs/invoicing/integration/automatic-advancement-collection)
          of the invoice. If `false`, the invoice's state doesn't automatically advance
          without an explicit action.
        type: boolean
      automatic_tax:
        $ref: '#/definitions/stripe.InvoiceAutomaticTax'
      automatically_finalizes_at:
        description: The time when this invoice is currently scheduled to be automatically
          finalized. The field will be `null` if the invoice is not scheduled to finalize
          in the future. If the invoice is not in the draft state, this field will
          always be `null` - see `finalized_at` for the time when an already-finalized
          invoice was finalized.
        type: integer
      billing_reason:
        allOf:
        - $ref: '#/definitions/stripe.InvoiceBillingReason'
        description: |-
          Indicates the reason why the invoice was created.

          * `manual`: Unrelated to a subscription, for example, created via the invoice editor.
          * `subscription`: No longer in use. Applies to subscriptions from before May 2018 where no distinction was made between updates, cycles, and thresholds.
          * `subscription_create`: A new subscription was created.
          * `subscription_cycle`: A subscription advanced into a new period.
          * `subscription_threshold`: A subscription reached a billing threshold.
          * `subscription_update`: A subscription was updated.
          * `upcoming`: Reserved for simulated invoices, per the upcoming invoice endpoint.
      charge:
        allOf:
        - $ref: '#/definitions/stripe.Charge'
        description: ID of the latest charge generated for this invoice, if any.
      collection_method:
        allOf:
        - $ref: '#/definitions/stripe.InvoiceCollectionMethod'
        description: Either `charge_automatically`, or `send_invoice`. When charging
          automatically, Stripe will attempt to pay this invoice using the default
          source attached to the customer. When sending an invoice, Stripe will email
          this invoice to the customer with payment instructions.
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      custom_fields:
        description: Custom fields displayed on the invoice.
        items:
          $ref: '#/definitions/stripe.InvoiceCustomField'
        type: array
      customer:
        allOf:
        - $ref: '#/definitions/stripe.Customer'
        description: The ID of the customer who will be billed.
      customer_address:
        allOf:
        - $ref: '#/definitions/stripe.Address'
        description: The customer's address. Until the invoice is finalized, this
          field will equal `customer.address`. Once the invoice is finalized, this
          field will no longer be updated.
      customer_email:
        description: The customer's email. Until the invoice is finalized, this field
          will equal `customer.email`. Once the invoice is finalized, this field will
          no longer be updated.
        type: string
      customer_name:
        description: The customer's name. Until the invoice is finalized, this field
          will equal `customer.name`. Once the invoice is finalized, this field will
          no longer be updated.
        type: string
      customer_phone:
        description: The customer's phone number. Until the invoice is finalized,
          this field will equal `customer.phone`. Once the invoice is finalized, this
          field will no longer be updated.
        type: string
      customer_shipping:
        allOf:
        - $ref: '#/definitions/stripe.ShippingDetails'
        description: The customer's shipping information. Until the invoice is finalized,
          this field will equal `customer.shipping`. Once the invoice is finalized,
          this field will no longer be updated.
      customer_tax_exempt:
        allOf:
        - $ref: '#/definitions/stripe.CustomerTaxExempt'
        description: The customer's tax exempt status. Until the invoice is finalized,
          this field will equal `customer.tax_exempt`. Once the invoice is finalized,
          this field will no longer be updated.
      customer_tax_ids:
        description: The customer's tax IDs. Until the invoice is finalized, this
          field will contain the same tax IDs as `customer.tax_ids`. Once the invoice
          is finalized, this field will no longer be updated.
        items:
          $ref: '#/definitions/stripe.InvoiceCustomerTaxID'
        type: array
      default_payment_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethod'
        description: ID of the default payment method for the invoice. It must belong
          to the customer associated with the invoice. If not set, defaults to the
          subscription's default payment method, if any, or to the default payment
          method in the customer's invoice settings.
      default_source:
        allOf:
        - $ref: '#/definitions/stripe.PaymentSource'
        description: ID of the default payment source for the invoice. It must belong
          to the customer associated with the invoice and be in a chargeable state.
          If not set, defaults to the subscription's default source, if any, or to
          the customer's default source.
      default_tax_rates:
        description: The tax rates applied to this invoice, if any.
        items:
          $ref: '#/definitions/stripe.TaxRate'
        type: array
      deleted:
        type: boolean
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users. Referenced as 'memo' in the Dashboard.
        type: string
      discount:
        allOf:
        - $ref: '#/definitions/stripe.Discount'
        description: Describes the current discount applied to this invoice, if there
          is one. Not populated if there are multiple discounts.
      discounts:
        description: The discounts applied to the invoice. Line item discounts are
          applied before invoice discounts. Use `expand[]=discounts` to expand each
          discount.
        items:
          $ref: '#/definitions/stripe.Discount'
        type: array
      due_date:
        description: The date on which payment for this invoice is due. This value
          will be `null` for invoices where `collection_method=charge_automatically`.
        type: integer
      effective_at:
        description: The date when this invoice is in effect. Same as `finalized_at`
          unless overwritten. When defined, this value replaces the system-generated
          'Date of issue' printed on the invoice PDF and receipt.
        type: integer
      ending_balance:
        description: Ending customer balance after the invoice is finalized. Invoices
          are finalized approximately an hour after successful webhook delivery or
          when payment collection is attempted for the invoice. If the invoice has
          not been finalized yet, this will be null.
        type: integer
      footer:
        description: Footer displayed on the invoice.
        type: string
      from_invoice:
        allOf:
        - $ref: '#/definitions/stripe.InvoiceFromInvoice'
        description: Details of the invoice that was cloned. See the [revision documentation](https://stripe.com/docs/invoicing/invoice-revisions)
          for more details.
      hosted_invoice_url:
        description: The URL for the hosted invoice page, which allows customers to
          view and pay an invoice. If the invoice has not been finalized yet, this
          will be null.
        type: string
      id:
        description: Unique identifier for the object. This property is always present
          unless the invoice is an upcoming invoice. See [Retrieve an upcoming invoice](https://stripe.com/docs/api/invoices/upcoming)
          for more details.
        type: string
      invoice_pdf:
        description: The link to download the PDF for the invoice. If the invoice
          has not been finalized yet, this will be null.
        type: string
      issuer:
        $ref: '#/definitions/stripe.InvoiceIssuer'
      last_finalization_error:
        allOf:
        - $ref: '#/definitions/stripe.Error'
        description: The error encountered during the previous attempt to finalize
          the invoice. This field is cleared when the invoice is successfully finalized.
      latest_revision:
        allOf:
        - $ref: '#/definitions/stripe.Invoice'
        description: The ID of the most recent non-draft revision of this invoice
      lines:
        allOf:
        - $ref: '#/definitions/stripe.InvoiceLineItemList'
        description: 'The individual line items that make up the invoice. `lines`
          is sorted as follows: (1) pending invoice items (including prorations) in
          reverse chronological order, (2) subscription items in reverse chronological
          order, and (3) invoice items added after invoice creation in chronological
          order.'
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      next_payment_attempt:
        description: The time at which payment will next be attempted. This value
          will be `null` for invoices where `collection_method=send_invoice`.
        type: integer
      number:
        description: A unique, identifying string that appears on emails sent to the
          customer for this invoice. This starts with the customer's unique invoice_prefix
          if it is specified.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      on_behalf_of:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The account (if any) for which the funds of the invoice payment
          are intended. If set, the invoice will be presented with the branding and
          support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect)
          documentation for details.
      paid:
        description: Whether payment was successfully collected for this invoice.
          An invoice can be paid (most commonly) with a charge or with credit from
          the customer's account balance.
        type: boolean
      paid_out_of_band:
        description: Returns true if the invoice was manually marked paid, returns
          false if the invoice hasn't been paid yet or was paid on Stripe.
        type: boolean
      payment_intent:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntent'
        description: The PaymentIntent associated with this invoice. The PaymentIntent
          is generated when the invoice is finalized, and can then be used to pay
          the invoice. Note that voiding an invoice will cancel the PaymentIntent.
      payment_settings:
        $ref: '#/definitions/stripe.InvoicePaymentSettings'
      period_end:
        description: End of the usage period during which invoice items were added
          to this invoice. This looks back one period for a subscription invoice.
          Use the [line item period](https://stripe.com/api/invoices/line_item#invoice_line_item_object-period)
          to get the service period for each price.
        type: integer
      period_start:
        description: Start of the usage period during which invoice items were added
          to this invoice. This looks back one period for a subscription invoice.
          Use the [line item period](https://stripe.com/api/invoices/line_item#invoice_line_item_object-period)
          to get the service period for each price.
        type: integer
      post_payment_credit_notes_amount:
        description: Total amount of all post-payment credit notes issued for this
          invoice.
        type: integer
      pre_payment_credit_notes_amount:
        description: Total amount of all pre-payment credit notes issued for this
          invoice.
        type: integer
      quote:
        allOf:
        - $ref: '#/definitions/stripe.Quote'
        description: The quote this invoice was generated from.
      receipt_number:
        description: This is the transaction number that appears on email receipts
          sent for this invoice.
        type: string
      rendering:
        allOf:
        - $ref: '#/definitions/stripe.InvoiceRendering'
        description: The rendering-related settings that control how the invoice is
          displayed on customer-facing surfaces such as PDF and Hosted Invoice Page.
      shipping_cost:
        allOf:
        - $ref: '#/definitions/stripe.InvoiceShippingCost'
        description: The details of the cost of shipping, including the ShippingRate
          applied on the invoice.
      shipping_details:
        allOf:
        - $ref: '#/definitions/stripe.ShippingDetails'
        description: Shipping details for the invoice. The Invoice PDF will use the
          `shipping_details` value if it is set, otherwise the PDF will render the
          shipping address from the customer.
      starting_balance:
        description: Starting customer balance before the invoice is finalized. If
          the invoice has not been finalized yet, this will be the current customer
          balance. For revision invoices, this also includes any customer balance
          that was applied to the original invoice.
        type: integer
      statement_descriptor:
        description: Extra information about an invoice for the customer's credit
          card statement.
        type: string
      status:
        allOf:
        - $ref: '#/definitions/stripe.InvoiceStatus'
        description: The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`,
          or `void`. [Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)
      status_transitions:
        $ref: '#/definitions/stripe.InvoiceStatusTransitions'
      subscription:
        allOf:
        - $ref: '#/definitions/stripe.Subscription'
        description: The subscription that this invoice was prepared for, if any.
      subscription_details:
        allOf:
        - $ref: '#/definitions/stripe.InvoiceSubscriptionDetails'
        description: Details about the subscription that created this invoice.
      subscription_proration_date:
        description: Only set for upcoming invoices that preview prorations. The time
          used to calculate prorations.
        type: integer
      subtotal:
        description: Total of all subscriptions, invoice items, and prorations on
          the invoice before any invoice level discount or exclusive tax is applied.
          Item discounts are already incorporated
        type: integer
      subtotal_excluding_tax:
        description: The integer amount in cents (or local equivalent) representing
          the subtotal of the invoice before any invoice level discount or tax is
          applied. Item discounts are already incorporated
        type: integer
      tax:
        description: The amount of tax on this invoice. This is the sum of all the
          tax amounts on this invoice.
        type: integer
      test_clock:
        allOf:
        - $ref: '#/definitions/stripe.TestHelpersTestClock'
        description: ID of the test clock this invoice belongs to.
      threshold_reason:
        $ref: '#/definitions/stripe.InvoiceThresholdReason'
      total:
        description: Total after discounts and taxes.
        type: integer
      total_discount_amounts:
        description: The aggregate amounts calculated per discount across all line
          items.
        items:
          $ref: '#/definitions/stripe.InvoiceTotalDiscountAmount'
        type: array
      total_excluding_tax:
        description: The integer amount in cents (or local equivalent) representing
          the total amount of the invoice including all discounts but excluding all
          tax.
        type: integer
      total_pretax_credit_amounts:
        description: 'Contains pretax credit amounts (ex: discount, credit grants,
          etc) that apply to this invoice. This is a combined list of total_pretax_credit_amounts
          across all invoice line items.'
        items:
          $ref: '#/definitions/stripe.InvoiceTotalPretaxCreditAmount'
        type: array
      total_tax_amounts:
        description: The aggregate amounts calculated per tax rate for all line items.
        items:
          $ref: '#/definitions/stripe.InvoiceTotalTaxAmount'
        type: array
      transfer_data:
        allOf:
        - $ref: '#/definitions/stripe.InvoiceTransferData'
        description: The account (if any) the payment will be attributed to for tax
          reporting, and where funds from the payment will be transferred to for the
          invoice.
      webhooks_delivered_at:
        description: Invoices are automatically paid or sent 1 hour after webhooks
          are delivered, or until all webhook delivery attempts have [been exhausted](https://stripe.com/docs/billing/webhooks#understand).
          This field tracks the time when webhooks for this invoice were successfully
          delivered. If the invoice had no webhooks to deliver, this will be set while
          the invoice is being created.
        type: integer
    type: object
  stripe.InvoiceAutomaticTax:
    properties:
      enabled:
        description: Whether Stripe automatically computes tax on this invoice. Note
          that incompatible invoice items (invoice items with manually specified [tax
          rates](https://stripe.com/docs/api/tax_rates), negative amounts, or `tax_behavior=unspecified`)
          cannot be added to automatic tax invoices.
        type: boolean
      liability:
        allOf:
        - $ref: '#/definitions/stripe.InvoiceAutomaticTaxLiability'
        description: The account that's liable for tax. If set, the business address
          and tax registrations required to perform the tax calculation are loaded
          from this account. The tax transaction is returned in the report of the
          connected account.
      status:
        allOf:
        - $ref: '#/definitions/stripe.InvoiceAutomaticTaxStatus'
        description: The status of the most recent automated tax calculation for this
          invoice.
    type: object
  stripe.InvoiceAutomaticTaxLiability:
    properties:
      account:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The connected account being referenced when `type` is `account`.
      type:
        allOf:
        - $ref: '#/definitions/stripe.InvoiceAutomaticTaxLiabilityType'
        description: Type of the account referenced.
    type: object
  stripe.InvoiceAutomaticTaxLiabilityType:
    enum:
    - account
    - self
    type: string
    x-enum-varnames:
    - InvoiceAutomaticTaxLiabilityTypeAccount
    - InvoiceAutomaticTaxLiabilityTypeSelf
  stripe.InvoiceAutomaticTaxStatus:
    enum:
    - complete
    - failed
    - requires_location_inputs
    type: string
    x-enum-varnames:
    - InvoiceAutomaticTaxStatusComplete
    - InvoiceAutomaticTaxStatusFailed
    - InvoiceAutomaticTaxStatusRequiresLocationInputs
  stripe.InvoiceBillingReason:
    enum:
    - automatic_pending_invoice_item_invoice
    - manual
    - quote_accept
    - subscription
    - subscription_create
    - subscription_cycle
    - subscription_threshold
    - subscription_update
    - upcoming
    type: string
    x-enum-varnames:
    - InvoiceBillingReasonAutomaticPendingInvoiceItemInvoice
    - InvoiceBillingReasonManual
    - InvoiceBillingReasonQuoteAccept
    - InvoiceBillingReasonSubscription
    - InvoiceBillingReasonSubscriptionCreate
    - InvoiceBillingReasonSubscriptionCycle
    - InvoiceBillingReasonSubscriptionThreshold
    - InvoiceBillingReasonSubscriptionUpdate
    - InvoiceBillingReasonUpcoming
  stripe.InvoiceCollectionMethod:
    enum:
    - charge_automatically
    - send_invoice
    type: string
    x-enum-varnames:
    - InvoiceCollectionMethodChargeAutomatically
    - InvoiceCollectionMethodSendInvoice
  stripe.InvoiceCustomField:
    properties:
      name:
        description: The name of the custom field.
        type: string
      value:
        description: The value of the custom field.
        type: string
    type: object
  stripe.InvoiceCustomerTaxID:
    properties:
      type:
        allOf:
        - $ref: '#/definitions/stripe.TaxIDType'
        description: The type of the tax ID, one of `ad_nrt`, `ar_cuit`, `eu_vat`,
          `bo_tin`, `br_cnpj`, `br_cpf`, `cn_tin`, `co_nit`, `cr_tin`, `do_rcn`, `ec_ruc`,
          `eu_oss_vat`, `hr_oib`, `pe_ruc`, `ro_tin`, `rs_pib`, `sv_nit`, `uy_ruc`,
          `ve_rif`, `vn_tin`, `gb_vat`, `nz_gst`, `au_abn`, `au_arn`, `in_gst`, `no_vat`,
          `no_voec`, `za_vat`, `ch_vat`, `mx_rfc`, `sg_uen`, `ru_inn`, `ru_kpp`, `ca_bn`,
          `hk_br`, `es_cif`, `tw_vat`, `th_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `li_uid`,
          `my_itn`, `us_ein`, `kr_brn`, `ca_qst`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`,
          `ca_pst_sk`, `my_sst`, `sg_gst`, `ae_trn`, `cl_tin`, `sa_vat`, `id_npwp`,
          `my_frp`, `il_vat`, `ge_vat`, `ua_vat`, `is_vat`, `bg_uic`, `hu_tin`, `si_tin`,
          `ke_pin`, `tr_tin`, `eg_tin`, `ph_tin`, `bh_vat`, `kz_bin`, `ng_tin`, `om_vat`,
          `de_stn`, `ch_uid`, `tz_vat`, `uz_vat`, `uz_tin`, `md_vat`, `ma_vat`, `by_tin`,
          or `unknown`
      value:
        description: The value of the tax ID.
        type: string
    type: object
  stripe.InvoiceFromInvoice:
    properties:
      action:
        description: The relation between this invoice and the cloned invoice
        type: string
      invoice:
        allOf:
        - $ref: '#/definitions/stripe.Invoice'
        description: The invoice that was cloned.
    type: object
  stripe.InvoiceIssuer:
    properties:
      account:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The connected account being referenced when `type` is `account`.
      type:
        allOf:
        - $ref: '#/definitions/stripe.InvoiceIssuerType'
        description: Type of the account referenced.
    type: object
  stripe.InvoiceIssuerType:
    enum:
    - account
    - self
    type: string
    x-enum-varnames:
    - InvoiceIssuerTypeAccount
    - InvoiceIssuerTypeSelf
  stripe.InvoiceItem:
    properties:
      amount:
        description: Amount (in the `currency` specified) of the invoice item. This
          should always be equal to `unit_amount * quantity`.
        type: integer
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      customer:
        allOf:
        - $ref: '#/definitions/stripe.Customer'
        description: The ID of the customer who will be billed when this invoice item
          is billed.
      date:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      deleted:
        type: boolean
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      discountable:
        description: If true, discounts will apply to this invoice item. Always false
          for prorations.
        type: boolean
      discounts:
        description: The discounts which apply to the invoice item. Item discounts
          are applied before invoice discounts. Use `expand[]=discounts` to expand
          each discount.
        items:
          $ref: '#/definitions/stripe.Discount'
        type: array
      id:
        description: Unique identifier for the object.
        type: string
      invoice:
        allOf:
        - $ref: '#/definitions/stripe.Invoice'
        description: The ID of the invoice this invoice item belongs to.
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      period:
        $ref: '#/definitions/stripe.Period'
      plan:
        allOf:
        - $ref: '#/definitions/stripe.Plan'
        description: If the invoice item is a proration, the plan of the subscription
          that the proration was computed for.
      price:
        allOf:
        - $ref: '#/definitions/stripe.Price'
        description: The price of the invoice item.
      proration:
        description: Whether the invoice item was created automatically as a proration
          adjustment when the customer switched plans.
        type: boolean
      quantity:
        description: Quantity of units for the invoice item. If the invoice item is
          a proration, the quantity of the subscription that the proration was computed
          for.
        type: integer
      subscription:
        allOf:
        - $ref: '#/definitions/stripe.Subscription'
        description: The subscription that this invoice item has been created for,
          if any.
      subscription_item:
        description: The subscription item that this invoice item has been created
          for, if any.
        type: string
      tax_rates:
        description: The tax rates which apply to the invoice item. When set, the
          `default_tax_rates` on the invoice do not apply to this invoice item.
        items:
          $ref: '#/definitions/stripe.TaxRate'
        type: array
      test_clock:
        allOf:
        - $ref: '#/definitions/stripe.TestHelpersTestClock'
        description: ID of the test clock this invoice item belongs to.
      unit_amount:
        description: Unit amount (in the `currency` specified) of the invoice item.
        type: integer
      unit_amount_decimal:
        description: Same as `unit_amount`, but contains a decimal value with at most
          12 decimal places.
        example: "0"
        type: string
    type: object
  stripe.InvoiceLineItem:
    properties:
      amount:
        description: The amount, in cents (or local equivalent).
        type: integer
      amount_excluding_tax:
        description: The integer amount in cents (or local equivalent) representing
          the amount for this line item, excluding all tax and discounts.
        type: integer
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      discount_amounts:
        description: The amount of discount calculated per discount for this line
          item.
        items:
          $ref: '#/definitions/stripe.InvoiceLineItemDiscountAmount'
        type: array
      discountable:
        description: If true, discounts will apply to this line item. Always false
          for prorations.
        type: boolean
      discounts:
        description: The discounts applied to the invoice line item. Line item discounts
          are applied before invoice discounts. Use `expand[]=discounts` to expand
          each discount.
        items:
          $ref: '#/definitions/stripe.Discount'
        type: array
      id:
        description: Unique identifier for the object.
        type: string
      invoice:
        description: The ID of the invoice that contains this line item.
        type: string
      invoice_item:
        allOf:
        - $ref: '#/definitions/stripe.InvoiceItem'
        description: The ID of the [invoice item](https://stripe.com/docs/api/invoiceitems)
          associated with this line item if any.
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format. Note that for line
          items with `type=subscription`, `metadata` reflects the current metadata
          from the subscription associated with the line item, unless the invoice
          line was directly updated with different metadata after creation.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      period:
        $ref: '#/definitions/stripe.Period'
      plan:
        allOf:
        - $ref: '#/definitions/stripe.Plan'
        description: The plan of the subscription, if the line item is a subscription
          or a proration.
      pretax_credit_amounts:
        description: 'Contains pretax credit amounts (ex: discount, credit grants,
          etc) that apply to this line item.'
        items:
          $ref: '#/definitions/stripe.InvoiceLineItemPretaxCreditAmount'
        type: array
      price:
        allOf:
        - $ref: '#/definitions/stripe.Price'
        description: The price of the line item.
      proration:
        description: Whether this is a proration.
        type: boolean
      proration_details:
        allOf:
        - $ref: '#/definitions/stripe.InvoiceLineItemProrationDetails'
        description: Additional details for proration line items
      quantity:
        description: The quantity of the subscription, if the line item is a subscription
          or a proration.
        type: integer
      subscription:
        allOf:
        - $ref: '#/definitions/stripe.Subscription'
        description: The subscription that the invoice item pertains to, if any.
      subscription_item:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionItem'
        description: The subscription item that generated this line item. Left empty
          if the line item is not an explicit result of a subscription.
      tax_amounts:
        description: The amount of tax calculated per tax rate for this line item
        items:
          $ref: '#/definitions/stripe.InvoiceTotalTaxAmount'
        type: array
      tax_rates:
        description: The tax rates which apply to the line item.
        items:
          $ref: '#/definitions/stripe.TaxRate'
        type: array
      type:
        allOf:
        - $ref: '#/definitions/stripe.InvoiceLineItemType'
        description: A string identifying the type of the source of this line item,
          either an `invoiceitem` or a `subscription`.
      unit_amount_excluding_tax:
        description: The amount in cents (or local equivalent) representing the unit
          amount for this line item, excluding all tax and discounts.
        example: "0"
        type: string
    type: object
  stripe.InvoiceLineItemDiscountAmount:
    properties:
      amount:
        description: The amount, in cents (or local equivalent), of the discount.
        type: integer
      discount:
        allOf:
        - $ref: '#/definitions/stripe.Discount'
        description: The discount that was applied to get this discount amount.
    type: object
  stripe.InvoiceLineItemList:
    properties:
      data:
        items:
          $ref: '#/definitions/stripe.InvoiceLineItem'
        type: array
      has_more:
        type: boolean
      total_count:
        description: |-
          TotalCount is the total number of objects in the collection (beyond just
          on the current page). This is not returned in most list calls.

          Deprecated: TotalCount is only included in some legacy situations and
          not generally available anymore.
        type: integer
      url:
        type: string
    type: object
  stripe.InvoiceLineItemPretaxCreditAmount:
    properties:
      amount:
        description: The amount, in cents (or local equivalent), of the pretax credit
          amount.
        type: integer
      credit_balance_transaction:
        allOf:
        - $ref: '#/definitions/stripe.BillingCreditBalanceTransaction'
        description: The credit balance transaction that was applied to get this pretax
          credit amount.
      discount:
        allOf:
        - $ref: '#/definitions/stripe.Discount'
        description: The discount that was applied to get this pretax credit amount.
      type:
        allOf:
        - $ref: '#/definitions/stripe.InvoiceLineItemPretaxCreditAmountType'
        description: Type of the pretax credit amount referenced.
    type: object
  stripe.InvoiceLineItemPretaxCreditAmountType:
    enum:
    - credit_balance_transaction
    - discount
    type: string
    x-enum-varnames:
    - InvoiceLineItemPretaxCreditAmountTypeCreditBalanceTransaction
    - InvoiceLineItemPretaxCreditAmountTypeDiscount
  stripe.InvoiceLineItemProrationDetails:
    properties:
      credited_items:
        allOf:
        - $ref: '#/definitions/stripe.InvoiceLineItemProrationDetailsCreditedItems'
        description: For a credit proration `line_item`, the original debit line_items
          to which the credit proration applies.
    type: object
  stripe.InvoiceLineItemProrationDetailsCreditedItems:
    properties:
      invoice:
        description: Invoice containing the credited invoice line items
        type: string
      invoice_line_items:
        description: Credited invoice line items
        items:
          type: string
        type: array
    type: object
  stripe.InvoiceLineItemType:
    enum:
    - invoiceitem
    - subscription
    type: string
    x-enum-varnames:
    - InvoiceLineItemTypeInvoiceItem
    - InvoiceLineItemTypeSubscription
  stripe.InvoicePaymentSettings:
    properties:
      default_mandate:
        description: ID of the mandate to be used for this invoice. It must correspond
          to the payment method used to pay the invoice, including the invoice's default_payment_method
          or default_source, if set.
        type: string
      payment_method_options:
        allOf:
        - $ref: '#/definitions/stripe.InvoicePaymentSettingsPaymentMethodOptions'
        description: Payment-method-specific configuration to provide to the invoice's
          PaymentIntent.
      payment_method_types:
        description: The list of payment method types (e.g. card) to provide to the
          invoice's PaymentIntent. If not set, Stripe attempts to automatically determine
          the types to use by looking at the invoice's default payment method, the
          subscription's default payment method, the customer's default payment method,
          and your [invoice template settings](https://dashboard.stripe.com/settings/billing/invoice).
        items:
          $ref: '#/definitions/stripe.InvoicePaymentSettingsPaymentMethodType'
        type: array
    type: object
  stripe.InvoicePaymentSettingsPaymentMethodOptions:
    properties:
      acss_debit:
        allOf:
        - $ref: '#/definitions/stripe.InvoicePaymentSettingsPaymentMethodOptionsACSSDebit'
        description: If paying by `acss_debit`, this sub-hash contains details about
          the Canadian pre-authorized debit payment method options to pass to the
          invoice's PaymentIntent.
      bancontact:
        allOf:
        - $ref: '#/definitions/stripe.InvoicePaymentSettingsPaymentMethodOptionsBancontact'
        description: If paying by `bancontact`, this sub-hash contains details about
          the Bancontact payment method options to pass to the invoice's PaymentIntent.
      card:
        allOf:
        - $ref: '#/definitions/stripe.InvoicePaymentSettingsPaymentMethodOptionsCard'
        description: If paying by `card`, this sub-hash contains details about the
          Card payment method options to pass to the invoice's PaymentIntent.
      customer_balance:
        allOf:
        - $ref: '#/definitions/stripe.InvoicePaymentSettingsPaymentMethodOptionsCustomerBalance'
        description: If paying by `customer_balance`, this sub-hash contains details
          about the Bank transfer payment method options to pass to the invoice's
          PaymentIntent.
      konbini:
        allOf:
        - $ref: '#/definitions/stripe.InvoicePaymentSettingsPaymentMethodOptionsKonbini'
        description: If paying by `konbini`, this sub-hash contains details about
          the Konbini payment method options to pass to the invoice's PaymentIntent.
      sepa_debit:
        allOf:
        - $ref: '#/definitions/stripe.InvoicePaymentSettingsPaymentMethodOptionsSEPADebit'
        description: If paying by `sepa_debit`, this sub-hash contains details about
          the SEPA Direct Debit payment method options to pass to the invoice's PaymentIntent.
      us_bank_account:
        allOf:
        - $ref: '#/definitions/stripe.InvoicePaymentSettingsPaymentMethodOptionsUSBankAccount'
        description: If paying by `us_bank_account`, this sub-hash contains details
          about the ACH direct debit payment method options to pass to the invoice's
          PaymentIntent.
    type: object
  stripe.InvoicePaymentSettingsPaymentMethodOptionsACSSDebit:
    properties:
      mandate_options:
        $ref: '#/definitions/stripe.InvoicePaymentSettingsPaymentMethodOptionsACSSDebitMandateOptions'
      verification_method:
        allOf:
        - $ref: '#/definitions/stripe.InvoicePaymentSettingsPaymentMethodOptionsACSSDebitVerificationMethod'
        description: Bank account verification method.
    type: object
  stripe.InvoicePaymentSettingsPaymentMethodOptionsACSSDebitMandateOptions:
    properties:
      transaction_type:
        allOf:
        - $ref: '#/definitions/stripe.InvoicePaymentSettingsPaymentMethodOptionsACSSDebitMandateOptionsTransactionType'
        description: Transaction type of the mandate.
    type: object
  stripe.InvoicePaymentSettingsPaymentMethodOptionsACSSDebitMandateOptionsTransactionType:
    enum:
    - business
    - personal
    type: string
    x-enum-varnames:
    - InvoicePaymentSettingsPaymentMethodOptionsACSSDebitMandateOptionsTransactionTypeBusiness
    - InvoicePaymentSettingsPaymentMethodOptionsACSSDebitMandateOptionsTransactionTypePersonal
  stripe.InvoicePaymentSettingsPaymentMethodOptionsACSSDebitVerificationMethod:
    enum:
    - automatic
    - instant
    - microdeposits
    type: string
    x-enum-varnames:
    - InvoicePaymentSettingsPaymentMethodOptionsACSSDebitVerificationMethodAutomatic
    - InvoicePaymentSettingsPaymentMethodOptionsACSSDebitVerificationMethodInstant
    - InvoicePaymentSettingsPaymentMethodOptionsACSSDebitVerificationMethodMicrodeposits
  stripe.InvoicePaymentSettingsPaymentMethodOptionsBancontact:
    properties:
      preferred_language:
        description: Preferred language of the Bancontact authorization page that
          the customer is redirected to.
        type: string
    type: object
  stripe.InvoicePaymentSettingsPaymentMethodOptionsCard:
    properties:
      installments:
        $ref: '#/definitions/stripe.InvoicePaymentSettingsPaymentMethodOptionsCardInstallments'
      request_three_d_secure:
        allOf:
        - $ref: '#/definitions/stripe.InvoicePaymentSettingsPaymentMethodOptionsCardRequestThreeDSecure'
        description: We strongly recommend that you rely on our SCA Engine to automatically
          prompt your customers for authentication based on risk level and [other
          requirements](https://stripe.com/docs/strong-customer-authentication). However,
          if you wish to request 3D Secure based on logic from your own fraud engine,
          provide this option. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds)
          for more information on how this configuration interacts with Radar and
          our SCA Engine.
    type: object
  stripe.InvoicePaymentSettingsPaymentMethodOptionsCardInstallments:
    properties:
      enabled:
        description: Whether Installments are enabled for this Invoice.
        type: boolean
    type: object
  stripe.InvoicePaymentSettingsPaymentMethodOptionsCardRequestThreeDSecure:
    enum:
    - any
    - automatic
    - challenge
    type: string
    x-enum-varnames:
    - InvoicePaymentSettingsPaymentMethodOptionsCardRequestThreeDSecureAny
    - InvoicePaymentSettingsPaymentMethodOptionsCardRequestThreeDSecureAutomatic
    - InvoicePaymentSettingsPaymentMethodOptionsCardRequestThreeDSecureChallenge
  stripe.InvoicePaymentSettingsPaymentMethodOptionsCustomerBalance:
    properties:
      bank_transfer:
        $ref: '#/definitions/stripe.InvoicePaymentSettingsPaymentMethodOptionsCustomerBalanceBankTransfer'
      funding_type:
        allOf:
        - $ref: '#/definitions/stripe.InvoicePaymentSettingsPaymentMethodOptionsCustomerBalanceFundingType'
        description: 'The funding method type to be used when there are not enough
          funds in the customer balance. Permitted values include: `bank_transfer`.'
    type: object
  stripe.InvoicePaymentSettingsPaymentMethodOptionsCustomerBalanceBankTransfer:
    properties:
      eu_bank_transfer:
        $ref: '#/definitions/stripe.InvoicePaymentSettingsPaymentMethodOptionsCustomerBalanceBankTransferEUBankTransfer'
      type:
        description: 'The bank transfer type that can be used for funding. Permitted
          values include: `eu_bank_transfer`, `gb_bank_transfer`, `jp_bank_transfer`,
          `mx_bank_transfer`, or `us_bank_transfer`.'
        type: string
    type: object
  stripe.InvoicePaymentSettingsPaymentMethodOptionsCustomerBalanceBankTransferEUBankTransfer:
    properties:
      country:
        description: 'The desired country code of the bank account information. Permitted
          values include: `BE`, `DE`, `ES`, `FR`, `IE`, or `NL`.'
        type: string
    type: object
  stripe.InvoicePaymentSettingsPaymentMethodOptionsCustomerBalanceFundingType:
    enum:
    - bank_transfer
    type: string
    x-enum-varnames:
    - InvoicePaymentSettingsPaymentMethodOptionsCustomerBalanceFundingTypeBankTransfer
  stripe.InvoicePaymentSettingsPaymentMethodOptionsKonbini:
    type: object
  stripe.InvoicePaymentSettingsPaymentMethodOptionsSEPADebit:
    type: object
  stripe.InvoicePaymentSettingsPaymentMethodOptionsUSBankAccount:
    properties:
      financial_connections:
        $ref: '#/definitions/stripe.InvoicePaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnections'
      verification_method:
        allOf:
        - $ref: '#/definitions/stripe.InvoicePaymentSettingsPaymentMethodOptionsUSBankAccountVerificationMethod'
        description: Bank account verification method.
    type: object
  stripe.InvoicePaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnections:
    properties:
      filters:
        $ref: '#/definitions/stripe.InvoicePaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsFilters'
      permissions:
        description: The list of permissions to request. The `payment_method` permission
          must be included.
        items:
          $ref: '#/definitions/stripe.InvoicePaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsPermission'
        type: array
      prefetch:
        description: Data features requested to be retrieved upon account creation.
        items:
          $ref: '#/definitions/stripe.InvoicePaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsPrefetch'
        type: array
    type: object
  stripe.InvoicePaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsFilters:
    properties:
      account_subcategories:
        description: The account subcategories to use to filter for possible accounts
          to link. Valid subcategories are `checking` and `savings`.
        items:
          $ref: '#/definitions/stripe.InvoicePaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsFiltersAccountSubcategory'
        type: array
    type: object
  stripe.InvoicePaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsFiltersAccountSubcategory:
    enum:
    - checking
    - savings
    type: string
    x-enum-varnames:
    - InvoicePaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsFiltersAccountSubcategoryChecking
    - InvoicePaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsFiltersAccountSubcategorySavings
  stripe.InvoicePaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsPermission:
    enum:
    - balances
    - ownership
    - payment_method
    - transactions
    type: string
    x-enum-varnames:
    - InvoicePaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsPermissionBalances
    - InvoicePaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsPermissionOwnership
    - InvoicePaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsPermissionPaymentMethod
    - InvoicePaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsPermissionTransactions
  stripe.InvoicePaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsPrefetch:
    enum:
    - balances
    - ownership
    - transactions
    type: string
    x-enum-varnames:
    - InvoicePaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsPrefetchBalances
    - InvoicePaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsPrefetchOwnership
    - InvoicePaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsPrefetchTransactions
  stripe.InvoicePaymentSettingsPaymentMethodOptionsUSBankAccountVerificationMethod:
    enum:
    - automatic
    - instant
    - microdeposits
    type: string
    x-enum-varnames:
    - InvoicePaymentSettingsPaymentMethodOptionsUSBankAccountVerificationMethodAutomatic
    - InvoicePaymentSettingsPaymentMethodOptionsUSBankAccountVerificationMethodInstant
    - InvoicePaymentSettingsPaymentMethodOptionsUSBankAccountVerificationMethodMicrodeposits
  stripe.InvoicePaymentSettingsPaymentMethodType:
    enum:
    - ach_credit_transfer
    - ach_debit
    - acss_debit
    - amazon_pay
    - au_becs_debit
    - bacs_debit
    - bancontact
    - boleto
    - card
    - cashapp
    - customer_balance
    - eps
    - fpx
    - giropay
    - grabpay
    - ideal
    - jp_credit_transfer
    - kakao_pay
    - konbini
    - kr_card
    - link
    - multibanco
    - naver_pay
    - p24
    - payco
    - paynow
    - paypal
    - promptpay
    - revolut_pay
    - sepa_credit_transfer
    - sepa_debit
    - sofort
    - swish
    - us_bank_account
    - wechat_pay
    type: string
    x-enum-varnames:
    - InvoicePaymentSettingsPaymentMethodTypeACHCreditTransfer
    - InvoicePaymentSettingsPaymentMethodTypeACHDebit
    - InvoicePaymentSettingsPaymentMethodTypeACSSDebit
    - InvoicePaymentSettingsPaymentMethodTypeAmazonPay
    - InvoicePaymentSettingsPaymentMethodTypeAUBECSDebit
    - InvoicePaymentSettingsPaymentMethodTypeBACSDebit
    - InvoicePaymentSettingsPaymentMethodTypeBancontact
    - InvoicePaymentSettingsPaymentMethodTypeBoleto
    - InvoicePaymentSettingsPaymentMethodTypeCard
    - InvoicePaymentSettingsPaymentMethodTypeCashApp
    - InvoicePaymentSettingsPaymentMethodTypeCustomerBalance
    - InvoicePaymentSettingsPaymentMethodTypeEPS
    - InvoicePaymentSettingsPaymentMethodTypeFPX
    - InvoicePaymentSettingsPaymentMethodTypeGiropay
    - InvoicePaymentSettingsPaymentMethodTypeGrabpay
    - InvoicePaymentSettingsPaymentMethodTypeIDEAL
    - InvoicePaymentSettingsPaymentMethodTypeJPCreditTransfer
    - InvoicePaymentSettingsPaymentMethodTypeKakaoPay
    - InvoicePaymentSettingsPaymentMethodTypeKonbini
    - InvoicePaymentSettingsPaymentMethodTypeKrCard
    - InvoicePaymentSettingsPaymentMethodTypeLink
    - InvoicePaymentSettingsPaymentMethodTypeMultibanco
    - InvoicePaymentSettingsPaymentMethodTypeNaverPay
    - InvoicePaymentSettingsPaymentMethodTypeP24
    - InvoicePaymentSettingsPaymentMethodTypePayco
    - InvoicePaymentSettingsPaymentMethodTypePayNow
    - InvoicePaymentSettingsPaymentMethodTypePaypal
    - InvoicePaymentSettingsPaymentMethodTypePromptPay
    - InvoicePaymentSettingsPaymentMethodTypeRevolutPay
    - InvoicePaymentSettingsPaymentMethodTypeSEPACreditTransfer
    - InvoicePaymentSettingsPaymentMethodTypeSEPADebit
    - InvoicePaymentSettingsPaymentMethodTypeSofort
    - InvoicePaymentSettingsPaymentMethodTypeSwish
    - InvoicePaymentSettingsPaymentMethodTypeUSBankAccount
    - InvoicePaymentSettingsPaymentMethodTypeWeChatPay
  stripe.InvoiceRendering:
    properties:
      amount_tax_display:
        description: How line-item prices and amounts will be displayed with respect
          to tax on invoice PDFs.
        type: string
      pdf:
        allOf:
        - $ref: '#/definitions/stripe.InvoiceRenderingPDF'
        description: Invoice pdf rendering options
      template:
        description: ID of the rendering template that the invoice is formatted by.
        type: string
      template_version:
        description: Version of the rendering template that the invoice is using.
        type: integer
    type: object
  stripe.InvoiceRenderingPDF:
    properties:
      page_size:
        allOf:
        - $ref: '#/definitions/stripe.InvoiceRenderingPDFPageSize'
        description: Page size of invoice pdf. Options include a4, letter, and auto.
          If set to auto, page size will be switched to a4 or letter based on customer
          locale.
    type: object
  stripe.InvoiceRenderingPDFPageSize:
    enum:
    - a4
    - auto
    - letter
    type: string
    x-enum-varnames:
    - InvoiceRenderingPDFPageSizeA4
    - InvoiceRenderingPDFPageSizeAuto
    - InvoiceRenderingPDFPageSizeLetter
  stripe.InvoiceShippingCost:
    properties:
      amount_subtotal:
        description: Total shipping cost before any taxes are applied.
        type: integer
      amount_tax:
        description: Total tax amount applied due to shipping costs. If no tax was
          applied, defaults to 0.
        type: integer
      amount_total:
        description: Total shipping cost after taxes are applied.
        type: integer
      shipping_rate:
        allOf:
        - $ref: '#/definitions/stripe.ShippingRate'
        description: The ID of the ShippingRate for this invoice.
      taxes:
        description: The taxes applied to the shipping rate.
        items:
          $ref: '#/definitions/stripe.InvoiceShippingCostTax'
        type: array
    type: object
  stripe.InvoiceShippingCostTax:
    properties:
      amount:
        description: Amount of tax applied for this rate.
        type: integer
      rate:
        allOf:
        - $ref: '#/definitions/stripe.TaxRate'
        description: |-
          Tax rates can be applied to [invoices](https://stripe.com/docs/billing/invoices/tax-rates), [subscriptions](https://stripe.com/docs/billing/subscriptions/taxes) and [Checkout Sessions](https://stripe.com/docs/payments/checkout/set-up-a-subscription#tax-rates) to collect tax.

          Related guide: [Tax rates](https://stripe.com/docs/billing/taxes/tax-rates)
      taxability_reason:
        allOf:
        - $ref: '#/definitions/stripe.InvoiceShippingCostTaxTaxabilityReason'
        description: The reasoning behind this tax, for example, if the product is
          tax exempt. The possible values for this field may be extended as new tax
          rules are supported.
      taxable_amount:
        description: The amount on which tax is calculated, in cents (or local equivalent).
        type: integer
    type: object
  stripe.InvoiceShippingCostTaxTaxabilityReason:
    enum:
    - customer_exempt
    - not_collecting
    - not_subject_to_tax
    - not_supported
    - portion_product_exempt
    - portion_reduced_rated
    - portion_standard_rated
    - product_exempt
    - product_exempt_holiday
    - proportionally_rated
    - reduced_rated
    - reverse_charge
    - standard_rated
    - taxable_basis_reduced
    - zero_rated
    type: string
    x-enum-varnames:
    - InvoiceShippingCostTaxTaxabilityReasonCustomerExempt
    - InvoiceShippingCostTaxTaxabilityReasonNotCollecting
    - InvoiceShippingCostTaxTaxabilityReasonNotSubjectToTax
    - InvoiceShippingCostTaxTaxabilityReasonNotSupported
    - InvoiceShippingCostTaxTaxabilityReasonPortionProductExempt
    - InvoiceShippingCostTaxTaxabilityReasonPortionReducedRated
    - InvoiceShippingCostTaxTaxabilityReasonPortionStandardRated
    - InvoiceShippingCostTaxTaxabilityReasonProductExempt
    - InvoiceShippingCostTaxTaxabilityReasonProductExemptHoliday
    - InvoiceShippingCostTaxTaxabilityReasonProportionallyRated
    - InvoiceShippingCostTaxTaxabilityReasonReducedRated
    - InvoiceShippingCostTaxTaxabilityReasonReverseCharge
    - InvoiceShippingCostTaxTaxabilityReasonStandardRated
    - InvoiceShippingCostTaxTaxabilityReasonTaxableBasisReduced
    - InvoiceShippingCostTaxTaxabilityReasonZeroRated
  stripe.InvoiceStatus:
    enum:
    - draft
    - open
    - paid
    - uncollectible
    - void
    type: string
    x-enum-varnames:
    - InvoiceStatusDraft
    - InvoiceStatusOpen
    - InvoiceStatusPaid
    - InvoiceStatusUncollectible
    - InvoiceStatusVoid
  stripe.InvoiceStatusTransitions:
    properties:
      finalized_at:
        description: The time that the invoice draft was finalized.
        type: integer
      marked_uncollectible_at:
        description: The time that the invoice was marked uncollectible.
        type: integer
      paid_at:
        description: The time that the invoice was paid.
        type: integer
      voided_at:
        description: The time that the invoice was voided.
        type: integer
    type: object
  stripe.InvoiceSubscriptionDetails:
    properties:
      metadata:
        additionalProperties:
          type: string
        description: |-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) defined as subscription metadata when an invoice is created. Becomes an immutable snapshot of the subscription metadata at the time of invoice finalization.
           *Note: This attribute is populated only for invoices created on or after June 29, 2023.*
        type: object
    type: object
  stripe.InvoiceThresholdReason:
    properties:
      amount_gte:
        description: The total invoice amount threshold boundary if it triggered the
          threshold invoice.
        type: integer
      item_reasons:
        description: Indicates which line items triggered a threshold invoice.
        items:
          $ref: '#/definitions/stripe.InvoiceThresholdReasonItemReason'
        type: array
    type: object
  stripe.InvoiceThresholdReasonItemReason:
    properties:
      line_item_ids:
        description: The IDs of the line items that triggered the threshold invoice.
        items:
          type: string
        type: array
      usage_gte:
        description: The quantity threshold boundary that applied to the given line
          item.
        type: integer
    type: object
  stripe.InvoiceTotalDiscountAmount:
    properties:
      amount:
        description: The amount, in cents (or local equivalent), of the discount.
        type: integer
      discount:
        allOf:
        - $ref: '#/definitions/stripe.Discount'
        description: The discount that was applied to get this discount amount.
    type: object
  stripe.InvoiceTotalPretaxCreditAmount:
    properties:
      amount:
        description: The amount, in cents (or local equivalent), of the pretax credit
          amount.
        type: integer
      credit_balance_transaction:
        allOf:
        - $ref: '#/definitions/stripe.BillingCreditBalanceTransaction'
        description: The credit balance transaction that was applied to get this pretax
          credit amount.
      discount:
        allOf:
        - $ref: '#/definitions/stripe.Discount'
        description: The discount that was applied to get this pretax credit amount.
      type:
        allOf:
        - $ref: '#/definitions/stripe.InvoiceTotalPretaxCreditAmountType'
        description: Type of the pretax credit amount referenced.
    type: object
  stripe.InvoiceTotalPretaxCreditAmountType:
    enum:
    - credit_balance_transaction
    - discount
    type: string
    x-enum-varnames:
    - InvoiceTotalPretaxCreditAmountTypeCreditBalanceTransaction
    - InvoiceTotalPretaxCreditAmountTypeDiscount
  stripe.InvoiceTotalTaxAmount:
    properties:
      amount:
        description: The amount, in cents (or local equivalent), of the tax.
        type: integer
      inclusive:
        description: Whether this tax amount is inclusive or exclusive.
        type: boolean
      tax_rate:
        allOf:
        - $ref: '#/definitions/stripe.TaxRate'
        description: The tax rate that was applied to get this tax amount.
      taxability_reason:
        allOf:
        - $ref: '#/definitions/stripe.InvoiceTotalTaxAmountTaxabilityReason'
        description: The reasoning behind this tax, for example, if the product is
          tax exempt. The possible values for this field may be extended as new tax
          rules are supported.
      taxable_amount:
        description: The amount on which tax is calculated, in cents (or local equivalent).
        type: integer
    type: object
  stripe.InvoiceTotalTaxAmountTaxabilityReason:
    enum:
    - customer_exempt
    - not_collecting
    - not_subject_to_tax
    - not_supported
    - portion_product_exempt
    - portion_reduced_rated
    - portion_standard_rated
    - product_exempt
    - product_exempt_holiday
    - proportionally_rated
    - reduced_rated
    - reverse_charge
    - standard_rated
    - taxable_basis_reduced
    - zero_rated
    type: string
    x-enum-varnames:
    - InvoiceTotalTaxAmountTaxabilityReasonCustomerExempt
    - InvoiceTotalTaxAmountTaxabilityReasonNotCollecting
    - InvoiceTotalTaxAmountTaxabilityReasonNotSubjectToTax
    - InvoiceTotalTaxAmountTaxabilityReasonNotSupported
    - InvoiceTotalTaxAmountTaxabilityReasonPortionProductExempt
    - InvoiceTotalTaxAmountTaxabilityReasonPortionReducedRated
    - InvoiceTotalTaxAmountTaxabilityReasonPortionStandardRated
    - InvoiceTotalTaxAmountTaxabilityReasonProductExempt
    - InvoiceTotalTaxAmountTaxabilityReasonProductExemptHoliday
    - InvoiceTotalTaxAmountTaxabilityReasonProportionallyRated
    - InvoiceTotalTaxAmountTaxabilityReasonReducedRated
    - InvoiceTotalTaxAmountTaxabilityReasonReverseCharge
    - InvoiceTotalTaxAmountTaxabilityReasonStandardRated
    - InvoiceTotalTaxAmountTaxabilityReasonTaxableBasisReduced
    - InvoiceTotalTaxAmountTaxabilityReasonZeroRated
  stripe.InvoiceTransferData:
    properties:
      amount:
        description: The amount in cents (or local equivalent) that will be transferred
          to the destination account when the invoice is paid. By default, the entire
          amount is transferred to the destination.
        type: integer
      destination:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The account where funds from the payment will be transferred
          to upon payment success.
    type: object
  stripe.LineItem:
    properties:
      amount_discount:
        description: Total discount amount applied. If no discounts were applied,
          defaults to 0.
        type: integer
      amount_subtotal:
        description: Total before any discounts or taxes are applied.
        type: integer
      amount_tax:
        description: Total tax amount applied. If no tax was applied, defaults to
          0.
        type: integer
      amount_total:
        description: Total after discounts and taxes.
        type: integer
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users. Defaults to product name.
        type: string
      discounts:
        description: The discounts applied to the line item.
        items:
          $ref: '#/definitions/stripe.LineItemDiscount'
        type: array
      id:
        description: Unique identifier for the object.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      price:
        allOf:
        - $ref: '#/definitions/stripe.Price'
        description: The price used to generate the line item.
      quantity:
        description: The quantity of products being purchased.
        type: integer
      taxes:
        description: The taxes applied to the line item.
        items:
          $ref: '#/definitions/stripe.LineItemTax'
        type: array
    type: object
  stripe.LineItemDiscount:
    properties:
      amount:
        description: The amount discounted.
        type: integer
      discount:
        allOf:
        - $ref: '#/definitions/stripe.Discount'
        description: |-
          A discount represents the actual application of a [coupon](https://stripe.com/docs/api#coupons) or [promotion code](https://stripe.com/docs/api#promotion_codes).
          It contains information about when the discount began, when it will end, and what it is applied to.

          Related guide: [Applying discounts to subscriptions](https://stripe.com/docs/billing/subscriptions/discounts)
    type: object
  stripe.LineItemList:
    properties:
      data:
        items:
          $ref: '#/definitions/stripe.LineItem'
        type: array
      has_more:
        type: boolean
      total_count:
        description: |-
          TotalCount is the total number of objects in the collection (beyond just
          on the current page). This is not returned in most list calls.

          Deprecated: TotalCount is only included in some legacy situations and
          not generally available anymore.
        type: integer
      url:
        type: string
    type: object
  stripe.LineItemTax:
    properties:
      amount:
        description: Amount of tax applied for this rate.
        type: integer
      rate:
        allOf:
        - $ref: '#/definitions/stripe.TaxRate'
        description: |-
          Tax rates can be applied to [invoices](https://stripe.com/docs/billing/invoices/tax-rates), [subscriptions](https://stripe.com/docs/billing/subscriptions/taxes) and [Checkout Sessions](https://stripe.com/docs/payments/checkout/set-up-a-subscription#tax-rates) to collect tax.

          Related guide: [Tax rates](https://stripe.com/docs/billing/taxes/tax-rates)
      taxability_reason:
        allOf:
        - $ref: '#/definitions/stripe.LineItemTaxTaxabilityReason'
        description: The reasoning behind this tax, for example, if the product is
          tax exempt. The possible values for this field may be extended as new tax
          rules are supported.
      taxable_amount:
        description: The amount on which tax is calculated, in cents (or local equivalent).
        type: integer
    type: object
  stripe.LineItemTaxTaxabilityReason:
    enum:
    - customer_exempt
    - not_collecting
    - not_subject_to_tax
    - not_supported
    - portion_product_exempt
    - portion_reduced_rated
    - portion_standard_rated
    - product_exempt
    - product_exempt_holiday
    - proportionally_rated
    - reduced_rated
    - reverse_charge
    - standard_rated
    - taxable_basis_reduced
    - zero_rated
    type: string
    x-enum-varnames:
    - LineItemTaxTaxabilityReasonCustomerExempt
    - LineItemTaxTaxabilityReasonNotCollecting
    - LineItemTaxTaxabilityReasonNotSubjectToTax
    - LineItemTaxTaxabilityReasonNotSupported
    - LineItemTaxTaxabilityReasonPortionProductExempt
    - LineItemTaxTaxabilityReasonPortionReducedRated
    - LineItemTaxTaxabilityReasonPortionStandardRated
    - LineItemTaxTaxabilityReasonProductExempt
    - LineItemTaxTaxabilityReasonProductExemptHoliday
    - LineItemTaxTaxabilityReasonProportionallyRated
    - LineItemTaxTaxabilityReasonReducedRated
    - LineItemTaxTaxabilityReasonReverseCharge
    - LineItemTaxTaxabilityReasonStandardRated
    - LineItemTaxTaxabilityReasonTaxableBasisReduced
    - LineItemTaxTaxabilityReasonZeroRated
  stripe.Mandate:
    properties:
      customer_acceptance:
        $ref: '#/definitions/stripe.MandateCustomerAcceptance'
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      multi_use:
        $ref: '#/definitions/stripe.MandateMultiUse'
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      on_behalf_of:
        description: The account (if any) that the mandate is intended for.
        type: string
      payment_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethod'
        description: ID of the payment method associated with this mandate.
      payment_method_details:
        $ref: '#/definitions/stripe.MandatePaymentMethodDetails'
      single_use:
        $ref: '#/definitions/stripe.MandateSingleUse'
      status:
        allOf:
        - $ref: '#/definitions/stripe.MandateStatus'
        description: The mandate status indicates whether or not you can use it to
          initiate a payment.
      type:
        allOf:
        - $ref: '#/definitions/stripe.MandateType'
        description: The type of the mandate.
    type: object
  stripe.MandateCustomerAcceptance:
    properties:
      accepted_at:
        description: The time that the customer accepts the mandate.
        type: integer
      offline:
        $ref: '#/definitions/stripe.MandateCustomerAcceptanceOffline'
      online:
        $ref: '#/definitions/stripe.MandateCustomerAcceptanceOnline'
      type:
        allOf:
        - $ref: '#/definitions/stripe.MandateCustomerAcceptanceType'
        description: 'The mandate includes the type of customer acceptance information,
          such as: `online` or `offline`.'
    type: object
  stripe.MandateCustomerAcceptanceOffline:
    type: object
  stripe.MandateCustomerAcceptanceOnline:
    properties:
      ip_address:
        description: The customer accepts the mandate from this IP address.
        type: string
      user_agent:
        description: The customer accepts the mandate using the user agent of the
          browser.
        type: string
    type: object
  stripe.MandateCustomerAcceptanceType:
    enum:
    - offline
    - online
    type: string
    x-enum-varnames:
    - MandateCustomerAcceptanceTypeOffline
    - MandateCustomerAcceptanceTypeOnline
  stripe.MandateMultiUse:
    type: object
  stripe.MandatePaymentMethodDetails:
    properties:
      acss_debit:
        $ref: '#/definitions/stripe.MandatePaymentMethodDetailsACSSDebit'
      amazon_pay:
        $ref: '#/definitions/stripe.MandatePaymentMethodDetailsAmazonPay'
      au_becs_debit:
        $ref: '#/definitions/stripe.MandatePaymentMethodDetailsAUBECSDebit'
      bacs_debit:
        $ref: '#/definitions/stripe.MandatePaymentMethodDetailsBACSDebit'
      card:
        $ref: '#/definitions/stripe.MandatePaymentMethodDetailsCard'
      cashapp:
        $ref: '#/definitions/stripe.MandatePaymentMethodDetailsCashApp'
      kakao_pay:
        $ref: '#/definitions/stripe.MandatePaymentMethodDetailsKakaoPay'
      kr_card:
        $ref: '#/definitions/stripe.MandatePaymentMethodDetailsKrCard'
      link:
        $ref: '#/definitions/stripe.MandatePaymentMethodDetailsLink'
      paypal:
        $ref: '#/definitions/stripe.MandatePaymentMethodDetailsPaypal'
      revolut_pay:
        $ref: '#/definitions/stripe.MandatePaymentMethodDetailsRevolutPay'
      sepa_debit:
        $ref: '#/definitions/stripe.MandatePaymentMethodDetailsSEPADebit'
      type:
        allOf:
        - $ref: '#/definitions/stripe.MandatePaymentMethodDetailsType'
        description: This mandate corresponds with a specific payment method type.
          The `payment_method_details` includes an additional hash with the same name
          and contains mandate information that's specific to that payment method.
      us_bank_account:
        $ref: '#/definitions/stripe.MandatePaymentMethodDetailsUSBankAccount'
    type: object
  stripe.MandatePaymentMethodDetailsACSSDebit:
    properties:
      default_for:
        description: List of Stripe products where this mandate can be selected automatically.
        items:
          $ref: '#/definitions/stripe.MandatePaymentMethodDetailsACSSDebitDefaultFor'
        type: array
      interval_description:
        description: Description of the interval. Only required if the 'payment_schedule'
          parameter is 'interval' or 'combined'.
        type: string
      payment_schedule:
        allOf:
        - $ref: '#/definitions/stripe.MandatePaymentMethodDetailsACSSDebitPaymentSchedule'
        description: Payment schedule for the mandate.
      transaction_type:
        allOf:
        - $ref: '#/definitions/stripe.MandatePaymentMethodDetailsACSSDebitTransactionType'
        description: Transaction type of the mandate.
    type: object
  stripe.MandatePaymentMethodDetailsACSSDebitDefaultFor:
    enum:
    - invoice
    - subscription
    type: string
    x-enum-varnames:
    - MandatePaymentMethodDetailsACSSDebitDefaultForInvoice
    - MandatePaymentMethodDetailsACSSDebitDefaultForSubscription
  stripe.MandatePaymentMethodDetailsACSSDebitPaymentSchedule:
    enum:
    - combined
    - interval
    - sporadic
    type: string
    x-enum-varnames:
    - MandatePaymentMethodDetailsACSSDebitPaymentScheduleCombined
    - MandatePaymentMethodDetailsACSSDebitPaymentScheduleInterval
    - MandatePaymentMethodDetailsACSSDebitPaymentScheduleSporadic
  stripe.MandatePaymentMethodDetailsACSSDebitTransactionType:
    enum:
    - business
    - personal
    type: string
    x-enum-varnames:
    - MandatePaymentMethodDetailsACSSDebitTransactionTypeBusiness
    - MandatePaymentMethodDetailsACSSDebitTransactionTypePersonal
  stripe.MandatePaymentMethodDetailsAUBECSDebit:
    properties:
      url:
        description: The URL of the mandate. This URL generally contains sensitive
          information about the customer and should be shared with them exclusively.
        type: string
    type: object
  stripe.MandatePaymentMethodDetailsAmazonPay:
    type: object
  stripe.MandatePaymentMethodDetailsBACSDebit:
    properties:
      network_status:
        allOf:
        - $ref: '#/definitions/stripe.MandatePaymentMethodDetailsBACSDebitNetworkStatus'
        description: The status of the mandate on the Bacs network. Can be one of
          `pending`, `revoked`, `refused`, or `accepted`.
      reference:
        description: The unique reference identifying the mandate on the Bacs network.
        type: string
      revocation_reason:
        allOf:
        - $ref: '#/definitions/stripe.MandatePaymentMethodDetailsBACSDebitRevocationReason'
        description: When the mandate is revoked on the Bacs network this field displays
          the reason for the revocation.
      url:
        description: The URL that will contain the mandate that the customer has signed.
        type: string
    type: object
  stripe.MandatePaymentMethodDetailsBACSDebitNetworkStatus:
    enum:
    - accepted
    - pending
    - refused
    - revoked
    type: string
    x-enum-varnames:
    - MandatePaymentMethodDetailsBACSDebitNetworkStatusAccepted
    - MandatePaymentMethodDetailsBACSDebitNetworkStatusPending
    - MandatePaymentMethodDetailsBACSDebitNetworkStatusRefused
    - MandatePaymentMethodDetailsBACSDebitNetworkStatusRevoked
  stripe.MandatePaymentMethodDetailsBACSDebitRevocationReason:
    enum:
    - account_closed
    - bank_account_restricted
    - bank_ownership_changed
    - could_not_process
    - debit_not_authorized
    type: string
    x-enum-varnames:
    - MandatePaymentMethodDetailsBACSDebitRevocationReasonAccountClosed
    - MandatePaymentMethodDetailsBACSDebitRevocationReasonBankAccountRestricted
    - MandatePaymentMethodDetailsBACSDebitRevocationReasonBankOwnershipChanged
    - MandatePaymentMethodDetailsBACSDebitRevocationReasonCouldNotProcess
    - MandatePaymentMethodDetailsBACSDebitRevocationReasonDebitNotAuthorized
  stripe.MandatePaymentMethodDetailsCard:
    type: object
  stripe.MandatePaymentMethodDetailsCashApp:
    type: object
  stripe.MandatePaymentMethodDetailsKakaoPay:
    type: object
  stripe.MandatePaymentMethodDetailsKrCard:
    type: object
  stripe.MandatePaymentMethodDetailsLink:
    type: object
  stripe.MandatePaymentMethodDetailsPaypal:
    properties:
      billing_agreement_id:
        description: The PayPal Billing Agreement ID (BAID). This is an ID generated
          by PayPal which represents the mandate between the merchant and the customer.
        type: string
      payer_id:
        description: PayPal account PayerID. This identifier uniquely identifies the
          PayPal customer.
        type: string
    type: object
  stripe.MandatePaymentMethodDetailsRevolutPay:
    type: object
  stripe.MandatePaymentMethodDetailsSEPADebit:
    properties:
      reference:
        description: The unique reference of the mandate.
        type: string
      url:
        description: The URL of the mandate. This URL generally contains sensitive
          information about the customer and should be shared with them exclusively.
        type: string
    type: object
  stripe.MandatePaymentMethodDetailsType:
    enum:
    - acss_debit
    - au_becs_debit
    - bacs_debit
    - blik
    - card
    - link
    - sepa_debit
    - us_bank_account
    type: string
    x-enum-varnames:
    - MandatePaymentMethodDetailsTypeACSSDebit
    - MandatePaymentMethodDetailsTypeAUBECSDebit
    - MandatePaymentMethodDetailsTypeBACSDebit
    - MandatePaymentMethodDetailsTypeBLIK
    - MandatePaymentMethodDetailsTypeCard
    - MandatePaymentMethodDetailsTypeLink
    - MandatePaymentMethodDetailsTypeSEPADebit
    - MandatePaymentMethodDetailsTypeUSBankAccount
  stripe.MandatePaymentMethodDetailsUSBankAccount:
    properties:
      collection_method:
        allOf:
        - $ref: '#/definitions/stripe.MandatePaymentMethodDetailsUSBankAccountCollectionMethod'
        description: Mandate collection method
    type: object
  stripe.MandatePaymentMethodDetailsUSBankAccountCollectionMethod:
    enum:
    - paper
    type: string
    x-enum-varnames:
    - MandatePaymentMethodDetailsUSBankAccountCollectionMethodPaper
  stripe.MandateSingleUse:
    properties:
      amount:
        description: The amount of the payment on a single use mandate.
        type: integer
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: The currency of the payment on a single use mandate.
    type: object
  stripe.MandateStatus:
    enum:
    - active
    - inactive
    - pending
    type: string
    x-enum-varnames:
    - MandateStatusActive
    - MandateStatusInactive
    - MandateStatusPending
  stripe.MandateType:
    enum:
    - multi_use
    - single_use
    type: string
    x-enum-varnames:
    - MandateTypeMultiUse
    - MandateTypeSingleUse
  stripe.PaymentIntent:
    properties:
      amount:
        description: Amount intended to be collected by this PaymentIntent. A positive
          integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal)
          (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency).
          The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts).
          The amount value supports up to eight digits (e.g., a value of 99999999
          for a USD charge of $999,999.99).
        type: integer
      amount_capturable:
        description: Amount that can be captured from this PaymentIntent.
        type: integer
      amount_details:
        $ref: '#/definitions/stripe.PaymentIntentAmountDetails'
      amount_received:
        description: Amount that this PaymentIntent collects.
        type: integer
      application:
        allOf:
        - $ref: '#/definitions/stripe.Application'
        description: ID of the Connect application that created the PaymentIntent.
      application_fee_amount:
        description: The amount of the application fee (if any) that will be requested
          to be applied to the payment and transferred to the application owner's
          Stripe account. The amount of the application fee collected will be capped
          at the total payment amount. For more information, see the PaymentIntents
          [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
        type: integer
      automatic_payment_methods:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentAutomaticPaymentMethods'
        description: Settings to configure compatible payment methods from the [Stripe
          Dashboard](https://dashboard.stripe.com/settings/payment_methods)
      canceled_at:
        description: Populated when `status` is `canceled`, this is the time at which
          the PaymentIntent was canceled. Measured in seconds since the Unix epoch.
        type: integer
      cancellation_reason:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentCancellationReason'
        description: Reason for cancellation of this PaymentIntent, either user-provided
          (`duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`) or
          generated by Stripe internally (`failed_invoice`, `void_invoice`, or `automatic`).
      capture_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentCaptureMethod'
        description: Controls when the funds will be captured from the customer's
          account.
      client_secret:
        description: |-
          The client secret of this PaymentIntent. Used for client-side retrieval using a publishable key.

          The client secret can be used to complete a payment from your frontend. It should not be stored, logged, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.

          Refer to our docs to [accept a payment](https://stripe.com/docs/payments/accept-a-payment?ui=elements) and learn about how `client_secret` should be handled.
        type: string
      confirmation_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentConfirmationMethod'
        description: Describes whether we can confirm this PaymentIntent automatically,
          or if it requires customer action to confirm the payment.
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      customer:
        allOf:
        - $ref: '#/definitions/stripe.Customer'
        description: |-
          ID of the Customer this PaymentIntent belongs to, if one exists.

          Payment methods attached to other Customers cannot be used with this PaymentIntent.

          If [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage) is set and this PaymentIntent's payment method is not `card_present`, then the payment method attaches to the Customer after the PaymentIntent has been confirmed and any required actions from the user are complete. If the payment method is `card_present` and isn't a digital wallet, then a [generated_card](https://docs.stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card is created and attached to the Customer instead.
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      invoice:
        allOf:
        - $ref: '#/definitions/stripe.Invoice'
        description: ID of the invoice that created this PaymentIntent, if it exists.
      last_payment_error:
        allOf:
        - $ref: '#/definitions/stripe.Error'
        description: The payment error encountered in the previous PaymentIntent confirmation.
          It will be cleared if the PaymentIntent is later updated for any reason.
      latest_charge:
        allOf:
        - $ref: '#/definitions/stripe.Charge'
        description: ID of the latest [Charge object](https://stripe.com/docs/api/charges)
          created by this PaymentIntent. This property is `null` until PaymentIntent
          confirmation is attempted.
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format. Learn more about [storing
          information in metadata](https://stripe.com/docs/payments/payment-intents/creating-payment-intents#storing-information-in-metadata).
        type: object
      next_action:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentNextAction'
        description: If present, this property tells you what actions you need to
          take in order for your customer to fulfill a payment using the provided
          source.
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      on_behalf_of:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The account (if any) for which the funds of the PaymentIntent
          are intended. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts)
          for details.
      payment_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethod'
        description: ID of the payment method used in this PaymentIntent.
      payment_method_configuration_details:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodConfigurationDetails'
        description: Information about the payment method configuration used for this
          PaymentIntent.
      payment_method_options:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptions'
        description: Payment-method-specific configuration for this PaymentIntent.
      payment_method_types:
        description: The list of payment method types (e.g. card) that this PaymentIntent
          is allowed to use.
        items:
          type: string
        type: array
      processing:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentProcessing'
        description: If present, this property tells you about the processing state
          of the payment.
      receipt_email:
        description: Email address that the receipt for the resulting payment will
          be sent to. If `receipt_email` is specified for a payment in live mode,
          a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails).
        type: string
      review:
        allOf:
        - $ref: '#/definitions/stripe.Review'
        description: ID of the review associated with this PaymentIntent, if any.
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
      shipping:
        allOf:
        - $ref: '#/definitions/stripe.ShippingDetails'
        description: Shipping information for this PaymentIntent.
      source:
        allOf:
        - $ref: '#/definitions/stripe.PaymentSource'
        description: This is a legacy field that will be removed in the future. It
          is the ID of the Source object that is associated with this PaymentIntent,
          if one was supplied.
      statement_descriptor:
        description: |-
          Text that appears on the customer's statement as the statement descriptor for a non-card charge. This value overrides the account's default statement descriptor. For information about requirements, including the 22-character limit, see [the Statement Descriptor docs](https://docs.stripe.com/get-started/account/statement-descriptors).

          Setting this value for a card charge returns an error. For card charges, set the [statement_descriptor_suffix](https://docs.stripe.com/get-started/account/statement-descriptors#dynamic) instead.
        type: string
      statement_descriptor_suffix:
        description: Provides information about a card charge. Concatenated to the
          account's [statement descriptor prefix](https://docs.stripe.com/get-started/account/statement-descriptors#static)
          to form the complete statement descriptor that appears on the customer's
          statement.
        type: string
      status:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentStatus'
        description: Status of this PaymentIntent, one of `requires_payment_method`,
          `requires_confirmation`, `requires_action`, `processing`, `requires_capture`,
          `canceled`, or `succeeded`. Read more about each PaymentIntent [status](https://stripe.com/docs/payments/intents#intent-statuses).
      transfer_data:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentTransferData'
        description: The data that automatically creates a Transfer after the payment
          finalizes. Learn more about the [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
      transfer_group:
        description: A string that identifies the resulting payment as part of a group.
          Learn more about the [use case for connected accounts](https://stripe.com/docs/connect/separate-charges-and-transfers).
        type: string
    type: object
  stripe.PaymentIntentAmountDetails:
    properties:
      tip:
        $ref: '#/definitions/stripe.PaymentIntentAmountDetailsTip'
    type: object
  stripe.PaymentIntentAmountDetailsTip:
    properties:
      amount:
        description: Portion of the amount that corresponds to a tip.
        type: integer
    type: object
  stripe.PaymentIntentAutomaticPaymentMethods:
    properties:
      allow_redirects:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentAutomaticPaymentMethodsAllowRedirects'
        description: |-
          Controls whether this PaymentIntent will accept redirect-based payment methods.

          Redirect-based payment methods may require your customer to be redirected to a payment method's app or site for authentication or additional steps. To [confirm](https://stripe.com/docs/api/payment_intents/confirm) this PaymentIntent, you may be required to provide a `return_url` to redirect customers back to your site after they authenticate or complete the payment.
      enabled:
        description: Automatically calculates compatible payment methods
        type: boolean
    type: object
  stripe.PaymentIntentAutomaticPaymentMethodsAllowRedirects:
    enum:
    - always
    - never
    type: string
    x-enum-varnames:
    - PaymentIntentAutomaticPaymentMethodsAllowRedirectsAlways
    - PaymentIntentAutomaticPaymentMethodsAllowRedirectsNever
  stripe.PaymentIntentCancellationReason:
    enum:
    - abandoned
    - automatic
    - duplicate
    - failed_invoice
    - fraudulent
    - requested_by_customer
    - void_invoice
    type: string
    x-enum-varnames:
    - PaymentIntentCancellationReasonAbandoned
    - PaymentIntentCancellationReasonAutomatic
    - PaymentIntentCancellationReasonDuplicate
    - PaymentIntentCancellationReasonFailedInvoice
    - PaymentIntentCancellationReasonFraudulent
    - PaymentIntentCancellationReasonRequestedByCustomer
    - PaymentIntentCancellationReasonVoidInvoice
  stripe.PaymentIntentCaptureMethod:
    enum:
    - automatic
    - automatic_async
    - manual
    type: string
    x-enum-varnames:
    - PaymentIntentCaptureMethodAutomatic
    - PaymentIntentCaptureMethodAutomaticAsync
    - PaymentIntentCaptureMethodManual
  stripe.PaymentIntentConfirmationMethod:
    enum:
    - automatic
    - manual
    type: string
    x-enum-varnames:
    - PaymentIntentConfirmationMethodAutomatic
    - PaymentIntentConfirmationMethodManual
  stripe.PaymentIntentNextAction:
    properties:
      alipay_handle_redirect:
        $ref: '#/definitions/stripe.PaymentIntentNextActionAlipayHandleRedirect'
      boleto_display_details:
        $ref: '#/definitions/stripe.PaymentIntentNextActionBoletoDisplayDetails'
      card_await_notification:
        $ref: '#/definitions/stripe.PaymentIntentNextActionCardAwaitNotification'
      cashapp_handle_redirect_or_display_qr_code:
        $ref: '#/definitions/stripe.PaymentIntentNextActionCashAppHandleRedirectOrDisplayQRCode'
      display_bank_transfer_instructions:
        $ref: '#/definitions/stripe.PaymentIntentNextActionDisplayBankTransferInstructions'
      konbini_display_details:
        $ref: '#/definitions/stripe.PaymentIntentNextActionKonbiniDisplayDetails'
      multibanco_display_details:
        $ref: '#/definitions/stripe.PaymentIntentNextActionMultibancoDisplayDetails'
      oxxo_display_details:
        $ref: '#/definitions/stripe.PaymentIntentNextActionOXXODisplayDetails'
      paynow_display_qr_code:
        $ref: '#/definitions/stripe.PaymentIntentNextActionPayNowDisplayQRCode'
      pix_display_qr_code:
        $ref: '#/definitions/stripe.PaymentIntentNextActionPixDisplayQRCode'
      promptpay_display_qr_code:
        $ref: '#/definitions/stripe.PaymentIntentNextActionPromptPayDisplayQRCode'
      redirect_to_url:
        $ref: '#/definitions/stripe.PaymentIntentNextActionRedirectToURL'
      swish_handle_redirect_or_display_qr_code:
        $ref: '#/definitions/stripe.PaymentIntentNextActionSwishHandleRedirectOrDisplayQRCode'
      type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentNextActionType'
        description: Type of the next action to perform, one of `redirect_to_url`,
          `use_stripe_sdk`, `alipay_handle_redirect`, `oxxo_display_details`, or `verify_with_microdeposits`.
      use_stripe_sdk:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentNextActionUseStripeSDK'
        description: When confirming a PaymentIntent with Stripe.js, Stripe.js depends
          on the contents of this dictionary to invoke authentication flows. The shape
          of the contents is subject to change and is only intended to be used by
          Stripe.js.
      verify_with_microdeposits:
        $ref: '#/definitions/stripe.PaymentIntentNextActionVerifyWithMicrodeposits'
      wechat_pay_display_qr_code:
        $ref: '#/definitions/stripe.PaymentIntentNextActionWeChatPayDisplayQRCode'
      wechat_pay_redirect_to_android_app:
        $ref: '#/definitions/stripe.PaymentIntentNextActionWeChatPayRedirectToAndroidApp'
      wechat_pay_redirect_to_ios_app:
        $ref: '#/definitions/stripe.PaymentIntentNextActionWeChatPayRedirectToIOSApp'
    type: object
  stripe.PaymentIntentNextActionAlipayHandleRedirect:
    properties:
      native_data:
        description: The native data to be used with Alipay SDK you must redirect
          your customer to in order to authenticate the payment in an Android App.
        type: string
      native_url:
        description: The native URL you must redirect your customer to in order to
          authenticate the payment in an iOS App.
        type: string
      return_url:
        description: If the customer does not exit their browser while authenticating,
          they will be redirected to this specified URL after completion.
        type: string
      url:
        description: The URL you must redirect your customer to in order to authenticate
          the payment.
        type: string
    type: object
  stripe.PaymentIntentNextActionBoletoDisplayDetails:
    properties:
      expires_at:
        description: The timestamp after which the boleto expires.
        type: integer
      hosted_voucher_url:
        description: The URL to the hosted boleto voucher page, which allows customers
          to view the boleto voucher.
        type: string
      number:
        description: The boleto number.
        type: string
      pdf:
        description: The URL to the downloadable boleto voucher PDF.
        type: string
    type: object
  stripe.PaymentIntentNextActionCardAwaitNotification:
    properties:
      charge_attempt_at:
        description: The time that payment will be attempted. If customer approval
          is required, they need to provide approval before this time.
        type: integer
      customer_approval_required:
        description: For payments greater than INR 15000, the customer must provide
          explicit approval of the payment with their bank. For payments of lower
          amount, no customer action is required.
        type: boolean
    type: object
  stripe.PaymentIntentNextActionCashAppHandleRedirectOrDisplayQRCode:
    properties:
      hosted_instructions_url:
        description: The URL to the hosted Cash App Pay instructions page, which allows
          customers to view the QR code, and supports QR code refreshing on expiration.
        type: string
      mobile_auth_url:
        description: The url for mobile redirect based auth
        type: string
      qr_code:
        $ref: '#/definitions/stripe.PaymentIntentNextActionCashAppHandleRedirectOrDisplayQRCodeQRCode'
    type: object
  stripe.PaymentIntentNextActionCashAppHandleRedirectOrDisplayQRCodeQRCode:
    properties:
      expires_at:
        description: The date (unix timestamp) when the QR code expires.
        type: integer
      image_url_png:
        description: The image_url_png string used to render QR code
        type: string
      image_url_svg:
        description: The image_url_svg string used to render QR code
        type: string
    type: object
  stripe.PaymentIntentNextActionDisplayBankTransferInstructions:
    properties:
      amount_remaining:
        description: The remaining amount that needs to be transferred to complete
          the payment.
        type: integer
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      financial_addresses:
        description: A list of financial addresses that can be used to fund the customer
          balance
        items:
          $ref: '#/definitions/stripe.PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddress'
        type: array
      hosted_instructions_url:
        description: A link to a hosted page that guides your customer through completing
          the transfer.
        type: string
      reference:
        description: A string identifying this payment. Instruct your customer to
          include this code in the reference or memo field of their bank transfer.
        type: string
      type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentNextActionDisplayBankTransferInstructionsType'
        description: Type of bank transfer
    type: object
  stripe.PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddress:
    properties:
      aba:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressABA'
        description: ABA Records contain U.S. bank account details per the ABA format.
      iban:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressIBAN'
        description: Iban Records contain E.U. bank account details per the SEPA format.
      sort_code:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressSortCode'
        description: Sort Code Records contain U.K. bank account details per the sort
          code format.
      spei:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressSpei'
        description: SPEI Records contain Mexico bank account details per the SPEI
          format.
      supported_networks:
        description: The payment networks supported by this FinancialAddress
        items:
          $ref: '#/definitions/stripe.PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressSupportedNetwork'
        type: array
      swift:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressSwift'
        description: SWIFT Records contain U.S. bank account details per the SWIFT
          format.
      type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressType'
        description: The type of financial address
      zengin:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressZengin'
        description: Zengin Records contain Japan bank account details per the Zengin
          format.
    type: object
  stripe.PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressABA:
    properties:
      account_number:
        description: The ABA account number
        type: string
      bank_name:
        description: The bank name
        type: string
      routing_number:
        description: The ABA routing number
        type: string
    type: object
  stripe.PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressIBAN:
    properties:
      account_holder_name:
        description: The name of the person or business that owns the bank account
        type: string
      bic:
        description: The BIC/SWIFT code of the account.
        type: string
      country:
        description: Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
        type: string
      iban:
        description: The IBAN of the account.
        type: string
    type: object
  stripe.PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressSortCode:
    properties:
      account_holder_name:
        description: The name of the person or business that owns the bank account
        type: string
      account_number:
        description: The account number
        type: string
      sort_code:
        description: The six-digit sort code
        type: string
    type: object
  stripe.PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressSpei:
    properties:
      bank_code:
        description: The three-digit bank code
        type: string
      bank_name:
        description: The short banking institution name
        type: string
      clabe:
        description: The CLABE number
        type: string
    type: object
  stripe.PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressSupportedNetwork:
    enum:
    - ach
    - bacs
    - domestic_wire_us
    - fps
    - sepa
    - spei
    - swift
    - zengin
    type: string
    x-enum-varnames:
    - PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressSupportedNetworkACH
    - PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressSupportedNetworkBACS
    - PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressSupportedNetworkDomesticWireUS
    - PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressSupportedNetworkFPS
    - PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressSupportedNetworkSEPA
    - PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressSupportedNetworkSpei
    - PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressSupportedNetworkSwift
    - PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressSupportedNetworkZengin
  stripe.PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressSwift:
    properties:
      account_number:
        description: The account number
        type: string
      bank_name:
        description: The bank name
        type: string
      swift_code:
        description: The SWIFT code
        type: string
    type: object
  stripe.PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressType:
    enum:
    - aba
    - iban
    - sort_code
    - spei
    - swift
    - zengin
    type: string
    x-enum-varnames:
    - PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressTypeABA
    - PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressTypeIBAN
    - PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressTypeSortCode
    - PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressTypeSpei
    - PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressTypeSwift
    - PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressTypeZengin
  stripe.PaymentIntentNextActionDisplayBankTransferInstructionsFinancialAddressZengin:
    properties:
      account_holder_name:
        description: The account holder name
        type: string
      account_number:
        description: The account number
        type: string
      account_type:
        description: The bank account type. In Japan, this can only be `futsu` or
          `toza`.
        type: string
      bank_code:
        description: The bank code of the account
        type: string
      bank_name:
        description: The bank name of the account
        type: string
      branch_code:
        description: The branch code of the account
        type: string
      branch_name:
        description: The branch name of the account
        type: string
    type: object
  stripe.PaymentIntentNextActionDisplayBankTransferInstructionsType:
    enum:
    - eu_bank_transfer
    - gb_bank_transfer
    - jp_bank_transfer
    - mx_bank_transfer
    - us_bank_transfer
    type: string
    x-enum-varnames:
    - PaymentIntentNextActionDisplayBankTransferInstructionsTypeEUBankTransfer
    - PaymentIntentNextActionDisplayBankTransferInstructionsTypeGBBankTransfer
    - PaymentIntentNextActionDisplayBankTransferInstructionsTypeJPBankTransfer
    - PaymentIntentNextActionDisplayBankTransferInstructionsTypeMXBankTransfer
    - PaymentIntentNextActionDisplayBankTransferInstructionsTypeUSBankTransfer
  stripe.PaymentIntentNextActionKonbiniDisplayDetails:
    properties:
      expires_at:
        description: The timestamp at which the pending Konbini payment expires.
        type: integer
      hosted_voucher_url:
        description: The URL for the Konbini payment instructions page, which allows
          customers to view and print a Konbini voucher.
        type: string
      stores:
        $ref: '#/definitions/stripe.PaymentIntentNextActionKonbiniDisplayDetailsStores'
    type: object
  stripe.PaymentIntentNextActionKonbiniDisplayDetailsStores:
    properties:
      familymart:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentNextActionKonbiniDisplayDetailsStoresFamilyMart'
        description: FamilyMart instruction details.
      lawson:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentNextActionKonbiniDisplayDetailsStoresLawson'
        description: Lawson instruction details.
      ministop:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentNextActionKonbiniDisplayDetailsStoresMinistop'
        description: Ministop instruction details.
      seicomart:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentNextActionKonbiniDisplayDetailsStoresSeicomart'
        description: Seicomart instruction details.
    type: object
  stripe.PaymentIntentNextActionKonbiniDisplayDetailsStoresFamilyMart:
    properties:
      confirmation_number:
        description: The confirmation number.
        type: string
      payment_code:
        description: The payment code.
        type: string
    type: object
  stripe.PaymentIntentNextActionKonbiniDisplayDetailsStoresLawson:
    properties:
      confirmation_number:
        description: The confirmation number.
        type: string
      payment_code:
        description: The payment code.
        type: string
    type: object
  stripe.PaymentIntentNextActionKonbiniDisplayDetailsStoresMinistop:
    properties:
      confirmation_number:
        description: The confirmation number.
        type: string
      payment_code:
        description: The payment code.
        type: string
    type: object
  stripe.PaymentIntentNextActionKonbiniDisplayDetailsStoresSeicomart:
    properties:
      confirmation_number:
        description: The confirmation number.
        type: string
      payment_code:
        description: The payment code.
        type: string
    type: object
  stripe.PaymentIntentNextActionMultibancoDisplayDetails:
    properties:
      entity:
        description: Entity number associated with this Multibanco payment.
        type: string
      expires_at:
        description: The timestamp at which the Multibanco voucher expires.
        type: integer
      hosted_voucher_url:
        description: The URL for the hosted Multibanco voucher page, which allows
          customers to view a Multibanco voucher.
        type: string
      reference:
        description: Reference number associated with this Multibanco payment.
        type: string
    type: object
  stripe.PaymentIntentNextActionOXXODisplayDetails:
    properties:
      expires_after:
        description: The timestamp after which the OXXO voucher expires.
        type: integer
      hosted_voucher_url:
        description: The URL for the hosted OXXO voucher page, which allows customers
          to view and print an OXXO voucher.
        type: string
      number:
        description: OXXO reference number.
        type: string
    type: object
  stripe.PaymentIntentNextActionPayNowDisplayQRCode:
    properties:
      data:
        description: The raw data string used to generate QR code, it should be used
          together with QR code library.
        type: string
      hosted_instructions_url:
        description: The URL to the hosted PayNow instructions page, which allows
          customers to view the PayNow QR code.
        type: string
      image_url_png:
        description: The image_url_png string used to render QR code
        type: string
      image_url_svg:
        description: The image_url_svg string used to render QR code
        type: string
    type: object
  stripe.PaymentIntentNextActionPixDisplayQRCode:
    properties:
      data:
        description: The raw data string used to generate QR code, it should be used
          together with QR code library.
        type: string
      expires_at:
        description: The date (unix timestamp) when the PIX expires.
        type: integer
      hosted_instructions_url:
        description: The URL to the hosted pix instructions page, which allows customers
          to view the pix QR code.
        type: string
      image_url_png:
        description: The image_url_png string used to render png QR code
        type: string
      image_url_svg:
        description: The image_url_svg string used to render svg QR code
        type: string
    type: object
  stripe.PaymentIntentNextActionPromptPayDisplayQRCode:
    properties:
      data:
        description: The raw data string used to generate QR code, it should be used
          together with QR code library.
        type: string
      hosted_instructions_url:
        description: The URL to the hosted PromptPay instructions page, which allows
          customers to view the PromptPay QR code.
        type: string
      image_url_png:
        description: The PNG path used to render the QR code, can be used as the source
          in an HTML img tag
        type: string
      image_url_svg:
        description: The SVG path used to render the QR code, can be used as the source
          in an HTML img tag
        type: string
    type: object
  stripe.PaymentIntentNextActionRedirectToURL:
    properties:
      return_url:
        description: If the customer does not exit their browser while authenticating,
          they will be redirected to this specified URL after completion.
        type: string
      url:
        description: The URL you must redirect your customer to in order to authenticate
          the payment.
        type: string
    type: object
  stripe.PaymentIntentNextActionSwishHandleRedirectOrDisplayQRCode:
    properties:
      hosted_instructions_url:
        description: The URL to the hosted Swish instructions page, which allows customers
          to view the QR code.
        type: string
      mobile_auth_url:
        description: The url for mobile redirect based auth (for internal use only
          and not typically available in standard API requests).
        type: string
      qr_code:
        $ref: '#/definitions/stripe.PaymentIntentNextActionSwishHandleRedirectOrDisplayQRCodeQRCode'
    type: object
  stripe.PaymentIntentNextActionSwishHandleRedirectOrDisplayQRCodeQRCode:
    properties:
      data:
        description: The raw data string used to generate QR code, it should be used
          together with QR code library.
        type: string
      image_url_png:
        description: The image_url_png string used to render QR code
        type: string
      image_url_svg:
        description: The image_url_svg string used to render QR code
        type: string
    type: object
  stripe.PaymentIntentNextActionType:
    enum:
    - alipay_handle_redirect
    - oxxo_display_details
    - redirect_to_url
    - use_stripe_sdk
    - verify_with_microdeposits
    type: string
    x-enum-varnames:
    - PaymentIntentNextActionTypeAlipayHandleRedirect
    - PaymentIntentNextActionTypeOXXODisplayDetails
    - PaymentIntentNextActionTypeRedirectToURL
    - PaymentIntentNextActionTypeUseStripeSDK
    - PaymentIntentNextActionTypeVerifyWithMicrodeposits
  stripe.PaymentIntentNextActionUseStripeSDK:
    type: object
  stripe.PaymentIntentNextActionVerifyWithMicrodeposits:
    properties:
      arrival_date:
        description: The timestamp when the microdeposits are expected to land.
        type: integer
      hosted_verification_url:
        description: The URL for the hosted verification page, which allows customers
          to verify their bank account.
        type: string
      microdeposit_type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentNextActionVerifyWithMicrodepositsMicrodepositType'
        description: The type of the microdeposit sent to the customer. Used to distinguish
          between different verification methods.
    type: object
  stripe.PaymentIntentNextActionVerifyWithMicrodepositsMicrodepositType:
    enum:
    - amounts
    - descriptor_code
    type: string
    x-enum-varnames:
    - PaymentIntentNextActionVerifyWithMicrodepositsMicrodepositTypeAmounts
    - PaymentIntentNextActionVerifyWithMicrodepositsMicrodepositTypeDescriptorCode
  stripe.PaymentIntentNextActionWeChatPayDisplayQRCode:
    properties:
      data:
        description: The data being used to generate QR code
        type: string
      hosted_instructions_url:
        description: The URL to the hosted WeChat Pay instructions page, which allows
          customers to view the WeChat Pay QR code.
        type: string
      image_data_url:
        description: The base64 image data for a pre-generated QR code
        type: string
      image_url_png:
        description: The image_url_png string used to render QR code
        type: string
      image_url_svg:
        description: The image_url_svg string used to render QR code
        type: string
    type: object
  stripe.PaymentIntentNextActionWeChatPayRedirectToAndroidApp:
    properties:
      app_id:
        description: app_id is the APP ID registered on WeChat open platform
        type: string
      nonce_str:
        description: nonce_str is a random string
        type: string
      package:
        description: package is static value
        type: string
      partner_id:
        description: an unique merchant ID assigned by WeChat Pay
        type: string
      prepay_id:
        description: an unique trading ID assigned by WeChat Pay
        type: string
      sign:
        description: A signature
        type: string
      timestamp:
        description: Specifies the current time in epoch format
        type: string
    type: object
  stripe.PaymentIntentNextActionWeChatPayRedirectToIOSApp:
    properties:
      native_url:
        description: An universal link that redirect to WeChat Pay app
        type: string
    type: object
  stripe.PaymentIntentPaymentMethodConfigurationDetails:
    properties:
      id:
        description: ID of the payment method configuration used.
        type: string
      parent:
        description: ID of the parent payment method configuration used.
        type: string
    type: object
  stripe.PaymentIntentPaymentMethodOptions:
    properties:
      acss_debit:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsACSSDebit'
      affirm:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsAffirm'
      afterpay_clearpay:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsAfterpayClearpay'
      alipay:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsAlipay'
      alma:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsAlma'
      amazon_pay:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsAmazonPay'
      au_becs_debit:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsAUBECSDebit'
      bacs_debit:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsBACSDebit'
      bancontact:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsBancontact'
      blik:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsBLIK'
      boleto:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsBoleto'
      card:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCard'
      card_present:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardPresent'
      cashapp:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCashApp'
      customer_balance:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCustomerBalance'
      eps:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsEPS'
      fpx:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsFPX'
      giropay:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsGiropay'
      grabpay:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsGrabpay'
      ideal:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsIDEAL'
      interac_present:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsInteracPresent'
      kakao_pay:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsKakaoPay'
      klarna:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsKlarna'
      konbini:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsKonbini'
      kr_card:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsKrCard'
      link:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsLink'
      mobilepay:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsMobilepay'
      multibanco:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsMultibanco'
      naver_pay:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsNaverPay'
      oxxo:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsOXXO'
      p24:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsP24'
      payco:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsPayco'
      paynow:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsPayNow'
      paypal:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsPaypal'
      pix:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsPix'
      promptpay:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsPromptPay'
      revolut_pay:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsRevolutPay'
      samsung_pay:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsSamsungPay'
      sepa_debit:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsSEPADebit'
      sofort:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsSofort'
      swish:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsSwish'
      twint:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsTWINT'
      us_bank_account:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsUSBankAccount'
      wechat_pay:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsWeChatPay'
      zip:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsZip'
    type: object
  stripe.PaymentIntentPaymentMethodOptionsACSSDebit:
    properties:
      mandate_options:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsACSSDebitMandateOptions'
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsACSSDebitSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
      verification_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsACSSDebitVerificationMethod'
        description: Bank account verification method.
    type: object
  stripe.PaymentIntentPaymentMethodOptionsACSSDebitMandateOptions:
    properties:
      custom_mandate_url:
        description: A URL for custom mandate text
        type: string
      interval_description:
        description: Description of the interval. Only required if the 'payment_schedule'
          parameter is 'interval' or 'combined'.
        type: string
      payment_schedule:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsACSSDebitMandateOptionsPaymentSchedule'
        description: Payment schedule for the mandate.
      transaction_type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsACSSDebitMandateOptionsTransactionType'
        description: Transaction type of the mandate.
    type: object
  stripe.PaymentIntentPaymentMethodOptionsACSSDebitMandateOptionsPaymentSchedule:
    enum:
    - combined
    - interval
    - sporadic
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsACSSDebitMandateOptionsPaymentScheduleCombined
    - PaymentIntentPaymentMethodOptionsACSSDebitMandateOptionsPaymentScheduleInterval
    - PaymentIntentPaymentMethodOptionsACSSDebitMandateOptionsPaymentScheduleSporadic
  stripe.PaymentIntentPaymentMethodOptionsACSSDebitMandateOptionsTransactionType:
    enum:
    - business
    - personal
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsACSSDebitMandateOptionsTransactionTypeBusiness
    - PaymentIntentPaymentMethodOptionsACSSDebitMandateOptionsTransactionTypePersonal
  stripe.PaymentIntentPaymentMethodOptionsACSSDebitSetupFutureUsage:
    enum:
    - none
    - off_session
    - on_session
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsACSSDebitSetupFutureUsageNone
    - PaymentIntentPaymentMethodOptionsACSSDebitSetupFutureUsageOffSession
    - PaymentIntentPaymentMethodOptionsACSSDebitSetupFutureUsageOnSession
  stripe.PaymentIntentPaymentMethodOptionsACSSDebitVerificationMethod:
    enum:
    - automatic
    - instant
    - microdeposits
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsACSSDebitVerificationMethodAutomatic
    - PaymentIntentPaymentMethodOptionsACSSDebitVerificationMethodInstant
    - PaymentIntentPaymentMethodOptionsACSSDebitVerificationMethodMicrodeposits
  stripe.PaymentIntentPaymentMethodOptionsAUBECSDebit:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsAUBECSDebitSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsAUBECSDebitSetupFutureUsage:
    enum:
    - none
    - off_session
    - on_session
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsAUBECSDebitSetupFutureUsageNone
    - PaymentIntentPaymentMethodOptionsAUBECSDebitSetupFutureUsageOffSession
    - PaymentIntentPaymentMethodOptionsAUBECSDebitSetupFutureUsageOnSession
  stripe.PaymentIntentPaymentMethodOptionsAffirm:
    properties:
      capture_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsAffirmCaptureMethod'
        description: Controls when the funds will be captured from the customer's
          account.
      preferred_locale:
        description: Preferred language of the Affirm authorization page that the
          customer is redirected to.
        type: string
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsAffirmSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsAffirmCaptureMethod:
    enum:
    - manual
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsAffirmCaptureMethodManual
  stripe.PaymentIntentPaymentMethodOptionsAffirmSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsAffirmSetupFutureUsageNone
  stripe.PaymentIntentPaymentMethodOptionsAfterpayClearpay:
    properties:
      capture_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsAfterpayClearpayCaptureMethod'
        description: Controls when the funds will be captured from the customer's
          account.
      reference:
        description: |-
          An internal identifier or reference that this payment corresponds to. You must limit the identifier to 128 characters, and it can only contain letters, numbers, underscores, backslashes, and dashes.
          This field differs from the statement descriptor and item name.
        type: string
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsAfterpayClearpaySetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsAfterpayClearpayCaptureMethod:
    enum:
    - manual
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsAfterpayClearpayCaptureMethodManual
  stripe.PaymentIntentPaymentMethodOptionsAfterpayClearpaySetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsAfterpayClearpaySetupFutureUsageNone
  stripe.PaymentIntentPaymentMethodOptionsAlipay:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsAlipaySetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsAlipaySetupFutureUsage:
    enum:
    - none
    - off_session
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsAlipaySetupFutureUsageNone
    - PaymentIntentPaymentMethodOptionsAlipaySetupFutureUsageOffSession
  stripe.PaymentIntentPaymentMethodOptionsAlma:
    properties:
      capture_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsAlmaCaptureMethod'
        description: Controls when the funds will be captured from the customer's
          account.
    type: object
  stripe.PaymentIntentPaymentMethodOptionsAlmaCaptureMethod:
    enum:
    - manual
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsAlmaCaptureMethodManual
  stripe.PaymentIntentPaymentMethodOptionsAmazonPay:
    properties:
      capture_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsAmazonPayCaptureMethod'
        description: Controls when the funds will be captured from the customer's
          account.
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsAmazonPaySetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsAmazonPayCaptureMethod:
    enum:
    - manual
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsAmazonPayCaptureMethodManual
  stripe.PaymentIntentPaymentMethodOptionsAmazonPaySetupFutureUsage:
    enum:
    - none
    - off_session
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsAmazonPaySetupFutureUsageNone
    - PaymentIntentPaymentMethodOptionsAmazonPaySetupFutureUsageOffSession
  stripe.PaymentIntentPaymentMethodOptionsBACSDebit:
    properties:
      mandate_options:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsBACSDebitMandateOptions'
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsBACSDebitSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsBACSDebitMandateOptions:
    type: object
  stripe.PaymentIntentPaymentMethodOptionsBACSDebitSetupFutureUsage:
    enum:
    - none
    - off_session
    - on_session
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsBACSDebitSetupFutureUsageNone
    - PaymentIntentPaymentMethodOptionsBACSDebitSetupFutureUsageOffSession
    - PaymentIntentPaymentMethodOptionsBACSDebitSetupFutureUsageOnSession
  stripe.PaymentIntentPaymentMethodOptionsBLIK:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsBLIKSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsBLIKSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsBLIKSetupFutureUsageNone
  stripe.PaymentIntentPaymentMethodOptionsBancontact:
    properties:
      preferred_language:
        description: Preferred language of the Bancontact authorization page that
          the customer is redirected to.
        type: string
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsBancontactSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsBancontactSetupFutureUsage:
    enum:
    - none
    - off_session
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsBancontactSetupFutureUsageNone
    - PaymentIntentPaymentMethodOptionsBancontactSetupFutureUsageOffSession
  stripe.PaymentIntentPaymentMethodOptionsBoleto:
    properties:
      expires_after_days:
        description: The number of calendar days before a Boleto voucher expires.
          For example, if you create a Boleto voucher on Monday and you set expires_after_days
          to 2, the Boleto voucher will expire on Wednesday at 23:59 America/Sao_Paulo
          time.
        type: integer
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsBoletoSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsBoletoSetupFutureUsage:
    enum:
    - none
    - off_session
    - on_session
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsBoletoSetupFutureUsageNone
    - PaymentIntentPaymentMethodOptionsBoletoSetupFutureUsageOffSession
    - PaymentIntentPaymentMethodOptionsBoletoSetupFutureUsageOnSession
  stripe.PaymentIntentPaymentMethodOptionsCard:
    properties:
      capture_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardCaptureMethod'
        description: Controls when the funds will be captured from the customer's
          account.
      installments:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardInstallments'
        description: |-
          Installment details for this payment (Mexico only).

          For more information, see the [installments integration guide](https://stripe.com/docs/payments/installments).
      mandate_options:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardMandateOptions'
        description: Configuration options for setting up an eMandate for cards issued
          in India.
      network:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardNetwork'
        description: Selected network to process this payment intent on. Depends on
          the available networks of the card attached to the payment intent. Can be
          only set confirm-time.
      request_extended_authorization:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardRequestExtendedAuthorization'
        description: Request ability to [capture beyond the standard authorization
          validity window](https://stripe.com/docs/payments/extended-authorization)
          for this PaymentIntent.
      request_incremental_authorization:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardRequestIncrementalAuthorization'
        description: Request ability to [increment the authorization](https://stripe.com/docs/payments/incremental-authorization)
          for this PaymentIntent.
      request_multicapture:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardRequestMulticapture'
        description: Request ability to make [multiple captures](https://stripe.com/docs/payments/multicapture)
          for this PaymentIntent.
      request_overcapture:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardRequestOvercapture'
        description: Request ability to [overcapture](https://stripe.com/docs/payments/overcapture)
          for this PaymentIntent.
      request_three_d_secure:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardRequestThreeDSecure'
        description: We strongly recommend that you rely on our SCA Engine to automatically
          prompt your customers for authentication based on risk level and [other
          requirements](https://stripe.com/docs/strong-customer-authentication). However,
          if you wish to request 3D Secure based on logic from your own fraud engine,
          provide this option. If not provided, this value defaults to `automatic`.
          Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds)
          for more information on how this configuration interacts with Radar and
          our SCA Engine.
      require_cvc_recollection:
        description: When enabled, using a card that is attached to a customer will
          require the CVC to be provided again (i.e. using the cvc_token parameter).
        type: boolean
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
      statement_descriptor_suffix_kana:
        description: Provides information about a card payment that customers see
          on their statements. Concatenated with the Kana prefix (shortened Kana descriptor)
          or Kana statement descriptor that's set on the account to form the complete
          statement descriptor. Maximum 22 characters. On card statements, the *concatenation*
          of both prefix and suffix (including separators) will appear truncated to
          22 characters.
        type: string
      statement_descriptor_suffix_kanji:
        description: Provides information about a card payment that customers see
          on their statements. Concatenated with the Kanji prefix (shortened Kanji
          descriptor) or Kanji statement descriptor that's set on the account to form
          the complete statement descriptor. Maximum 17 characters. On card statements,
          the *concatenation* of both prefix and suffix (including separators) will
          appear truncated to 17 characters.
        type: string
    type: object
  stripe.PaymentIntentPaymentMethodOptionsCardCaptureMethod:
    enum:
    - manual
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsCardCaptureMethodManual
  stripe.PaymentIntentPaymentMethodOptionsCardInstallments:
    properties:
      available_plans:
        description: Installment plans that may be selected for this PaymentIntent.
        items:
          $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardInstallmentsPlan'
        type: array
      enabled:
        description: Whether Installments are enabled for this PaymentIntent.
        type: boolean
      plan:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardInstallmentsPlan'
        description: Installment plan selected for this PaymentIntent.
    type: object
  stripe.PaymentIntentPaymentMethodOptionsCardInstallmentsPlan:
    properties:
      count:
        description: For `fixed_count` installment plans, this is the number of installment
          payments your customer will make to their credit card.
        type: integer
      interval:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardInstallmentsPlanInterval'
        description: |-
          For `fixed_count` installment plans, this is the interval between installment payments your customer will make to their credit card.
          One of `month`.
      type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardInstallmentsPlanType'
        description: Type of installment plan, one of `fixed_count`.
    type: object
  stripe.PaymentIntentPaymentMethodOptionsCardInstallmentsPlanInterval:
    enum:
    - month
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsCardInstallmentsPlanIntervalMonth
  stripe.PaymentIntentPaymentMethodOptionsCardInstallmentsPlanType:
    enum:
    - fixed_count
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsCardInstallmentsPlanTypeFixedCount
  stripe.PaymentIntentPaymentMethodOptionsCardMandateOptions:
    properties:
      amount:
        description: Amount to be charged for future payments.
        type: integer
      amount_type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardMandateOptionsAmountType'
        description: One of `fixed` or `maximum`. If `fixed`, the `amount` param refers
          to the exact amount to be charged in future payments. If `maximum`, the
          amount charged can be up to the value passed for the `amount` param.
      description:
        description: A description of the mandate or subscription that is meant to
          be displayed to the customer.
        type: string
      end_date:
        description: End date of the mandate or subscription. If not provided, the
          mandate will be active until canceled. If provided, end date should be after
          start date.
        type: integer
      interval:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardMandateOptionsInterval'
        description: Specifies payment frequency. One of `day`, `week`, `month`, `year`,
          or `sporadic`.
      interval_count:
        description: The number of intervals between payments. For example, `interval=month`
          and `interval_count=3` indicates one payment every three months. Maximum
          of one year interval allowed (1 year, 12 months, or 52 weeks). This parameter
          is optional when `interval=sporadic`.
        type: integer
      reference:
        description: Unique identifier for the mandate or subscription.
        type: string
      start_date:
        description: Start date of the mandate or subscription. Start date should
          not be lesser than yesterday.
        type: integer
      supported_types:
        description: Specifies the type of mandates supported. Possible values are
          `india`.
        items:
          $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardMandateOptionsSupportedType'
        type: array
    type: object
  stripe.PaymentIntentPaymentMethodOptionsCardMandateOptionsAmountType:
    enum:
    - fixed
    - maximum
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsCardMandateOptionsAmountTypeFixed
    - PaymentIntentPaymentMethodOptionsCardMandateOptionsAmountTypeMaximum
  stripe.PaymentIntentPaymentMethodOptionsCardMandateOptionsInterval:
    enum:
    - day
    - month
    - sporadic
    - week
    - year
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsCardMandateOptionsIntervalDay
    - PaymentIntentPaymentMethodOptionsCardMandateOptionsIntervalMonth
    - PaymentIntentPaymentMethodOptionsCardMandateOptionsIntervalSporadic
    - PaymentIntentPaymentMethodOptionsCardMandateOptionsIntervalWeek
    - PaymentIntentPaymentMethodOptionsCardMandateOptionsIntervalYear
  stripe.PaymentIntentPaymentMethodOptionsCardMandateOptionsSupportedType:
    enum:
    - india
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsCardMandateOptionsSupportedTypeIndia
  stripe.PaymentIntentPaymentMethodOptionsCardNetwork:
    enum:
    - amex
    - cartes_bancaires
    - diners
    - discover
    - eftpos_au
    - girocard
    - interac
    - jcb
    - mastercard
    - unionpay
    - unknown
    - visa
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsCardNetworkAmex
    - PaymentIntentPaymentMethodOptionsCardNetworkCartesBancaires
    - PaymentIntentPaymentMethodOptionsCardNetworkDiners
    - PaymentIntentPaymentMethodOptionsCardNetworkDiscover
    - PaymentIntentPaymentMethodOptionsCardNetworkEFTPOSAU
    - PaymentIntentPaymentMethodOptionsCardNetworkGirocard
    - PaymentIntentPaymentMethodOptionsCardNetworkInterac
    - PaymentIntentPaymentMethodOptionsCardNetworkJCB
    - PaymentIntentPaymentMethodOptionsCardNetworkMastercard
    - PaymentIntentPaymentMethodOptionsCardNetworkUnionpay
    - PaymentIntentPaymentMethodOptionsCardNetworkUnknown
    - PaymentIntentPaymentMethodOptionsCardNetworkVisa
  stripe.PaymentIntentPaymentMethodOptionsCardPresent:
    properties:
      request_extended_authorization:
        description: Request ability to capture this payment beyond the standard [authorization
          validity window](https://stripe.com/docs/terminal/features/extended-authorizations#authorization-validity)
        type: boolean
      request_incremental_authorization_support:
        description: Request ability to [increment](https://stripe.com/docs/terminal/features/incremental-authorizations)
          this PaymentIntent if the combination of MCC and card brand is eligible.
          Check [incremental_authorization_supported](https://stripe.com/docs/api/charges/object#charge_object-payment_method_details-card_present-incremental_authorization_supported)
          in the [Confirm](https://stripe.com/docs/api/payment_intents/confirm) response
          to verify support.
        type: boolean
      routing:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardPresentRouting'
    type: object
  stripe.PaymentIntentPaymentMethodOptionsCardPresentRouting:
    properties:
      requested_priority:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCardPresentRoutingRequestedPriority'
        description: Requested routing priority
    type: object
  stripe.PaymentIntentPaymentMethodOptionsCardPresentRoutingRequestedPriority:
    enum:
    - domestic
    - international
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsCardPresentRoutingRequestedPriorityDomestic
    - PaymentIntentPaymentMethodOptionsCardPresentRoutingRequestedPriorityInternational
  stripe.PaymentIntentPaymentMethodOptionsCardRequestExtendedAuthorization:
    enum:
    - if_available
    - never
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsCardRequestExtendedAuthorizationIfAvailable
    - PaymentIntentPaymentMethodOptionsCardRequestExtendedAuthorizationNever
  stripe.PaymentIntentPaymentMethodOptionsCardRequestIncrementalAuthorization:
    enum:
    - if_available
    - never
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsCardRequestIncrementalAuthorizationIfAvailable
    - PaymentIntentPaymentMethodOptionsCardRequestIncrementalAuthorizationNever
  stripe.PaymentIntentPaymentMethodOptionsCardRequestMulticapture:
    enum:
    - if_available
    - never
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsCardRequestMulticaptureIfAvailable
    - PaymentIntentPaymentMethodOptionsCardRequestMulticaptureNever
  stripe.PaymentIntentPaymentMethodOptionsCardRequestOvercapture:
    enum:
    - if_available
    - never
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsCardRequestOvercaptureIfAvailable
    - PaymentIntentPaymentMethodOptionsCardRequestOvercaptureNever
  stripe.PaymentIntentPaymentMethodOptionsCardRequestThreeDSecure:
    enum:
    - any
    - automatic
    - challenge
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsCardRequestThreeDSecureAny
    - PaymentIntentPaymentMethodOptionsCardRequestThreeDSecureAutomatic
    - PaymentIntentPaymentMethodOptionsCardRequestThreeDSecureChallenge
  stripe.PaymentIntentPaymentMethodOptionsCardSetupFutureUsage:
    enum:
    - none
    - off_session
    - on_session
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsCardSetupFutureUsageNone
    - PaymentIntentPaymentMethodOptionsCardSetupFutureUsageOffSession
    - PaymentIntentPaymentMethodOptionsCardSetupFutureUsageOnSession
  stripe.PaymentIntentPaymentMethodOptionsCashApp:
    properties:
      capture_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCashAppCaptureMethod'
        description: Controls when the funds will be captured from the customer's
          account.
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCashAppSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsCashAppCaptureMethod:
    enum:
    - manual
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsCashAppCaptureMethodManual
  stripe.PaymentIntentPaymentMethodOptionsCashAppSetupFutureUsage:
    enum:
    - none
    - off_session
    - on_session
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsCashAppSetupFutureUsageNone
    - PaymentIntentPaymentMethodOptionsCashAppSetupFutureUsageOffSession
    - PaymentIntentPaymentMethodOptionsCashAppSetupFutureUsageOnSession
  stripe.PaymentIntentPaymentMethodOptionsCustomerBalance:
    properties:
      bank_transfer:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCustomerBalanceBankTransfer'
      funding_type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCustomerBalanceFundingType'
        description: 'The funding method type to be used when there are not enough
          funds in the customer balance. Permitted values include: `bank_transfer`.'
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCustomerBalanceSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsCustomerBalanceBankTransfer:
    properties:
      eu_bank_transfer:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCustomerBalanceBankTransferEUBankTransfer'
      requested_address_types:
        description: |-
          List of address types that should be returned in the financial_addresses response. If not specified, all valid types will be returned.

          Permitted values include: `sort_code`, `zengin`, `iban`, or `spei`.
        items:
          $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCustomerBalanceBankTransferRequestedAddressType'
        type: array
      type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsCustomerBalanceBankTransferType'
        description: 'The bank transfer type that this PaymentIntent is allowed to
          use for funding Permitted values include: `eu_bank_transfer`, `gb_bank_transfer`,
          `jp_bank_transfer`, `mx_bank_transfer`, or `us_bank_transfer`.'
    type: object
  stripe.PaymentIntentPaymentMethodOptionsCustomerBalanceBankTransferEUBankTransfer:
    properties:
      country:
        description: 'The desired country code of the bank account information. Permitted
          values include: `BE`, `DE`, `ES`, `FR`, `IE`, or `NL`.'
        type: string
    type: object
  stripe.PaymentIntentPaymentMethodOptionsCustomerBalanceBankTransferRequestedAddressType:
    enum:
    - aba
    - iban
    - sepa
    - sort_code
    - spei
    - swift
    - zengin
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsCustomerBalanceBankTransferRequestedAddressTypeABA
    - PaymentIntentPaymentMethodOptionsCustomerBalanceBankTransferRequestedAddressTypeIBAN
    - PaymentIntentPaymentMethodOptionsCustomerBalanceBankTransferRequestedAddressTypeSEPA
    - PaymentIntentPaymentMethodOptionsCustomerBalanceBankTransferRequestedAddressTypeSortCode
    - PaymentIntentPaymentMethodOptionsCustomerBalanceBankTransferRequestedAddressTypeSpei
    - PaymentIntentPaymentMethodOptionsCustomerBalanceBankTransferRequestedAddressTypeSwift
    - PaymentIntentPaymentMethodOptionsCustomerBalanceBankTransferRequestedAddressTypeZengin
  stripe.PaymentIntentPaymentMethodOptionsCustomerBalanceBankTransferType:
    enum:
    - eu_bank_transfer
    - gb_bank_transfer
    - jp_bank_transfer
    - mx_bank_transfer
    - us_bank_transfer
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsCustomerBalanceBankTransferTypeEUBankTransfer
    - PaymentIntentPaymentMethodOptionsCustomerBalanceBankTransferTypeGBBankTransfer
    - PaymentIntentPaymentMethodOptionsCustomerBalanceBankTransferTypeJPBankTransfer
    - PaymentIntentPaymentMethodOptionsCustomerBalanceBankTransferTypeMXBankTransfer
    - PaymentIntentPaymentMethodOptionsCustomerBalanceBankTransferTypeUSBankTransfer
  stripe.PaymentIntentPaymentMethodOptionsCustomerBalanceFundingType:
    enum:
    - bank_transfer
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsCustomerBalanceFundingTypeBankTransfer
  stripe.PaymentIntentPaymentMethodOptionsCustomerBalanceSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsCustomerBalanceSetupFutureUsageNone
  stripe.PaymentIntentPaymentMethodOptionsEPS:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsEPSSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsEPSSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsEPSSetupFutureUsageNone
  stripe.PaymentIntentPaymentMethodOptionsFPX:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsFPXSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsFPXSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsFPXSetupFutureUsageNone
  stripe.PaymentIntentPaymentMethodOptionsGiropay:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsGiropaySetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsGiropaySetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsGiropaySetupFutureUsageNone
  stripe.PaymentIntentPaymentMethodOptionsGrabpay:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsGrabpaySetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsGrabpaySetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsGrabpaySetupFutureUsageNone
  stripe.PaymentIntentPaymentMethodOptionsIDEAL:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsIDEALSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsIDEALSetupFutureUsage:
    enum:
    - none
    - off_session
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsIDEALSetupFutureUsageNone
    - PaymentIntentPaymentMethodOptionsIDEALSetupFutureUsageOffSession
  stripe.PaymentIntentPaymentMethodOptionsInteracPresent:
    type: object
  stripe.PaymentIntentPaymentMethodOptionsKakaoPay:
    properties:
      capture_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsKakaoPayCaptureMethod'
        description: Controls when the funds will be captured from the customer's
          account.
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsKakaoPaySetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsKakaoPayCaptureMethod:
    enum:
    - manual
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsKakaoPayCaptureMethodManual
  stripe.PaymentIntentPaymentMethodOptionsKakaoPaySetupFutureUsage:
    enum:
    - none
    - off_session
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsKakaoPaySetupFutureUsageNone
    - PaymentIntentPaymentMethodOptionsKakaoPaySetupFutureUsageOffSession
  stripe.PaymentIntentPaymentMethodOptionsKlarna:
    properties:
      capture_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsKlarnaCaptureMethod'
        description: Controls when the funds will be captured from the customer's
          account.
      preferred_locale:
        description: Preferred locale of the Klarna checkout page that the customer
          is redirected to.
        type: string
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsKlarnaSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsKlarnaCaptureMethod:
    enum:
    - manual
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsKlarnaCaptureMethodManual
  stripe.PaymentIntentPaymentMethodOptionsKlarnaSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsKlarnaSetupFutureUsageNone
  stripe.PaymentIntentPaymentMethodOptionsKonbini:
    properties:
      confirmation_number:
        description: An optional 10 to 11 digit numeric-only string determining the
          confirmation code at applicable convenience stores.
        type: string
      expires_after_days:
        description: The number of calendar days (between 1 and 60) after which Konbini
          payment instructions will expire. For example, if a PaymentIntent is confirmed
          with Konbini and `expires_after_days` set to 2 on Monday JST, the instructions
          will expire on Wednesday 23:59:59 JST.
        type: integer
      expires_at:
        description: The timestamp at which the Konbini payment instructions will
          expire. Only one of `expires_after_days` or `expires_at` may be set.
        type: integer
      product_description:
        description: A product descriptor of up to 22 characters, which will appear
          to customers at the convenience store.
        type: string
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsKonbiniSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsKonbiniSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsKonbiniSetupFutureUsageNone
  stripe.PaymentIntentPaymentMethodOptionsKrCard:
    properties:
      capture_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsKrCardCaptureMethod'
        description: Controls when the funds will be captured from the customer's
          account.
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsKrCardSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsKrCardCaptureMethod:
    enum:
    - manual
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsKrCardCaptureMethodManual
  stripe.PaymentIntentPaymentMethodOptionsKrCardSetupFutureUsage:
    enum:
    - none
    - off_session
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsKrCardSetupFutureUsageNone
    - PaymentIntentPaymentMethodOptionsKrCardSetupFutureUsageOffSession
  stripe.PaymentIntentPaymentMethodOptionsLink:
    properties:
      capture_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsLinkCaptureMethod'
        description: Controls when the funds will be captured from the customer's
          account.
      persistent_token:
        description: |-
          [Deprecated] This is a legacy parameter that no longer has any function.
          Deprecated:
        type: string
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsLinkSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsLinkCaptureMethod:
    enum:
    - manual
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsLinkCaptureMethodManual
  stripe.PaymentIntentPaymentMethodOptionsLinkSetupFutureUsage:
    enum:
    - none
    - off_session
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsLinkSetupFutureUsageNone
    - PaymentIntentPaymentMethodOptionsLinkSetupFutureUsageOffSession
  stripe.PaymentIntentPaymentMethodOptionsMobilepay:
    properties:
      capture_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsMobilepayCaptureMethod'
        description: Controls when the funds will be captured from the customer's
          account.
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsMobilepaySetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsMobilepayCaptureMethod:
    enum:
    - manual
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsMobilepayCaptureMethodManual
  stripe.PaymentIntentPaymentMethodOptionsMobilepaySetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsMobilepaySetupFutureUsageNone
  stripe.PaymentIntentPaymentMethodOptionsMultibanco:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsMultibancoSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsMultibancoSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsMultibancoSetupFutureUsageNone
  stripe.PaymentIntentPaymentMethodOptionsNaverPay:
    properties:
      capture_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsNaverPayCaptureMethod'
        description: Controls when the funds will be captured from the customer's
          account.
    type: object
  stripe.PaymentIntentPaymentMethodOptionsNaverPayCaptureMethod:
    enum:
    - manual
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsNaverPayCaptureMethodManual
  stripe.PaymentIntentPaymentMethodOptionsOXXO:
    properties:
      expires_after_days:
        description: The number of calendar days before an OXXO invoice expires. For
          example, if you create an OXXO invoice on Monday and you set expires_after_days
          to 2, the OXXO invoice will expire on Wednesday at 23:59 America/Mexico_City
          time.
        type: integer
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsOXXOSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsOXXOSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsOXXOSetupFutureUsageNone
  stripe.PaymentIntentPaymentMethodOptionsP24:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsP24SetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsP24SetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsP24SetupFutureUsageNone
  stripe.PaymentIntentPaymentMethodOptionsPayNow:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsPayNowSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsPayNowSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsPayNowSetupFutureUsageNone
  stripe.PaymentIntentPaymentMethodOptionsPayco:
    properties:
      capture_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsPaycoCaptureMethod'
        description: Controls when the funds will be captured from the customer's
          account.
    type: object
  stripe.PaymentIntentPaymentMethodOptionsPaycoCaptureMethod:
    enum:
    - manual
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsPaycoCaptureMethodManual
  stripe.PaymentIntentPaymentMethodOptionsPaypal:
    properties:
      capture_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsPaypalCaptureMethod'
        description: Controls when the funds will be captured from the customer's
          account.
      preferred_locale:
        description: Preferred locale of the PayPal checkout page that the customer
          is redirected to.
        type: string
      reference:
        description: A reference of the PayPal transaction visible to customer which
          is mapped to PayPal's invoice ID. This must be a globally unique ID if you
          have configured in your PayPal settings to block multiple payments per invoice
          ID.
        type: string
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsPaypalSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsPaypalCaptureMethod:
    enum:
    - manual
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsPaypalCaptureMethodManual
  stripe.PaymentIntentPaymentMethodOptionsPaypalSetupFutureUsage:
    enum:
    - none
    - off_session
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsPaypalSetupFutureUsageNone
    - PaymentIntentPaymentMethodOptionsPaypalSetupFutureUsageOffSession
  stripe.PaymentIntentPaymentMethodOptionsPix:
    properties:
      expires_after_seconds:
        description: The number of seconds (between 10 and 1209600) after which Pix
          payment will expire.
        type: integer
      expires_at:
        description: The timestamp at which the Pix expires.
        type: integer
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsPixSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsPixSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsPixSetupFutureUsageNone
  stripe.PaymentIntentPaymentMethodOptionsPromptPay:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsPromptPaySetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsPromptPaySetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsPromptPaySetupFutureUsageNone
  stripe.PaymentIntentPaymentMethodOptionsRevolutPay:
    properties:
      capture_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsRevolutPayCaptureMethod'
        description: Controls when the funds will be captured from the customer's
          account.
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsRevolutPaySetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsRevolutPayCaptureMethod:
    enum:
    - manual
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsRevolutPayCaptureMethodManual
  stripe.PaymentIntentPaymentMethodOptionsRevolutPaySetupFutureUsage:
    enum:
    - none
    - off_session
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsRevolutPaySetupFutureUsageNone
    - PaymentIntentPaymentMethodOptionsRevolutPaySetupFutureUsageOffSession
  stripe.PaymentIntentPaymentMethodOptionsSEPADebit:
    properties:
      mandate_options:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsSEPADebitMandateOptions'
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsSEPADebitSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsSEPADebitMandateOptions:
    type: object
  stripe.PaymentIntentPaymentMethodOptionsSEPADebitSetupFutureUsage:
    enum:
    - none
    - off_session
    - on_session
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsSEPADebitSetupFutureUsageNone
    - PaymentIntentPaymentMethodOptionsSEPADebitSetupFutureUsageOffSession
    - PaymentIntentPaymentMethodOptionsSEPADebitSetupFutureUsageOnSession
  stripe.PaymentIntentPaymentMethodOptionsSamsungPay:
    properties:
      capture_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsSamsungPayCaptureMethod'
        description: Controls when the funds will be captured from the customer's
          account.
    type: object
  stripe.PaymentIntentPaymentMethodOptionsSamsungPayCaptureMethod:
    enum:
    - manual
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsSamsungPayCaptureMethodManual
  stripe.PaymentIntentPaymentMethodOptionsSofort:
    properties:
      preferred_language:
        description: Preferred language of the SOFORT authorization page that the
          customer is redirected to.
        type: string
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsSofortSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsSofortSetupFutureUsage:
    enum:
    - none
    - off_session
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsSofortSetupFutureUsageNone
    - PaymentIntentPaymentMethodOptionsSofortSetupFutureUsageOffSession
  stripe.PaymentIntentPaymentMethodOptionsSwish:
    properties:
      reference:
        description: The order ID displayed in the Swish app after the payment is
          authorized.
        type: string
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsSwishSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsSwishSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsSwishSetupFutureUsageNone
  stripe.PaymentIntentPaymentMethodOptionsTWINT:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsTWINTSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsTWINTSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsTWINTSetupFutureUsageNone
  stripe.PaymentIntentPaymentMethodOptionsUSBankAccount:
    properties:
      financial_connections:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsUSBankAccountFinancialConnections'
      mandate_options:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsUSBankAccountMandateOptions'
      preferred_settlement_speed:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsUSBankAccountPreferredSettlementSpeed'
        description: Preferred transaction settlement speed
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsUSBankAccountSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
      verification_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsUSBankAccountVerificationMethod'
        description: Bank account verification method.
    type: object
  stripe.PaymentIntentPaymentMethodOptionsUSBankAccountFinancialConnections:
    properties:
      filters:
        $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsFilters'
      permissions:
        description: The list of permissions to request. The `payment_method` permission
          must be included.
        items:
          $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsPermission'
        type: array
      prefetch:
        description: Data features requested to be retrieved upon account creation.
        items:
          $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsPrefetch'
        type: array
      return_url:
        description: For webview integrations only. Upon completing OAuth login in
          the native browser, the user will be redirected to this URL to return to
          your app.
        type: string
    type: object
  stripe.PaymentIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsFilters:
    properties:
      account_subcategories:
        description: The account subcategories to use to filter for possible accounts
          to link. Valid subcategories are `checking` and `savings`.
        items:
          $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsFiltersAccountSubcategory'
        type: array
    type: object
  stripe.PaymentIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsFiltersAccountSubcategory:
    enum:
    - checking
    - savings
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsFiltersAccountSubcategoryChecking
    - PaymentIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsFiltersAccountSubcategorySavings
  stripe.PaymentIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsPermission:
    enum:
    - balances
    - ownership
    - payment_method
    - transactions
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsPermissionBalances
    - PaymentIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsPermissionOwnership
    - PaymentIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsPermissionPaymentMethod
    - PaymentIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsPermissionTransactions
  stripe.PaymentIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsPrefetch:
    enum:
    - balances
    - ownership
    - transactions
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsPrefetchBalances
    - PaymentIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsPrefetchOwnership
    - PaymentIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsPrefetchTransactions
  stripe.PaymentIntentPaymentMethodOptionsUSBankAccountMandateOptions:
    properties:
      collection_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsUSBankAccountMandateOptionsCollectionMethod'
        description: Mandate collection method
    type: object
  stripe.PaymentIntentPaymentMethodOptionsUSBankAccountMandateOptionsCollectionMethod:
    enum:
    - paper
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsUSBankAccountMandateOptionsCollectionMethodPaper
  stripe.PaymentIntentPaymentMethodOptionsUSBankAccountPreferredSettlementSpeed:
    enum:
    - fastest
    - standard
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsUSBankAccountPreferredSettlementSpeedFastest
    - PaymentIntentPaymentMethodOptionsUSBankAccountPreferredSettlementSpeedStandard
  stripe.PaymentIntentPaymentMethodOptionsUSBankAccountSetupFutureUsage:
    enum:
    - none
    - off_session
    - on_session
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsUSBankAccountSetupFutureUsageNone
    - PaymentIntentPaymentMethodOptionsUSBankAccountSetupFutureUsageOffSession
    - PaymentIntentPaymentMethodOptionsUSBankAccountSetupFutureUsageOnSession
  stripe.PaymentIntentPaymentMethodOptionsUSBankAccountVerificationMethod:
    enum:
    - automatic
    - instant
    - microdeposits
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsUSBankAccountVerificationMethodAutomatic
    - PaymentIntentPaymentMethodOptionsUSBankAccountVerificationMethodInstant
    - PaymentIntentPaymentMethodOptionsUSBankAccountVerificationMethodMicrodeposits
  stripe.PaymentIntentPaymentMethodOptionsWeChatPay:
    properties:
      app_id:
        description: The app ID registered with WeChat Pay. Only required when client
          is ios or android.
        type: string
      client:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsWeChatPayClient'
        description: The client type that the end customer will pay from
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsWeChatPaySetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsWeChatPayClient:
    enum:
    - android
    - ios
    - web
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsWeChatPayClientAndroid
    - PaymentIntentPaymentMethodOptionsWeChatPayClientIOS
    - PaymentIntentPaymentMethodOptionsWeChatPayClientWeb
  stripe.PaymentIntentPaymentMethodOptionsWeChatPaySetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsWeChatPaySetupFutureUsageNone
  stripe.PaymentIntentPaymentMethodOptionsZip:
    properties:
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentPaymentMethodOptionsZipSetupFutureUsage'
        description: |-
          Indicates that you intend to make future payments with this PaymentIntent's payment method.

          If you provide a Customer with the PaymentIntent, you can use this parameter to [attach the payment method](https://stripe.com/payments/save-during-payment) to the Customer after the PaymentIntent is confirmed and the customer completes any required actions. If you don't provide a Customer, you can still [attach](https://stripe.com/api/payment_methods/attach) the payment method to a Customer after the transaction completes.

          If the payment method is `card_present` and isn't a digital wallet, Stripe creates and attaches a [generated_card](https://stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card) payment method representing the card to the Customer instead.

          When processing card payments, Stripe uses `setup_future_usage` to help you comply with regional legislation and network rules, such as [SCA](https://stripe.com/strong-customer-authentication).
    type: object
  stripe.PaymentIntentPaymentMethodOptionsZipSetupFutureUsage:
    enum:
    - none
    type: string
    x-enum-varnames:
    - PaymentIntentPaymentMethodOptionsZipSetupFutureUsageNone
  stripe.PaymentIntentProcessing:
    properties:
      card:
        $ref: '#/definitions/stripe.PaymentIntentProcessingCard'
      type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntentProcessingType'
        description: Type of the payment method for which payment is in `processing`
          state, one of `card`.
    type: object
  stripe.PaymentIntentProcessingCard:
    properties:
      customer_notification:
        $ref: '#/definitions/stripe.PaymentIntentProcessingCardCustomerNotification'
    type: object
  stripe.PaymentIntentProcessingCardCustomerNotification:
    properties:
      approval_requested:
        description: Whether customer approval has been requested for this payment.
          For payments greater than INR 15000 or mandate amount, the customer must
          provide explicit approval of the payment with their bank.
        type: boolean
      completes_at:
        description: If customer approval is required, they need to provide approval
          before this time.
        type: integer
    type: object
  stripe.PaymentIntentProcessingType:
    enum:
    - card
    type: string
    x-enum-varnames:
    - PaymentIntentProcessingTypeCard
  stripe.PaymentIntentSetupFutureUsage:
    enum:
    - off_session
    - on_session
    type: string
    x-enum-varnames:
    - PaymentIntentSetupFutureUsageOffSession
    - PaymentIntentSetupFutureUsageOnSession
  stripe.PaymentIntentStatus:
    enum:
    - canceled
    - processing
    - requires_action
    - requires_capture
    - requires_confirmation
    - requires_payment_method
    - succeeded
    type: string
    x-enum-varnames:
    - PaymentIntentStatusCanceled
    - PaymentIntentStatusProcessing
    - PaymentIntentStatusRequiresAction
    - PaymentIntentStatusRequiresCapture
    - PaymentIntentStatusRequiresConfirmation
    - PaymentIntentStatusRequiresPaymentMethod
    - PaymentIntentStatusSucceeded
  stripe.PaymentIntentTransferData:
    properties:
      amount:
        description: Amount intended to be collected by this PaymentIntent. A positive
          integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal)
          (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency).
          The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts).
          The amount value supports up to eight digits (e.g., a value of 99999999
          for a USD charge of $999,999.99).
        type: integer
      destination:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: |-
          The account (if any) that the payment is attributed to for tax
          reporting, and where funds from the payment are transferred to after
          payment success.
    type: object
  stripe.PaymentLink:
    properties:
      active:
        description: Whether the payment link's `url` is active. If `false`, customers
          visiting the URL will be shown a page saying that the link has been deactivated.
        type: boolean
      after_completion:
        $ref: '#/definitions/stripe.PaymentLinkAfterCompletion'
      allow_promotion_codes:
        description: Whether user redeemable promotion codes are enabled.
        type: boolean
      application:
        allOf:
        - $ref: '#/definitions/stripe.Application'
        description: The ID of the Connect application that created the Payment Link.
      application_fee_amount:
        description: The amount of the application fee (if any) that will be requested
          to be applied to the payment and transferred to the application owner's
          Stripe account.
        type: integer
      application_fee_percent:
        description: This represents the percentage of the subscription invoice total
          that will be transferred to the application owner's Stripe account.
        type: number
      automatic_tax:
        $ref: '#/definitions/stripe.PaymentLinkAutomaticTax'
      billing_address_collection:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkBillingAddressCollection'
        description: Configuration for collecting the customer's billing address.
          Defaults to `auto`.
      consent_collection:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkConsentCollection'
        description: When set, provides configuration to gather active consent from
          customers.
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      custom_fields:
        description: Collect additional information from your customer using custom
          fields. Up to 3 fields are supported.
        items:
          $ref: '#/definitions/stripe.PaymentLinkCustomField'
        type: array
      custom_text:
        $ref: '#/definitions/stripe.PaymentLinkCustomText'
      customer_creation:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkCustomerCreation'
        description: Configuration for Customer creation during checkout.
      id:
        description: Unique identifier for the object.
        type: string
      inactive_message:
        description: The custom message to be displayed to a customer when a payment
          link is no longer active.
        type: string
      invoice_creation:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkInvoiceCreation'
        description: Configuration for creating invoice for payment mode payment links.
      line_items:
        allOf:
        - $ref: '#/definitions/stripe.LineItemList'
        description: The line items representing what is being sold.
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      on_behalf_of:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The account on behalf of which to charge. See the [Connect documentation](https://support.stripe.com/questions/sending-invoices-on-behalf-of-connected-accounts)
          for details.
      payment_intent_data:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkPaymentIntentData'
        description: Indicates the parameters to be passed to PaymentIntent creation
          during checkout.
      payment_method_collection:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkPaymentMethodCollection'
        description: Configuration for collecting a payment method during checkout.
          Defaults to `always`.
      payment_method_types:
        description: The list of payment method types that customers can use. When
          `null`, Stripe will dynamically show relevant payment methods you've enabled
          in your [payment method settings](https://dashboard.stripe.com/settings/payment_methods).
        items:
          $ref: '#/definitions/stripe.PaymentLinkPaymentMethodType'
        type: array
      phone_number_collection:
        $ref: '#/definitions/stripe.PaymentLinkPhoneNumberCollection'
      restrictions:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkRestrictions'
        description: Settings that restrict the usage of a payment link.
      shipping_address_collection:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkShippingAddressCollection'
        description: Configuration for collecting the customer's shipping address.
      shipping_options:
        description: The shipping rate options applied to the session.
        items:
          $ref: '#/definitions/stripe.PaymentLinkShippingOption'
        type: array
      submit_type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkSubmitType'
        description: Indicates the type of transaction being performed which customizes
          relevant text on the page, such as the submit button.
      subscription_data:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkSubscriptionData'
        description: When creating a subscription, the specified configuration data
          will be used. There must be at least one line item with a recurring price
          to use `subscription_data`.
      tax_id_collection:
        $ref: '#/definitions/stripe.PaymentLinkTaxIDCollection'
      transfer_data:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkTransferData'
        description: The account (if any) the payments will be attributed to for tax
          reporting, and where funds from each payment will be transferred to.
      url:
        description: The public URL that can be shared with customers.
        type: string
    type: object
  stripe.PaymentLinkAfterCompletion:
    properties:
      hosted_confirmation:
        $ref: '#/definitions/stripe.PaymentLinkAfterCompletionHostedConfirmation'
      redirect:
        $ref: '#/definitions/stripe.PaymentLinkAfterCompletionRedirect'
      type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkAfterCompletionType'
        description: The specified behavior after the purchase is complete.
    type: object
  stripe.PaymentLinkAfterCompletionHostedConfirmation:
    properties:
      custom_message:
        description: The custom message that is displayed to the customer after the
          purchase is complete.
        type: string
    type: object
  stripe.PaymentLinkAfterCompletionRedirect:
    properties:
      url:
        description: The URL the customer will be redirected to after the purchase
          is complete.
        type: string
    type: object
  stripe.PaymentLinkAfterCompletionType:
    enum:
    - hosted_confirmation
    - redirect
    type: string
    x-enum-varnames:
    - PaymentLinkAfterCompletionTypeHostedConfirmation
    - PaymentLinkAfterCompletionTypeRedirect
  stripe.PaymentLinkAutomaticTax:
    properties:
      enabled:
        description: If `true`, tax will be calculated automatically using the customer's
          location.
        type: boolean
      liability:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkAutomaticTaxLiability'
        description: The account that's liable for tax. If set, the business address
          and tax registrations required to perform the tax calculation are loaded
          from this account. The tax transaction is returned in the report of the
          connected account.
    type: object
  stripe.PaymentLinkAutomaticTaxLiability:
    properties:
      account:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The connected account being referenced when `type` is `account`.
      type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkAutomaticTaxLiabilityType'
        description: Type of the account referenced.
    type: object
  stripe.PaymentLinkAutomaticTaxLiabilityType:
    enum:
    - account
    - self
    type: string
    x-enum-varnames:
    - PaymentLinkAutomaticTaxLiabilityTypeAccount
    - PaymentLinkAutomaticTaxLiabilityTypeSelf
  stripe.PaymentLinkBillingAddressCollection:
    enum:
    - auto
    - required
    type: string
    x-enum-varnames:
    - PaymentLinkBillingAddressCollectionAuto
    - PaymentLinkBillingAddressCollectionRequired
  stripe.PaymentLinkConsentCollection:
    properties:
      payment_method_reuse_agreement:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkConsentCollectionPaymentMethodReuseAgreement'
        description: Settings related to the payment method reuse text shown in the
          Checkout UI.
      promotions:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkConsentCollectionPromotions'
        description: If set to `auto`, enables the collection of customer consent
          for promotional communications.
      terms_of_service:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkConsentCollectionTermsOfService'
        description: If set to `required`, it requires cutomers to accept the terms
          of service before being able to pay. If set to `none`, customers won't be
          shown a checkbox to accept the terms of service.
    type: object
  stripe.PaymentLinkConsentCollectionPaymentMethodReuseAgreement:
    properties:
      position:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkConsentCollectionPaymentMethodReuseAgreementPosition'
        description: |-
          Determines the position and visibility of the payment method reuse agreement in the UI. When set to `auto`, Stripe's defaults will be used.

          When set to `hidden`, the payment method reuse agreement text will always be hidden in the UI.
    type: object
  stripe.PaymentLinkConsentCollectionPaymentMethodReuseAgreementPosition:
    enum:
    - auto
    - hidden
    type: string
    x-enum-varnames:
    - PaymentLinkConsentCollectionPaymentMethodReuseAgreementPositionAuto
    - PaymentLinkConsentCollectionPaymentMethodReuseAgreementPositionHidden
  stripe.PaymentLinkConsentCollectionPromotions:
    enum:
    - auto
    - none
    type: string
    x-enum-varnames:
    - PaymentLinkConsentCollectionPromotionsAuto
    - PaymentLinkConsentCollectionPromotionsNone
  stripe.PaymentLinkConsentCollectionTermsOfService:
    enum:
    - none
    - required
    type: string
    x-enum-varnames:
    - PaymentLinkConsentCollectionTermsOfServiceNone
    - PaymentLinkConsentCollectionTermsOfServiceRequired
  stripe.PaymentLinkCustomField:
    properties:
      dropdown:
        $ref: '#/definitions/stripe.PaymentLinkCustomFieldDropdown'
      key:
        description: String of your choice that your integration can use to reconcile
          this field. Must be unique to this field, alphanumeric, and up to 200 characters.
        type: string
      label:
        $ref: '#/definitions/stripe.PaymentLinkCustomFieldLabel'
      numeric:
        $ref: '#/definitions/stripe.PaymentLinkCustomFieldNumeric'
      optional:
        description: Whether the customer is required to complete the field before
          completing the Checkout Session. Defaults to `false`.
        type: boolean
      text:
        $ref: '#/definitions/stripe.PaymentLinkCustomFieldText'
      type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkCustomFieldType'
        description: The type of the field.
    type: object
  stripe.PaymentLinkCustomFieldDropdown:
    properties:
      options:
        description: The options available for the customer to select. Up to 200 options
          allowed.
        items:
          $ref: '#/definitions/stripe.PaymentLinkCustomFieldDropdownOption'
        type: array
    type: object
  stripe.PaymentLinkCustomFieldDropdownOption:
    properties:
      label:
        description: The label for the option, displayed to the customer. Up to 100
          characters.
        type: string
      value:
        description: The value for this option, not displayed to the customer, used
          by your integration to reconcile the option selected by the customer. Must
          be unique to this option, alphanumeric, and up to 100 characters.
        type: string
    type: object
  stripe.PaymentLinkCustomFieldLabel:
    properties:
      custom:
        description: Custom text for the label, displayed to the customer. Up to 50
          characters.
        type: string
      type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkCustomFieldLabelType'
        description: The type of the label.
    type: object
  stripe.PaymentLinkCustomFieldLabelType:
    enum:
    - custom
    type: string
    x-enum-varnames:
    - PaymentLinkCustomFieldLabelTypeCustom
  stripe.PaymentLinkCustomFieldNumeric:
    properties:
      maximum_length:
        description: The maximum character length constraint for the customer's input.
        type: integer
      minimum_length:
        description: The minimum character length requirement for the customer's input.
        type: integer
    type: object
  stripe.PaymentLinkCustomFieldText:
    properties:
      maximum_length:
        description: The maximum character length constraint for the customer's input.
        type: integer
      minimum_length:
        description: The minimum character length requirement for the customer's input.
        type: integer
    type: object
  stripe.PaymentLinkCustomFieldType:
    enum:
    - dropdown
    - numeric
    - text
    type: string
    x-enum-varnames:
    - PaymentLinkCustomFieldTypeDropdown
    - PaymentLinkCustomFieldTypeNumeric
    - PaymentLinkCustomFieldTypeText
  stripe.PaymentLinkCustomText:
    properties:
      after_submit:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkCustomTextAfterSubmit'
        description: Custom text that should be displayed after the payment confirmation
          button.
      shipping_address:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkCustomTextShippingAddress'
        description: Custom text that should be displayed alongside shipping address
          collection.
      submit:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkCustomTextSubmit'
        description: Custom text that should be displayed alongside the payment confirmation
          button.
      terms_of_service_acceptance:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkCustomTextTermsOfServiceAcceptance'
        description: Custom text that should be displayed in place of the default
          terms of service agreement text.
    type: object
  stripe.PaymentLinkCustomTextAfterSubmit:
    properties:
      message:
        description: Text may be up to 1200 characters in length.
        type: string
    type: object
  stripe.PaymentLinkCustomTextShippingAddress:
    properties:
      message:
        description: Text may be up to 1200 characters in length.
        type: string
    type: object
  stripe.PaymentLinkCustomTextSubmit:
    properties:
      message:
        description: Text may be up to 1200 characters in length.
        type: string
    type: object
  stripe.PaymentLinkCustomTextTermsOfServiceAcceptance:
    properties:
      message:
        description: Text may be up to 1200 characters in length.
        type: string
    type: object
  stripe.PaymentLinkCustomerCreation:
    enum:
    - always
    - if_required
    type: string
    x-enum-varnames:
    - PaymentLinkCustomerCreationAlways
    - PaymentLinkCustomerCreationIfRequired
  stripe.PaymentLinkInvoiceCreation:
    properties:
      enabled:
        description: Enable creating an invoice on successful payment.
        type: boolean
      invoice_data:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkInvoiceCreationInvoiceData'
        description: Configuration for the invoice. Default invoice values will be
          used if unspecified.
    type: object
  stripe.PaymentLinkInvoiceCreationInvoiceData:
    properties:
      account_tax_ids:
        description: The account tax IDs associated with the invoice.
        items:
          $ref: '#/definitions/stripe.TaxID'
        type: array
      custom_fields:
        description: A list of up to 4 custom fields to be displayed on the invoice.
        items:
          $ref: '#/definitions/stripe.PaymentLinkInvoiceCreationInvoiceDataCustomField'
        type: array
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      footer:
        description: Footer to be displayed on the invoice.
        type: string
      issuer:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkInvoiceCreationInvoiceDataIssuer'
        description: The connected account that issues the invoice. The invoice is
          presented with the branding and support information of the specified account.
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      rendering_options:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkInvoiceCreationInvoiceDataRenderingOptions'
        description: Options for invoice PDF rendering.
    type: object
  stripe.PaymentLinkInvoiceCreationInvoiceDataCustomField:
    properties:
      name:
        description: The name of the custom field.
        type: string
      value:
        description: The value of the custom field.
        type: string
    type: object
  stripe.PaymentLinkInvoiceCreationInvoiceDataIssuer:
    properties:
      account:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The connected account being referenced when `type` is `account`.
      type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkInvoiceCreationInvoiceDataIssuerType'
        description: Type of the account referenced.
    type: object
  stripe.PaymentLinkInvoiceCreationInvoiceDataIssuerType:
    enum:
    - account
    - self
    type: string
    x-enum-varnames:
    - PaymentLinkInvoiceCreationInvoiceDataIssuerTypeAccount
    - PaymentLinkInvoiceCreationInvoiceDataIssuerTypeSelf
  stripe.PaymentLinkInvoiceCreationInvoiceDataRenderingOptions:
    properties:
      amount_tax_display:
        description: How line-item prices and amounts will be displayed with respect
          to tax on invoice PDFs.
        type: string
    type: object
  stripe.PaymentLinkPaymentIntentData:
    properties:
      capture_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkPaymentIntentDataCaptureMethod'
        description: Indicates when the funds will be captured from the customer's
          account.
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that will set metadata on [Payment Intents](https://stripe.com/docs/api/payment_intents)
          generated from this payment link.
        type: object
      setup_future_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkPaymentIntentDataSetupFutureUsage'
        description: Indicates that you intend to make future payments with the payment
          method collected during checkout.
      statement_descriptor:
        description: For a non-card payment, information about the charge that appears
          on the customer's statement when this payment succeeds in creating a charge.
        type: string
      statement_descriptor_suffix:
        description: For a card payment, information about the charge that appears
          on the customer's statement when this payment succeeds in creating a charge.
          Concatenated with the account's statement descriptor prefix to form the
          complete statement descriptor.
        type: string
      transfer_group:
        description: A string that identifies the resulting payment as part of a group.
          See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/connect/separate-charges-and-transfers)
          for details.
        type: string
    type: object
  stripe.PaymentLinkPaymentIntentDataCaptureMethod:
    enum:
    - automatic
    - automatic_async
    - manual
    type: string
    x-enum-varnames:
    - PaymentLinkPaymentIntentDataCaptureMethodAutomatic
    - PaymentLinkPaymentIntentDataCaptureMethodAutomaticAsync
    - PaymentLinkPaymentIntentDataCaptureMethodManual
  stripe.PaymentLinkPaymentIntentDataSetupFutureUsage:
    enum:
    - off_session
    - on_session
    type: string
    x-enum-varnames:
    - PaymentLinkPaymentIntentDataSetupFutureUsageOffSession
    - PaymentLinkPaymentIntentDataSetupFutureUsageOnSession
  stripe.PaymentLinkPaymentMethodCollection:
    enum:
    - always
    - if_required
    type: string
    x-enum-varnames:
    - PaymentLinkPaymentMethodCollectionAlways
    - PaymentLinkPaymentMethodCollectionIfRequired
  stripe.PaymentLinkPaymentMethodType:
    enum:
    - affirm
    - afterpay_clearpay
    - alipay
    - alma
    - au_becs_debit
    - bacs_debit
    - bancontact
    - blik
    - boleto
    - card
    - cashapp
    - eps
    - fpx
    - giropay
    - grabpay
    - ideal
    - klarna
    - konbini
    - link
    - mobilepay
    - multibanco
    - oxxo
    - p24
    - paynow
    - paypal
    - pix
    - promptpay
    - sepa_debit
    - sofort
    - swish
    - twint
    - us_bank_account
    - wechat_pay
    - zip
    type: string
    x-enum-varnames:
    - PaymentLinkPaymentMethodTypeAffirm
    - PaymentLinkPaymentMethodTypeAfterpayClearpay
    - PaymentLinkPaymentMethodTypeAlipay
    - PaymentLinkPaymentMethodTypeAlma
    - PaymentLinkPaymentMethodTypeAUBECSDebit
    - PaymentLinkPaymentMethodTypeBACSDebit
    - PaymentLinkPaymentMethodTypeBancontact
    - PaymentLinkPaymentMethodTypeBLIK
    - PaymentLinkPaymentMethodTypeBoleto
    - PaymentLinkPaymentMethodTypeCard
    - PaymentLinkPaymentMethodTypeCashApp
    - PaymentLinkPaymentMethodTypeEPS
    - PaymentLinkPaymentMethodTypeFPX
    - PaymentLinkPaymentMethodTypeGiropay
    - PaymentLinkPaymentMethodTypeGrabpay
    - PaymentLinkPaymentMethodTypeIDEAL
    - PaymentLinkPaymentMethodTypeKlarna
    - PaymentLinkPaymentMethodTypeKonbini
    - PaymentLinkPaymentMethodTypeLink
    - PaymentLinkPaymentMethodTypeMobilepay
    - PaymentLinkPaymentMethodTypeMultibanco
    - PaymentLinkPaymentMethodTypeOXXO
    - PaymentLinkPaymentMethodTypeP24
    - PaymentLinkPaymentMethodTypePayNow
    - PaymentLinkPaymentMethodTypePaypal
    - PaymentLinkPaymentMethodTypePix
    - PaymentLinkPaymentMethodTypePromptPay
    - PaymentLinkPaymentMethodTypeSEPADebit
    - PaymentLinkPaymentMethodTypeSofort
    - PaymentLinkPaymentMethodTypeSwish
    - PaymentLinkPaymentMethodTypeTWINT
    - PaymentLinkPaymentMethodTypeUSBankAccount
    - PaymentLinkPaymentMethodTypeWeChatPay
    - PaymentLinkPaymentMethodTypeZip
  stripe.PaymentLinkPhoneNumberCollection:
    properties:
      enabled:
        description: If `true`, a phone number will be collected during checkout.
        type: boolean
    type: object
  stripe.PaymentLinkRestrictions:
    properties:
      completed_sessions:
        $ref: '#/definitions/stripe.PaymentLinkRestrictionsCompletedSessions'
    type: object
  stripe.PaymentLinkRestrictionsCompletedSessions:
    properties:
      count:
        description: The current number of checkout sessions that have been completed
          on the payment link which count towards the `completed_sessions` restriction
          to be met.
        type: integer
      limit:
        description: The maximum number of checkout sessions that can be completed
          for the `completed_sessions` restriction to be met.
        type: integer
    type: object
  stripe.PaymentLinkShippingAddressCollection:
    properties:
      allowed_countries:
        description: 'An array of two-letter ISO country codes representing which
          countries Checkout should provide as options for shipping locations. Unsupported
          country codes: `AS, CX, CC, CU, HM, IR, KP, MH, FM, NF, MP, PW, SD, SY,
          UM, VI`.'
        items:
          type: string
        type: array
    type: object
  stripe.PaymentLinkShippingOption:
    properties:
      shipping_amount:
        description: A non-negative integer in cents representing how much to charge.
        type: integer
      shipping_rate:
        allOf:
        - $ref: '#/definitions/stripe.ShippingRate'
        description: The ID of the Shipping Rate to use for this shipping option.
    type: object
  stripe.PaymentLinkSubmitType:
    enum:
    - auto
    - book
    - donate
    - pay
    type: string
    x-enum-varnames:
    - PaymentLinkSubmitTypeAuto
    - PaymentLinkSubmitTypeBook
    - PaymentLinkSubmitTypeDonate
    - PaymentLinkSubmitTypePay
  stripe.PaymentLinkSubscriptionData:
    properties:
      description:
        description: The subscription's description, meant to be displayable to the
          customer. Use this field to optionally store an explanation of the subscription
          for rendering in Stripe surfaces and certain local payment methods UIs.
        type: string
      invoice_settings:
        $ref: '#/definitions/stripe.PaymentLinkSubscriptionDataInvoiceSettings'
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that will set metadata on [Subscriptions](https://stripe.com/docs/api/subscriptions)
          generated from this payment link.
        type: object
      trial_period_days:
        description: Integer representing the number of trial period days before the
          customer is charged for the first time.
        type: integer
      trial_settings:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkSubscriptionDataTrialSettings'
        description: Settings related to subscription trials.
    type: object
  stripe.PaymentLinkSubscriptionDataInvoiceSettings:
    properties:
      issuer:
        $ref: '#/definitions/stripe.PaymentLinkSubscriptionDataInvoiceSettingsIssuer'
    type: object
  stripe.PaymentLinkSubscriptionDataInvoiceSettingsIssuer:
    properties:
      account:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The connected account being referenced when `type` is `account`.
      type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkSubscriptionDataInvoiceSettingsIssuerType'
        description: Type of the account referenced.
    type: object
  stripe.PaymentLinkSubscriptionDataInvoiceSettingsIssuerType:
    enum:
    - account
    - self
    type: string
    x-enum-varnames:
    - PaymentLinkSubscriptionDataInvoiceSettingsIssuerTypeAccount
    - PaymentLinkSubscriptionDataInvoiceSettingsIssuerTypeSelf
  stripe.PaymentLinkSubscriptionDataTrialSettings:
    properties:
      end_behavior:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkSubscriptionDataTrialSettingsEndBehavior'
        description: Defines how a subscription behaves when a free trial ends.
    type: object
  stripe.PaymentLinkSubscriptionDataTrialSettingsEndBehavior:
    properties:
      missing_payment_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentLinkSubscriptionDataTrialSettingsEndBehaviorMissingPaymentMethod'
        description: Indicates how the subscription should change when the trial ends
          if the user did not provide a payment method.
    type: object
  stripe.PaymentLinkSubscriptionDataTrialSettingsEndBehaviorMissingPaymentMethod:
    enum:
    - cancel
    - create_invoice
    - pause
    type: string
    x-enum-varnames:
    - PaymentLinkSubscriptionDataTrialSettingsEndBehaviorMissingPaymentMethodCancel
    - PaymentLinkSubscriptionDataTrialSettingsEndBehaviorMissingPaymentMethodCreateInvoice
    - PaymentLinkSubscriptionDataTrialSettingsEndBehaviorMissingPaymentMethodPause
  stripe.PaymentLinkTaxIDCollection:
    properties:
      enabled:
        description: Indicates whether tax ID collection is enabled for the session.
        type: boolean
      required:
        $ref: '#/definitions/stripe.PaymentLinkTaxIDCollectionRequired'
    type: object
  stripe.PaymentLinkTaxIDCollectionRequired:
    enum:
    - if_supported
    - never
    type: string
    x-enum-varnames:
    - PaymentLinkTaxIDCollectionRequiredIfSupported
    - PaymentLinkTaxIDCollectionRequiredNever
  stripe.PaymentLinkTransferData:
    properties:
      amount:
        description: The amount in cents (or local equivalent) that will be transferred
          to the destination account. By default, the entire amount is transferred
          to the destination.
        type: integer
      destination:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The connected account receiving the transfer.
    type: object
  stripe.PaymentMethod:
    properties:
      acss_debit:
        $ref: '#/definitions/stripe.PaymentMethodACSSDebit'
      affirm:
        $ref: '#/definitions/stripe.PaymentMethodAffirm'
      afterpay_clearpay:
        $ref: '#/definitions/stripe.PaymentMethodAfterpayClearpay'
      alipay:
        $ref: '#/definitions/stripe.PaymentMethodAlipay'
      allow_redisplay:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodAllowRedisplay'
        description: This field indicates whether this payment method can be shown
          again to its customer in a checkout flow. Stripe products such as Checkout
          and Elements use this field to determine whether a payment method can be
          shown as a saved payment method in a checkout flow. The field defaults to
          “unspecified”.
      alma:
        $ref: '#/definitions/stripe.PaymentMethodAlma'
      amazon_pay:
        $ref: '#/definitions/stripe.PaymentMethodAmazonPay'
      au_becs_debit:
        $ref: '#/definitions/stripe.PaymentMethodAUBECSDebit'
      bacs_debit:
        $ref: '#/definitions/stripe.PaymentMethodBACSDebit'
      bancontact:
        $ref: '#/definitions/stripe.PaymentMethodBancontact'
      billing_details:
        $ref: '#/definitions/stripe.PaymentMethodBillingDetails'
      blik:
        $ref: '#/definitions/stripe.PaymentMethodBLIK'
      boleto:
        $ref: '#/definitions/stripe.PaymentMethodBoleto'
      card:
        $ref: '#/definitions/stripe.PaymentMethodCard'
      card_present:
        $ref: '#/definitions/stripe.PaymentMethodCardPresent'
      cashapp:
        $ref: '#/definitions/stripe.PaymentMethodCashApp'
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      customer:
        allOf:
        - $ref: '#/definitions/stripe.Customer'
        description: The ID of the Customer to which this PaymentMethod is saved.
          This will not be set when the PaymentMethod has not been saved to a Customer.
      customer_balance:
        $ref: '#/definitions/stripe.PaymentMethodCustomerBalance'
      eps:
        $ref: '#/definitions/stripe.PaymentMethodEPS'
      fpx:
        $ref: '#/definitions/stripe.PaymentMethodFPX'
      giropay:
        $ref: '#/definitions/stripe.PaymentMethodGiropay'
      grabpay:
        $ref: '#/definitions/stripe.PaymentMethodGrabpay'
      id:
        description: Unique identifier for the object.
        type: string
      ideal:
        $ref: '#/definitions/stripe.PaymentMethodIDEAL'
      interac_present:
        $ref: '#/definitions/stripe.PaymentMethodInteracPresent'
      kakao_pay:
        $ref: '#/definitions/stripe.PaymentMethodKakaoPay'
      klarna:
        $ref: '#/definitions/stripe.PaymentMethodKlarna'
      konbini:
        $ref: '#/definitions/stripe.PaymentMethodKonbini'
      kr_card:
        $ref: '#/definitions/stripe.PaymentMethodKrCard'
      link:
        $ref: '#/definitions/stripe.PaymentMethodLink'
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      mobilepay:
        $ref: '#/definitions/stripe.PaymentMethodMobilepay'
      multibanco:
        $ref: '#/definitions/stripe.PaymentMethodMultibanco'
      naver_pay:
        $ref: '#/definitions/stripe.PaymentMethodNaverPay'
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      oxxo:
        $ref: '#/definitions/stripe.PaymentMethodOXXO'
      p24:
        $ref: '#/definitions/stripe.PaymentMethodP24'
      payco:
        $ref: '#/definitions/stripe.PaymentMethodPayco'
      paynow:
        $ref: '#/definitions/stripe.PaymentMethodPayNow'
      paypal:
        $ref: '#/definitions/stripe.PaymentMethodPaypal'
      pix:
        $ref: '#/definitions/stripe.PaymentMethodPix'
      promptpay:
        $ref: '#/definitions/stripe.PaymentMethodPromptPay'
      radar_options:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodRadarOptions'
        description: Options to configure Radar. See [Radar Session](https://stripe.com/docs/radar/radar-session)
          for more information.
      revolut_pay:
        $ref: '#/definitions/stripe.PaymentMethodRevolutPay'
      samsung_pay:
        $ref: '#/definitions/stripe.PaymentMethodSamsungPay'
      sepa_debit:
        $ref: '#/definitions/stripe.PaymentMethodSEPADebit'
      sofort:
        $ref: '#/definitions/stripe.PaymentMethodSofort'
      swish:
        $ref: '#/definitions/stripe.PaymentMethodSwish'
      twint:
        $ref: '#/definitions/stripe.PaymentMethodTWINT'
      type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodType'
        description: The type of the PaymentMethod. An additional hash is included
          on the PaymentMethod with a name matching this value. It contains additional
          information specific to the PaymentMethod type.
      us_bank_account:
        $ref: '#/definitions/stripe.PaymentMethodUSBankAccount'
      wechat_pay:
        $ref: '#/definitions/stripe.PaymentMethodWeChatPay'
      zip:
        $ref: '#/definitions/stripe.PaymentMethodZip'
    type: object
  stripe.PaymentMethodACSSDebit:
    properties:
      bank_name:
        description: Name of the bank associated with the bank account.
        type: string
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use
          this attribute to check whether two bank accounts are the same.
        type: string
      institution_number:
        description: Institution number of the bank account.
        type: string
      last4:
        description: Last four digits of the bank account number.
        type: string
      transit_number:
        description: Transit number of the bank account.
        type: string
    type: object
  stripe.PaymentMethodAUBECSDebit:
    properties:
      bsb_number:
        description: Six-digit number identifying bank and branch associated with
          this bank account.
        type: string
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use
          this attribute to check whether two bank accounts are the same.
        type: string
      last4:
        description: Last four digits of the bank account number.
        type: string
    type: object
  stripe.PaymentMethodAffirm:
    type: object
  stripe.PaymentMethodAfterpayClearpay:
    type: object
  stripe.PaymentMethodAlipay:
    type: object
  stripe.PaymentMethodAllowRedisplay:
    enum:
    - always
    - limited
    - unspecified
    type: string
    x-enum-varnames:
    - PaymentMethodAllowRedisplayAlways
    - PaymentMethodAllowRedisplayLimited
    - PaymentMethodAllowRedisplayUnspecified
  stripe.PaymentMethodAlma:
    type: object
  stripe.PaymentMethodAmazonPay:
    type: object
  stripe.PaymentMethodBACSDebit:
    properties:
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use
          this attribute to check whether two bank accounts are the same.
        type: string
      last4:
        description: Last four digits of the bank account number.
        type: string
      sort_code:
        description: Sort code of the bank account. (e.g., `10-20-30`)
        type: string
    type: object
  stripe.PaymentMethodBLIK:
    type: object
  stripe.PaymentMethodBancontact:
    type: object
  stripe.PaymentMethodBillingDetails:
    properties:
      address:
        allOf:
        - $ref: '#/definitions/stripe.Address'
        description: Billing address.
      email:
        description: Email address.
        type: string
      name:
        description: Full name.
        type: string
      phone:
        description: Billing phone number (including extension).
        type: string
    type: object
  stripe.PaymentMethodBoleto:
    properties:
      tax_id:
        description: Uniquely identifies the customer tax id (CNPJ or CPF)
        type: string
    type: object
  stripe.PaymentMethodCard:
    properties:
      brand:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodCardBrand'
        description: Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`,
          `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
      checks:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodCardChecks'
        description: Checks on Card address and CVC if provided.
      country:
        description: Two-letter ISO code representing the country of the card. You
          could use this attribute to get a sense of the international breakdown of
          cards you've collected.
        type: string
      description:
        description: |-
          Please note that the fields below are for internal use only and are not returned
          as part of standard API requests.
          A high-level description of the type of cards issued in this range. (For internal use only and not typically available in standard API requests.)
        type: string
      display_brand:
        description: The brand to use when displaying the card, this accounts for
          customer's brand choice on dual-branded cards. Can be `american_express`,
          `cartes_bancaires`, `diners_club`, `discover`, `eftpos_australia`, `interac`,
          `jcb`, `mastercard`, `union_pay`, `visa`, or `other` and may contain more
          values in the future.
        type: string
      exp_month:
        description: Two-digit number representing the card's expiration month.
        type: integer
      exp_year:
        description: Four-digit number representing the card's expiration year.
        type: integer
      fingerprint:
        description: |-
          Uniquely identifies this particular card number. You can use this attribute to check whether two customers who've signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.

          *As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*
        type: string
      funding:
        allOf:
        - $ref: '#/definitions/stripe.CardFunding'
        description: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
      generated_from:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodCardGeneratedFrom'
        description: Details of the original PaymentMethod that created this object.
      iin:
        description: Issuer identification number of the card. (For internal use only
          and not typically available in standard API requests.)
        type: string
      issuer:
        description: The name of the card's issuing bank. (For internal use only and
          not typically available in standard API requests.)
        type: string
      last4:
        description: The last four digits of the card.
        type: string
      networks:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodCardNetworks'
        description: Contains information about card networks that can be used to
          process the payment.
      three_d_secure_usage:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodCardThreeDSecureUsage'
        description: Contains details on how this Card may be used for 3D Secure authentication.
      wallet:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodCardWallet'
        description: If this Card is part of a card wallet, this contains the details
          of the card wallet.
    type: object
  stripe.PaymentMethodCardBrand:
    enum:
    - amex
    - diners
    - discover
    - jcb
    - mastercard
    - unionpay
    - unknown
    - visa
    type: string
    x-enum-varnames:
    - PaymentMethodCardBrandAmex
    - PaymentMethodCardBrandDiners
    - PaymentMethodCardBrandDiscover
    - PaymentMethodCardBrandJCB
    - PaymentMethodCardBrandMastercard
    - PaymentMethodCardBrandUnionpay
    - PaymentMethodCardBrandUnknown
    - PaymentMethodCardBrandVisa
  stripe.PaymentMethodCardChecks:
    properties:
      address_line1_check:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodCardChecksAddressLine1Check'
        description: If a address line1 was provided, results of the check, one of
          `pass`, `fail`, `unavailable`, or `unchecked`.
      address_postal_code_check:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodCardChecksAddressPostalCodeCheck'
        description: If a address postal code was provided, results of the check,
          one of `pass`, `fail`, `unavailable`, or `unchecked`.
      cvc_check:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodCardChecksCVCCheck'
        description: If a CVC was provided, results of the check, one of `pass`, `fail`,
          `unavailable`, or `unchecked`.
    type: object
  stripe.PaymentMethodCardChecksAddressLine1Check:
    enum:
    - fail
    - pass
    - unavailable
    - unchecked
    type: string
    x-enum-varnames:
    - PaymentMethodCardChecksAddressLine1CheckFail
    - PaymentMethodCardChecksAddressLine1CheckPass
    - PaymentMethodCardChecksAddressLine1CheckUnavailable
    - PaymentMethodCardChecksAddressLine1CheckUnchecked
  stripe.PaymentMethodCardChecksAddressPostalCodeCheck:
    enum:
    - fail
    - pass
    - unavailable
    - unchecked
    type: string
    x-enum-varnames:
    - PaymentMethodCardChecksAddressPostalCodeCheckFail
    - PaymentMethodCardChecksAddressPostalCodeCheckPass
    - PaymentMethodCardChecksAddressPostalCodeCheckUnavailable
    - PaymentMethodCardChecksAddressPostalCodeCheckUnchecked
  stripe.PaymentMethodCardChecksCVCCheck:
    enum:
    - fail
    - pass
    - unavailable
    - unchecked
    type: string
    x-enum-varnames:
    - PaymentMethodCardChecksCVCCheckFail
    - PaymentMethodCardChecksCVCCheckPass
    - PaymentMethodCardChecksCVCCheckUnavailable
    - PaymentMethodCardChecksCVCCheckUnchecked
  stripe.PaymentMethodCardGeneratedFrom:
    properties:
      charge:
        description: The charge that created this object.
        type: string
      payment_method_details:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodCardGeneratedFromPaymentMethodDetails'
        description: Transaction-specific details of the payment method used in the
          payment.
      setup_attempt:
        allOf:
        - $ref: '#/definitions/stripe.SetupAttempt'
        description: The ID of the SetupAttempt that generated this PaymentMethod,
          if any.
    type: object
  stripe.PaymentMethodCardGeneratedFromPaymentMethodDetails:
    properties:
      card_present:
        $ref: '#/definitions/stripe.PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresent'
      type:
        description: The type of payment method transaction-specific details from
          the transaction that generated this `card` payment method. Always `card_present`.
        type: string
    type: object
  stripe.PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresent:
    properties:
      amount_authorized:
        description: The authorized amount
        type: integer
      brand:
        description: Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`,
          `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
        type: string
      brand_product:
        description: The [product code](https://stripe.com/docs/card-product-codes)
          that identifies the specific program or product associated with a card.
        type: string
      capture_before:
        description: When using manual capture, a future timestamp after which the
          charge will be automatically refunded if uncaptured.
        type: integer
      cardholder_name:
        description: The cardholder name as read from the card, in [ISO 7813](https://en.wikipedia.org/wiki/ISO/IEC_7813)
          format. May include alphanumeric characters, special characters and first/last
          name separator (`/`). In some cases, the cardholder name may not be available
          depending on how the issuer has configured the card. Cardholder name is
          typically not available on swipe or contactless payments, such as those
          made with Apple Pay and Google Pay.
        type: string
      country:
        description: Two-letter ISO code representing the country of the card. You
          could use this attribute to get a sense of the international breakdown of
          cards you've collected.
        type: string
      description:
        description: A high-level description of the type of cards issued in this
          range. (For internal use only and not typically available in standard API
          requests.)
        type: string
      emv_auth_data:
        description: Authorization response cryptogram.
        type: string
      exp_month:
        description: Two-digit number representing the card's expiration month.
        type: integer
      exp_year:
        description: Four-digit number representing the card's expiration year.
        type: integer
      fingerprint:
        description: |-
          Uniquely identifies this particular card number. You can use this attribute to check whether two customers who've signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.

          *As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*
        type: string
      funding:
        description: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
        type: string
      generated_card:
        description: ID of a card PaymentMethod generated from the card_present PaymentMethod
          that may be attached to a Customer for future transactions. Only present
          if it was possible to generate a card PaymentMethod.
        type: string
      iin:
        description: Issuer identification number of the card. (For internal use only
          and not typically available in standard API requests.)
        type: string
      incremental_authorization_supported:
        description: Whether this [PaymentIntent](https://stripe.com/docs/api/payment_intents)
          is eligible for incremental authorizations. Request support using [request_incremental_authorization_support](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-payment_method_options-card_present-request_incremental_authorization_support).
        type: boolean
      issuer:
        description: The name of the card's issuing bank. (For internal use only and
          not typically available in standard API requests.)
        type: string
      last4:
        description: The last four digits of the card.
        type: string
      network:
        description: Identifies which network this charge was processed on. Can be
          `amex`, `cartes_bancaires`, `diners`, `discover`, `eftpos_au`, `interac`,
          `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
        type: string
      network_transaction_id:
        description: This is used by the financial networks to identify a transaction.
          Visa calls this the Transaction ID, Mastercard calls this the Trace ID,
          and American Express calls this the Acquirer Reference Data. The first three
          digits of the Trace ID is the Financial Network Code, the next 6 digits
          is the Banknet Reference Number, and the last 4 digits represent the date
          (MM/DD). This field will be available for successful Visa, Mastercard, or
          American Express transactions and always null for other card brands.
        type: string
      offline:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentOffline'
        description: Details about payments collected offline.
      overcapture_supported:
        description: Defines whether the authorized amount can be over-captured or
          not
        type: boolean
      preferred_locales:
        description: EMV tag 5F2D. Preferred languages specified by the integrated
          circuit chip.
        items:
          type: string
        type: array
      read_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentReadMethod'
        description: How card details were read in this transaction.
      receipt:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentReceipt'
        description: A collection of fields required to be displayed on receipts.
          Only required for EMV transactions.
      wallet:
        $ref: '#/definitions/stripe.PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentWallet'
    type: object
  stripe.PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentOffline:
    properties:
      stored_at:
        description: Time at which the payment was collected while offline
        type: integer
      type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentOfflineType'
        description: The method used to process this payment method offline. Only
          deferred is allowed.
    type: object
  stripe.PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentOfflineType:
    enum:
    - deferred
    type: string
    x-enum-varnames:
    - PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentOfflineTypeDeferred
  stripe.PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentReadMethod:
    enum:
    - contact_emv
    - contactless_emv
    - contactless_magstripe_mode
    - magnetic_stripe_fallback
    - magnetic_stripe_track2
    type: string
    x-enum-varnames:
    - PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentReadMethodContactEmv
    - PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentReadMethodContactlessEmv
    - PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentReadMethodContactlessMagstripeMode
    - PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentReadMethodMagneticStripeFallback
    - PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentReadMethodMagneticStripeTrack2
  stripe.PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentReceipt:
    properties:
      account_type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentReceiptAccountType'
        description: The type of account being debited or credited
      application_cryptogram:
        description: EMV tag 9F26, cryptogram generated by the integrated circuit
          chip.
        type: string
      application_preferred_name:
        description: Mnenomic of the Application Identifier.
        type: string
      authorization_code:
        description: Identifier for this transaction.
        type: string
      authorization_response_code:
        description: EMV tag 8A. A code returned by the card issuer.
        type: string
      cardholder_verification_method:
        description: 'Describes the method used by the cardholder to verify ownership
          of the card. One of the following: `approval`, `failure`, `none`, `offline_pin`,
          `offline_pin_and_signature`, `online_pin`, or `signature`.'
        type: string
      dedicated_file_name:
        description: EMV tag 84. Similar to the application identifier stored on the
          integrated circuit chip.
        type: string
      terminal_verification_results:
        description: The outcome of a series of EMV functions performed by the card
          reader.
        type: string
      transaction_status_information:
        description: An indication of various EMV functions performed during the transaction.
        type: string
    type: object
  stripe.PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentReceiptAccountType:
    enum:
    - checking
    - credit
    - prepaid
    - unknown
    type: string
    x-enum-varnames:
    - PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentReceiptAccountTypeChecking
    - PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentReceiptAccountTypeCredit
    - PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentReceiptAccountTypePrepaid
    - PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentReceiptAccountTypeUnknown
  stripe.PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentWallet:
    properties:
      type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentWalletType'
        description: The type of mobile wallet, one of `apple_pay`, `google_pay`,
          `samsung_pay`, or `unknown`.
    type: object
  stripe.PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentWalletType:
    enum:
    - apple_pay
    - google_pay
    - samsung_pay
    - unknown
    type: string
    x-enum-varnames:
    - PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentWalletTypeApplePay
    - PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentWalletTypeGooglePay
    - PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentWalletTypeSamsungPay
    - PaymentMethodCardGeneratedFromPaymentMethodDetailsCardPresentWalletTypeUnknown
  stripe.PaymentMethodCardNetworks:
    properties:
      available:
        description: All available networks for the card.
        items:
          $ref: '#/definitions/stripe.PaymentMethodCardNetworksAvailable'
        type: array
      preferred:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodCardNetworksPreferred'
        description: The preferred network for co-branded cards. Can be `cartes_bancaires`,
          `mastercard`, `visa` or `invalid_preference` if requested network is not
          valid for the card.
    type: object
  stripe.PaymentMethodCardNetworksAvailable:
    enum:
    - amex
    - cartes_bancaires
    - diners
    - discover
    - interac
    - jcb
    - mastercard
    - unionpay
    - visa
    - unknown
    type: string
    x-enum-varnames:
    - PaymentMethodCardNetworksAvailableAmex
    - PaymentMethodCardNetworksAvailableCartesBancaires
    - PaymentMethodCardNetworksAvailableDiners
    - PaymentMethodCardNetworksAvailableDiscover
    - PaymentMethodCardNetworksAvailableInterac
    - PaymentMethodCardNetworksAvailableJCB
    - PaymentMethodCardNetworksAvailableMastercard
    - PaymentMethodCardNetworksAvailableUnionpay
    - PaymentMethodCardNetworksAvailableVisa
    - PaymentMethodCardNetworksAvailableUnknown
  stripe.PaymentMethodCardNetworksPreferred:
    enum:
    - amex
    - cartes_bancaires
    - diners
    - discover
    - interac
    - jcb
    - mastercard
    - unionpay
    - visa
    - unknown
    type: string
    x-enum-varnames:
    - PaymentMethodCardNetworksPreferredAmex
    - PaymentMethodCardNetworksPreferredCartesBancaires
    - PaymentMethodCardNetworksPreferredDiners
    - PaymentMethodCardNetworksPreferredDiscover
    - PaymentMethodCardNetworksPreferredInterac
    - PaymentMethodCardNetworksPreferredJCB
    - PaymentMethodCardNetworksPreferredMastercard
    - PaymentMethodCardNetworksPreferredUnionpay
    - PaymentMethodCardNetworksPreferredVisa
    - PaymentMethodCardNetworksPreferredUnknown
  stripe.PaymentMethodCardPresent:
    properties:
      brand:
        description: Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`,
          `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
        type: string
      brand_product:
        description: The [product code](https://stripe.com/docs/card-product-codes)
          that identifies the specific program or product associated with a card.
        type: string
      cardholder_name:
        description: The cardholder name as read from the card, in [ISO 7813](https://en.wikipedia.org/wiki/ISO/IEC_7813)
          format. May include alphanumeric characters, special characters and first/last
          name separator (`/`). In some cases, the cardholder name may not be available
          depending on how the issuer has configured the card. Cardholder name is
          typically not available on swipe or contactless payments, such as those
          made with Apple Pay and Google Pay.
        type: string
      country:
        description: Two-letter ISO code representing the country of the card. You
          could use this attribute to get a sense of the international breakdown of
          cards you've collected.
        type: string
      description:
        description: A high-level description of the type of cards issued in this
          range. (For internal use only and not typically available in standard API
          requests.)
        type: string
      exp_month:
        description: Two-digit number representing the card's expiration month.
        type: integer
      exp_year:
        description: Four-digit number representing the card's expiration year.
        type: integer
      fingerprint:
        description: |-
          Uniquely identifies this particular card number. You can use this attribute to check whether two customers who've signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.

          *As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*
        type: string
      funding:
        description: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
        type: string
      iin:
        description: Issuer identification number of the card. (For internal use only
          and not typically available in standard API requests.)
        type: string
      issuer:
        description: The name of the card's issuing bank. (For internal use only and
          not typically available in standard API requests.)
        type: string
      last4:
        description: The last four digits of the card.
        type: string
      networks:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodCardPresentNetworks'
        description: Contains information about card networks that can be used to
          process the payment.
      offline:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodCardPresentOffline'
        description: Details about payment methods collected offline.
      preferred_locales:
        description: EMV tag 5F2D. Preferred languages specified by the integrated
          circuit chip.
        items:
          type: string
        type: array
      read_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodCardPresentReadMethod'
        description: How card details were read in this transaction.
      wallet:
        $ref: '#/definitions/stripe.PaymentMethodCardPresentWallet'
    type: object
  stripe.PaymentMethodCardPresentNetworks:
    properties:
      available:
        description: All available networks for the card.
        items:
          type: string
        type: array
      preferred:
        description: The preferred network for the card.
        type: string
    type: object
  stripe.PaymentMethodCardPresentOffline:
    properties:
      stored_at:
        description: Time at which the payment was collected while offline
        type: integer
      type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodCardPresentOfflineType'
        description: The method used to process this payment method offline. Only
          deferred is allowed.
    type: object
  stripe.PaymentMethodCardPresentOfflineType:
    enum:
    - deferred
    type: string
    x-enum-varnames:
    - PaymentMethodCardPresentOfflineTypeDeferred
  stripe.PaymentMethodCardPresentReadMethod:
    enum:
    - contact_emv
    - contactless_emv
    - contactless_magstripe_mode
    - magnetic_stripe_fallback
    - magnetic_stripe_track2
    type: string
    x-enum-varnames:
    - PaymentMethodCardPresentReadMethodContactEmv
    - PaymentMethodCardPresentReadMethodContactlessEmv
    - PaymentMethodCardPresentReadMethodContactlessMagstripeMode
    - PaymentMethodCardPresentReadMethodMagneticStripeFallback
    - PaymentMethodCardPresentReadMethodMagneticStripeTrack2
  stripe.PaymentMethodCardPresentWallet:
    properties:
      type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodCardPresentWalletType'
        description: The type of mobile wallet, one of `apple_pay`, `google_pay`,
          `samsung_pay`, or `unknown`.
    type: object
  stripe.PaymentMethodCardPresentWalletType:
    enum:
    - apple_pay
    - google_pay
    - samsung_pay
    - unknown
    type: string
    x-enum-varnames:
    - PaymentMethodCardPresentWalletTypeApplePay
    - PaymentMethodCardPresentWalletTypeGooglePay
    - PaymentMethodCardPresentWalletTypeSamsungPay
    - PaymentMethodCardPresentWalletTypeUnknown
  stripe.PaymentMethodCardThreeDSecureUsage:
    properties:
      supported:
        description: Whether 3D Secure is supported on this card.
        type: boolean
    type: object
  stripe.PaymentMethodCardWallet:
    properties:
      amex_express_checkout:
        $ref: '#/definitions/stripe.PaymentMethodCardWalletAmexExpressCheckout'
      apple_pay:
        $ref: '#/definitions/stripe.PaymentMethodCardWalletApplePay'
      dynamic_last4:
        description: (For tokenized numbers only.) The last four digits of the device
          account number.
        type: string
      google_pay:
        $ref: '#/definitions/stripe.PaymentMethodCardWalletGooglePay'
      link:
        $ref: '#/definitions/stripe.PaymentMethodCardWalletLink'
      masterpass:
        $ref: '#/definitions/stripe.PaymentMethodCardWalletMasterpass'
      samsung_pay:
        $ref: '#/definitions/stripe.PaymentMethodCardWalletSamsungPay'
      type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodCardWalletType'
        description: The type of the card wallet, one of `amex_express_checkout`,
          `apple_pay`, `google_pay`, `masterpass`, `samsung_pay`, `visa_checkout`,
          or `link`. An additional hash is included on the Wallet subhash with a name
          matching this value. It contains additional information specific to the
          card wallet type.
      visa_checkout:
        $ref: '#/definitions/stripe.PaymentMethodCardWalletVisaCheckout'
    type: object
  stripe.PaymentMethodCardWalletAmexExpressCheckout:
    type: object
  stripe.PaymentMethodCardWalletApplePay:
    type: object
  stripe.PaymentMethodCardWalletGooglePay:
    type: object
  stripe.PaymentMethodCardWalletLink:
    type: object
  stripe.PaymentMethodCardWalletMasterpass:
    properties:
      billing_address:
        allOf:
        - $ref: '#/definitions/stripe.Address'
        description: Owner's verified billing address. Values are verified or provided
          by the wallet directly (if supported) at the time of authorization or settlement.
          They cannot be set or mutated.
      email:
        description: Owner's verified email. Values are verified or provided by the
          wallet directly (if supported) at the time of authorization or settlement.
          They cannot be set or mutated.
        type: string
      name:
        description: Owner's verified full name. Values are verified or provided by
          the wallet directly (if supported) at the time of authorization or settlement.
          They cannot be set or mutated.
        type: string
      shipping_address:
        allOf:
        - $ref: '#/definitions/stripe.Address'
        description: Owner's verified shipping address. Values are verified or provided
          by the wallet directly (if supported) at the time of authorization or settlement.
          They cannot be set or mutated.
    type: object
  stripe.PaymentMethodCardWalletSamsungPay:
    type: object
  stripe.PaymentMethodCardWalletType:
    enum:
    - amex_express_checkout
    - apple_pay
    - google_pay
    - link
    - masterpass
    - samsung_pay
    - visa_checkout
    type: string
    x-enum-varnames:
    - PaymentMethodCardWalletTypeAmexExpressCheckout
    - PaymentMethodCardWalletTypeApplePay
    - PaymentMethodCardWalletTypeGooglePay
    - PaymentMethodCardWalletTypeLink
    - PaymentMethodCardWalletTypeMasterpass
    - PaymentMethodCardWalletTypeSamsungPay
    - PaymentMethodCardWalletTypeVisaCheckout
  stripe.PaymentMethodCardWalletVisaCheckout:
    properties:
      billing_address:
        allOf:
        - $ref: '#/definitions/stripe.Address'
        description: Owner's verified billing address. Values are verified or provided
          by the wallet directly (if supported) at the time of authorization or settlement.
          They cannot be set or mutated.
      email:
        description: Owner's verified email. Values are verified or provided by the
          wallet directly (if supported) at the time of authorization or settlement.
          They cannot be set or mutated.
        type: string
      name:
        description: Owner's verified full name. Values are verified or provided by
          the wallet directly (if supported) at the time of authorization or settlement.
          They cannot be set or mutated.
        type: string
      shipping_address:
        allOf:
        - $ref: '#/definitions/stripe.Address'
        description: Owner's verified shipping address. Values are verified or provided
          by the wallet directly (if supported) at the time of authorization or settlement.
          They cannot be set or mutated.
    type: object
  stripe.PaymentMethodCashApp:
    properties:
      buyer_id:
        description: A unique and immutable identifier assigned by Cash App to every
          buyer.
        type: string
      cashtag:
        description: A public identifier for buyers using Cash App.
        type: string
    type: object
  stripe.PaymentMethodCustomerBalance:
    type: object
  stripe.PaymentMethodEPS:
    properties:
      bank:
        description: The customer's bank. Should be one of `arzte_und_apotheker_bank`,
          `austrian_anadi_bank_ag`, `bank_austria`, `bankhaus_carl_spangler`, `bankhaus_schelhammer_und_schattera_ag`,
          `bawag_psk_ag`, `bks_bank_ag`, `brull_kallmus_bank_ag`, `btv_vier_lander_bank`,
          `capital_bank_grawe_gruppe_ag`, `deutsche_bank_ag`, `dolomitenbank`, `easybank_ag`,
          `erste_bank_und_sparkassen`, `hypo_alpeadriabank_international_ag`, `hypo_noe_lb_fur_niederosterreich_u_wien`,
          `hypo_oberosterreich_salzburg_steiermark`, `hypo_tirol_bank_ag`, `hypo_vorarlberg_bank_ag`,
          `hypo_bank_burgenland_aktiengesellschaft`, `marchfelder_bank`, `oberbank_ag`,
          `raiffeisen_bankengruppe_osterreich`, `schoellerbank_ag`, `sparda_bank_wien`,
          `volksbank_gruppe`, `volkskreditbank_ag`, or `vr_bank_braunau`.
        type: string
    type: object
  stripe.PaymentMethodFPX:
    properties:
      account_holder_type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodFPXAccountHolderType'
        description: Account holder type, if provided. Can be one of `individual`
          or `company`.
      bank:
        description: The customer's bank, if provided. Can be one of `affin_bank`,
          `agrobank`, `alliance_bank`, `ambank`, `bank_islam`, `bank_muamalat`, `bank_rakyat`,
          `bsn`, `cimb`, `hong_leong_bank`, `hsbc`, `kfh`, `maybank2u`, `ocbc`, `public_bank`,
          `rhb`, `standard_chartered`, `uob`, `deutsche_bank`, `maybank2e`, `pb_enterprise`,
          or `bank_of_china`.
        type: string
    type: object
  stripe.PaymentMethodFPXAccountHolderType:
    enum:
    - company
    - individual
    type: string
    x-enum-varnames:
    - PaymentMethodFPXAccountHolderTypeCompany
    - PaymentMethodFPXAccountHolderTypeIndividual
  stripe.PaymentMethodGiropay:
    type: object
  stripe.PaymentMethodGrabpay:
    type: object
  stripe.PaymentMethodIDEAL:
    properties:
      bank:
        description: The customer's bank, if provided. Can be one of `abn_amro`, `asn_bank`,
          `bunq`, `handelsbanken`, `ing`, `knab`, `moneyou`, `n26`, `nn`, `rabobank`,
          `regiobank`, `revolut`, `sns_bank`, `triodos_bank`, `van_lanschot`, or `yoursafe`.
        type: string
      bic:
        description: The Bank Identifier Code of the customer's bank, if the bank
          was provided.
        type: string
    type: object
  stripe.PaymentMethodInteracPresent:
    properties:
      brand:
        description: Card brand. Can be `interac`, `mastercard` or `visa`.
        type: string
      cardholder_name:
        description: The cardholder name as read from the card, in [ISO 7813](https://en.wikipedia.org/wiki/ISO/IEC_7813)
          format. May include alphanumeric characters, special characters and first/last
          name separator (`/`). In some cases, the cardholder name may not be available
          depending on how the issuer has configured the card. Cardholder name is
          typically not available on swipe or contactless payments, such as those
          made with Apple Pay and Google Pay.
        type: string
      country:
        description: Two-letter ISO code representing the country of the card. You
          could use this attribute to get a sense of the international breakdown of
          cards you've collected.
        type: string
      description:
        description: A high-level description of the type of cards issued in this
          range. (For internal use only and not typically available in standard API
          requests.)
        type: string
      exp_month:
        description: Two-digit number representing the card's expiration month.
        type: integer
      exp_year:
        description: Four-digit number representing the card's expiration year.
        type: integer
      fingerprint:
        description: |-
          Uniquely identifies this particular card number. You can use this attribute to check whether two customers who've signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.

          *As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*
        type: string
      funding:
        description: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
        type: string
      iin:
        description: Issuer identification number of the card. (For internal use only
          and not typically available in standard API requests.)
        type: string
      issuer:
        description: The name of the card's issuing bank. (For internal use only and
          not typically available in standard API requests.)
        type: string
      last4:
        description: The last four digits of the card.
        type: string
      networks:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodInteracPresentNetworks'
        description: Contains information about card networks that can be used to
          process the payment.
      preferred_locales:
        description: EMV tag 5F2D. Preferred languages specified by the integrated
          circuit chip.
        items:
          type: string
        type: array
      read_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodInteracPresentReadMethod'
        description: How card details were read in this transaction.
    type: object
  stripe.PaymentMethodInteracPresentNetworks:
    properties:
      available:
        description: All available networks for the card.
        items:
          type: string
        type: array
      preferred:
        description: The preferred network for the card.
        type: string
    type: object
  stripe.PaymentMethodInteracPresentReadMethod:
    enum:
    - contact_emv
    - contactless_emv
    - contactless_magstripe_mode
    - magnetic_stripe_fallback
    - magnetic_stripe_track2
    type: string
    x-enum-varnames:
    - PaymentMethodInteracPresentReadMethodContactEmv
    - PaymentMethodInteracPresentReadMethodContactlessEmv
    - PaymentMethodInteracPresentReadMethodContactlessMagstripeMode
    - PaymentMethodInteracPresentReadMethodMagneticStripeFallback
    - PaymentMethodInteracPresentReadMethodMagneticStripeTrack2
  stripe.PaymentMethodKakaoPay:
    type: object
  stripe.PaymentMethodKlarna:
    properties:
      dob:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodKlarnaDOB'
        description: The customer's date of birth, if provided.
    type: object
  stripe.PaymentMethodKlarnaDOB:
    properties:
      day:
        description: The day of birth, between 1 and 31.
        type: integer
      month:
        description: The month of birth, between 1 and 12.
        type: integer
      year:
        description: The four-digit year of birth.
        type: integer
    type: object
  stripe.PaymentMethodKonbini:
    type: object
  stripe.PaymentMethodKrCard:
    properties:
      brand:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodKrCardBrand'
        description: The local credit or debit card brand.
      last4:
        description: The last four digits of the card. This may not be present for
          American Express cards.
        type: string
    type: object
  stripe.PaymentMethodKrCardBrand:
    enum:
    - bc
    - citi
    - hana
    - hyundai
    - jeju
    - jeonbuk
    - kakaobank
    - kbank
    - kdbbank
    - kookmin
    - kwangju
    - lotte
    - mg
    - nh
    - post
    - samsung
    - savingsbank
    - shinhan
    - shinhyup
    - suhyup
    - tossbank
    - woori
    type: string
    x-enum-varnames:
    - PaymentMethodKrCardBrandBc
    - PaymentMethodKrCardBrandCiti
    - PaymentMethodKrCardBrandHana
    - PaymentMethodKrCardBrandHyundai
    - PaymentMethodKrCardBrandJeju
    - PaymentMethodKrCardBrandJeonbuk
    - PaymentMethodKrCardBrandKakaobank
    - PaymentMethodKrCardBrandKbank
    - PaymentMethodKrCardBrandKdbbank
    - PaymentMethodKrCardBrandKookmin
    - PaymentMethodKrCardBrandKwangju
    - PaymentMethodKrCardBrandLotte
    - PaymentMethodKrCardBrandMg
    - PaymentMethodKrCardBrandNh
    - PaymentMethodKrCardBrandPost
    - PaymentMethodKrCardBrandSamsung
    - PaymentMethodKrCardBrandSavingsbank
    - PaymentMethodKrCardBrandShinhan
    - PaymentMethodKrCardBrandShinhyup
    - PaymentMethodKrCardBrandSuhyup
    - PaymentMethodKrCardBrandTossbank
    - PaymentMethodKrCardBrandWoori
  stripe.PaymentMethodLink:
    properties:
      email:
        description: Account owner's email address.
        type: string
      persistent_token:
        description: |-
          [Deprecated] This is a legacy parameter that no longer has any function.
          Deprecated:
        type: string
    type: object
  stripe.PaymentMethodMobilepay:
    type: object
  stripe.PaymentMethodMultibanco:
    type: object
  stripe.PaymentMethodNaverPay:
    properties:
      funding:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodNaverPayFunding'
        description: Whether to fund this transaction with Naver Pay points or a card.
    type: object
  stripe.PaymentMethodNaverPayFunding:
    enum:
    - card
    - points
    type: string
    x-enum-varnames:
    - PaymentMethodNaverPayFundingCard
    - PaymentMethodNaverPayFundingPoints
  stripe.PaymentMethodOXXO:
    type: object
  stripe.PaymentMethodP24:
    properties:
      bank:
        description: The customer's bank, if provided.
        type: string
    type: object
  stripe.PaymentMethodPayNow:
    type: object
  stripe.PaymentMethodPayco:
    type: object
  stripe.PaymentMethodPaypal:
    properties:
      payer_email:
        description: |-
          Owner's email. Values are provided by PayPal directly
          (if supported) at the time of authorization or settlement. They cannot be set or mutated.
        type: string
      payer_id:
        description: PayPal account PayerID. This identifier uniquely identifies the
          PayPal customer.
        type: string
    type: object
  stripe.PaymentMethodPix:
    type: object
  stripe.PaymentMethodPromptPay:
    type: object
  stripe.PaymentMethodRadarOptions:
    properties:
      session:
        description: A [Radar Session](https://stripe.com/docs/radar/radar-session)
          is a snapshot of the browser metadata and device details that help Radar
          make more accurate predictions on your payments.
        type: string
    type: object
  stripe.PaymentMethodRevolutPay:
    type: object
  stripe.PaymentMethodSEPADebit:
    properties:
      bank_code:
        description: Bank code of bank associated with the bank account.
        type: string
      branch_code:
        description: Branch code of bank associated with the bank account.
        type: string
      country:
        description: Two-letter ISO code representing the country the bank account
          is located in.
        type: string
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use
          this attribute to check whether two bank accounts are the same.
        type: string
      generated_from:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodSEPADebitGeneratedFrom'
        description: Information about the object that generated this PaymentMethod.
      last4:
        description: Last four characters of the IBAN.
        type: string
    type: object
  stripe.PaymentMethodSEPADebitGeneratedFrom:
    properties:
      charge:
        allOf:
        - $ref: '#/definitions/stripe.Charge'
        description: The ID of the Charge that generated this PaymentMethod, if any.
      setup_attempt:
        allOf:
        - $ref: '#/definitions/stripe.SetupAttempt'
        description: The ID of the SetupAttempt that generated this PaymentMethod,
          if any.
    type: object
  stripe.PaymentMethodSamsungPay:
    type: object
  stripe.PaymentMethodSofort:
    properties:
      country:
        description: Two-letter ISO code representing the country the bank account
          is located in.
        type: string
    type: object
  stripe.PaymentMethodSwish:
    type: object
  stripe.PaymentMethodTWINT:
    type: object
  stripe.PaymentMethodType:
    enum:
    - acss_debit
    - affirm
    - afterpay_clearpay
    - alipay
    - alma
    - amazon_pay
    - au_becs_debit
    - bacs_debit
    - bancontact
    - blik
    - boleto
    - card
    - card_present
    - cashapp
    - customer_balance
    - eps
    - fpx
    - giropay
    - grabpay
    - ideal
    - interac_present
    - kakao_pay
    - klarna
    - konbini
    - kr_card
    - link
    - mobilepay
    - multibanco
    - naver_pay
    - oxxo
    - p24
    - payco
    - paynow
    - paypal
    - pix
    - promptpay
    - revolut_pay
    - samsung_pay
    - sepa_debit
    - sofort
    - swish
    - twint
    - us_bank_account
    - wechat_pay
    - zip
    type: string
    x-enum-varnames:
    - PaymentMethodTypeACSSDebit
    - PaymentMethodTypeAffirm
    - PaymentMethodTypeAfterpayClearpay
    - PaymentMethodTypeAlipay
    - PaymentMethodTypeAlma
    - PaymentMethodTypeAmazonPay
    - PaymentMethodTypeAUBECSDebit
    - PaymentMethodTypeBACSDebit
    - PaymentMethodTypeBancontact
    - PaymentMethodTypeBLIK
    - PaymentMethodTypeBoleto
    - PaymentMethodTypeCard
    - PaymentMethodTypeCardPresent
    - PaymentMethodTypeCashApp
    - PaymentMethodTypeCustomerBalance
    - PaymentMethodTypeEPS
    - PaymentMethodTypeFPX
    - PaymentMethodTypeGiropay
    - PaymentMethodTypeGrabpay
    - PaymentMethodTypeIDEAL
    - PaymentMethodTypeInteracPresent
    - PaymentMethodTypeKakaoPay
    - PaymentMethodTypeKlarna
    - PaymentMethodTypeKonbini
    - PaymentMethodTypeKrCard
    - PaymentMethodTypeLink
    - PaymentMethodTypeMobilepay
    - PaymentMethodTypeMultibanco
    - PaymentMethodTypeNaverPay
    - PaymentMethodTypeOXXO
    - PaymentMethodTypeP24
    - PaymentMethodTypePayco
    - PaymentMethodTypePayNow
    - PaymentMethodTypePaypal
    - PaymentMethodTypePix
    - PaymentMethodTypePromptPay
    - PaymentMethodTypeRevolutPay
    - PaymentMethodTypeSamsungPay
    - PaymentMethodTypeSEPADebit
    - PaymentMethodTypeSofort
    - PaymentMethodTypeSwish
    - PaymentMethodTypeTWINT
    - PaymentMethodTypeUSBankAccount
    - PaymentMethodTypeWeChatPay
    - PaymentMethodTypeZip
  stripe.PaymentMethodUSBankAccount:
    properties:
      account_holder_type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodUSBankAccountAccountHolderType'
        description: 'Account holder type: individual or company.'
      account_type:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodUSBankAccountAccountType'
        description: 'Account type: checkings or savings. Defaults to checking if
          omitted.'
      bank_name:
        description: The name of the bank.
        type: string
      financial_connections_account:
        description: The ID of the Financial Connections Account used to create the
          payment method.
        type: string
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use
          this attribute to check whether two bank accounts are the same.
        type: string
      last4:
        description: Last four digits of the bank account number.
        type: string
      networks:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodUSBankAccountNetworks'
        description: Contains information about US bank account networks that can
          be used.
      routing_number:
        description: Routing number of the bank account.
        type: string
      status_details:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodUSBankAccountStatusDetails'
        description: Contains information about the future reusability of this PaymentMethod.
    type: object
  stripe.PaymentMethodUSBankAccountAccountHolderType:
    enum:
    - company
    - individual
    type: string
    x-enum-varnames:
    - PaymentMethodUSBankAccountAccountHolderTypeCompany
    - PaymentMethodUSBankAccountAccountHolderTypeIndividual
  stripe.PaymentMethodUSBankAccountAccountType:
    enum:
    - checking
    - savings
    type: string
    x-enum-varnames:
    - PaymentMethodUSBankAccountAccountTypeChecking
    - PaymentMethodUSBankAccountAccountTypeSavings
  stripe.PaymentMethodUSBankAccountNetworks:
    properties:
      preferred:
        description: The preferred network.
        type: string
      supported:
        description: All supported networks.
        items:
          $ref: '#/definitions/stripe.PaymentMethodUSBankAccountNetworksSupported'
        type: array
    type: object
  stripe.PaymentMethodUSBankAccountNetworksSupported:
    enum:
    - ach
    - us_domestic_wire
    type: string
    x-enum-varnames:
    - PaymentMethodUSBankAccountNetworksSupportedACH
    - PaymentMethodUSBankAccountNetworksSupportedUSDomesticWire
  stripe.PaymentMethodUSBankAccountStatusDetails:
    properties:
      blocked:
        $ref: '#/definitions/stripe.PaymentMethodUSBankAccountStatusDetailsBlocked'
    type: object
  stripe.PaymentMethodUSBankAccountStatusDetailsBlocked:
    properties:
      network_code:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodUSBankAccountStatusDetailsBlockedNetworkCode'
        description: The ACH network code that resulted in this block.
      reason:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethodUSBankAccountStatusDetailsBlockedReason'
        description: The reason why this PaymentMethod's fingerprint has been blocked
    type: object
  stripe.PaymentMethodUSBankAccountStatusDetailsBlockedNetworkCode:
    enum:
    - R02
    - R03
    - R04
    - R05
    - R07
    - R08
    - R10
    - R11
    - R16
    - R20
    - R29
    - R31
    type: string
    x-enum-varnames:
    - PaymentMethodUSBankAccountStatusDetailsBlockedNetworkCodeR02
    - PaymentMethodUSBankAccountStatusDetailsBlockedNetworkCodeR03
    - PaymentMethodUSBankAccountStatusDetailsBlockedNetworkCodeR04
    - PaymentMethodUSBankAccountStatusDetailsBlockedNetworkCodeR05
    - PaymentMethodUSBankAccountStatusDetailsBlockedNetworkCodeR07
    - PaymentMethodUSBankAccountStatusDetailsBlockedNetworkCodeR08
    - PaymentMethodUSBankAccountStatusDetailsBlockedNetworkCodeR10
    - PaymentMethodUSBankAccountStatusDetailsBlockedNetworkCodeR11
    - PaymentMethodUSBankAccountStatusDetailsBlockedNetworkCodeR16
    - PaymentMethodUSBankAccountStatusDetailsBlockedNetworkCodeR20
    - PaymentMethodUSBankAccountStatusDetailsBlockedNetworkCodeR29
    - PaymentMethodUSBankAccountStatusDetailsBlockedNetworkCodeR31
  stripe.PaymentMethodUSBankAccountStatusDetailsBlockedReason:
    enum:
    - bank_account_closed
    - bank_account_frozen
    - bank_account_invalid_details
    - bank_account_restricted
    - bank_account_unusable
    - debit_not_authorized
    type: string
    x-enum-varnames:
    - PaymentMethodUSBankAccountStatusDetailsBlockedReasonBankAccountClosed
    - PaymentMethodUSBankAccountStatusDetailsBlockedReasonBankAccountFrozen
    - PaymentMethodUSBankAccountStatusDetailsBlockedReasonBankAccountInvalidDetails
    - PaymentMethodUSBankAccountStatusDetailsBlockedReasonBankAccountRestricted
    - PaymentMethodUSBankAccountStatusDetailsBlockedReasonBankAccountUnusable
    - PaymentMethodUSBankAccountStatusDetailsBlockedReasonDebitNotAuthorized
  stripe.PaymentMethodWeChatPay:
    type: object
  stripe.PaymentMethodZip:
    type: object
  stripe.PaymentSource:
    properties:
      deleted:
        type: boolean
      id:
        type: string
      object:
        $ref: '#/definitions/stripe.PaymentSourceType'
    type: object
  stripe.PaymentSourceList:
    properties:
      data:
        items:
          $ref: '#/definitions/stripe.PaymentSource'
        type: array
      has_more:
        type: boolean
      total_count:
        description: |-
          TotalCount is the total number of objects in the collection (beyond just
          on the current page). This is not returned in most list calls.

          Deprecated: TotalCount is only included in some legacy situations and
          not generally available anymore.
        type: integer
      url:
        type: string
    type: object
  stripe.PaymentSourceType:
    enum:
    - account
    - bank_account
    - card
    - source
    type: string
    x-enum-varnames:
    - PaymentSourceTypeAccount
    - PaymentSourceTypeBankAccount
    - PaymentSourceTypeCard
    - PaymentSourceTypeSource
  stripe.Period:
    properties:
      end:
        type: integer
      start:
        type: integer
    type: object
  stripe.Person:
    properties:
      account:
        description: The account the person is associated with.
        type: string
      additional_tos_acceptances:
        $ref: '#/definitions/stripe.PersonAdditionalTOSAcceptances'
      address:
        $ref: '#/definitions/stripe.Address'
      address_kana:
        allOf:
        - $ref: '#/definitions/stripe.PersonAddressKana'
        description: The Kana variation of the person's address (Japan only).
      address_kanji:
        allOf:
        - $ref: '#/definitions/stripe.PersonAddressKanji'
        description: The Kanji variation of the person's address (Japan only).
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      deleted:
        type: boolean
      dob:
        $ref: '#/definitions/stripe.PersonDOB'
      email:
        description: The person's email address.
        type: string
      first_name:
        description: The person's first name.
        type: string
      first_name_kana:
        description: The Kana variation of the person's first name (Japan only).
        type: string
      first_name_kanji:
        description: The Kanji variation of the person's first name (Japan only).
        type: string
      full_name_aliases:
        description: A list of alternate names or aliases that the person is known
          by.
        items:
          type: string
        type: array
      future_requirements:
        allOf:
        - $ref: '#/definitions/stripe.PersonFutureRequirements'
        description: Information about the [upcoming new requirements for this person](https://stripe.com/docs/connect/custom-accounts/future-requirements),
          including what information needs to be collected, and by when.
      gender:
        description: The person's gender.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      id_number_provided:
        description: Whether the person's `id_number` was provided. True if either
          the full ID number was provided or if only the required part of the ID number
          was provided (ex. last four of an individual's SSN for the US indicated
          by `ssn_last_4_provided`).
        type: boolean
      id_number_secondary_provided:
        description: Whether the person's `id_number_secondary` was provided.
        type: boolean
      last_name:
        description: The person's last name.
        type: string
      last_name_kana:
        description: The Kana variation of the person's last name (Japan only).
        type: string
      last_name_kanji:
        description: The Kanji variation of the person's last name (Japan only).
        type: string
      maiden_name:
        description: The person's maiden name.
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      nationality:
        description: The country where the person is a national.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      phone:
        description: The person's phone number.
        type: string
      political_exposure:
        allOf:
        - $ref: '#/definitions/stripe.PersonPoliticalExposure'
        description: Indicates if the person or any of their representatives, family
          members, or other closely related persons, declares that they hold or have
          held an important public job or function, in any jurisdiction.
      registered_address:
        $ref: '#/definitions/stripe.Address'
      relationship:
        $ref: '#/definitions/stripe.PersonRelationship'
      requirements:
        allOf:
        - $ref: '#/definitions/stripe.PersonRequirements'
        description: Information about the requirements for this person, including
          what information needs to be collected, and by when.
      ssn_last_4_provided:
        description: Whether the last four digits of the person's Social Security
          number have been provided (U.S. only).
        type: boolean
      verification:
        $ref: '#/definitions/stripe.PersonVerification'
    type: object
  stripe.PersonAdditionalTOSAcceptances:
    properties:
      account:
        allOf:
        - $ref: '#/definitions/stripe.PersonAdditionalTOSAcceptancesAccount'
        description: Details on the legal guardian's acceptance of the main Stripe
          service agreement.
    type: object
  stripe.PersonAdditionalTOSAcceptancesAccount:
    properties:
      date:
        description: The Unix timestamp marking when the legal guardian accepted the
          service agreement.
        type: integer
      ip:
        description: The IP address from which the legal guardian accepted the service
          agreement.
        type: string
      user_agent:
        description: The user agent of the browser from which the legal guardian accepted
          the service agreement.
        type: string
    type: object
  stripe.PersonAddressKana:
    properties:
      city:
        description: City/Ward.
        type: string
      country:
        description: Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
        type: string
      line1:
        description: Block/Building number.
        type: string
      line2:
        description: Building details.
        type: string
      postal_code:
        description: ZIP or postal code.
        type: string
      state:
        description: Prefecture.
        type: string
      town:
        description: Town/cho-me.
        type: string
    type: object
  stripe.PersonAddressKanji:
    properties:
      city:
        description: City/Ward.
        type: string
      country:
        description: Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
        type: string
      line1:
        description: Block/Building number.
        type: string
      line2:
        description: Building details.
        type: string
      postal_code:
        description: ZIP or postal code.
        type: string
      state:
        description: Prefecture.
        type: string
      town:
        description: Town/cho-me.
        type: string
    type: object
  stripe.PersonDOB:
    properties:
      day:
        description: The day of birth, between 1 and 31.
        type: integer
      month:
        description: The month of birth, between 1 and 12.
        type: integer
      year:
        description: The four-digit year of birth.
        type: integer
    type: object
  stripe.PersonFutureRequirements:
    properties:
      alternatives:
        description: Fields that are due and can be satisfied by providing the corresponding
          alternative fields instead.
        items:
          $ref: '#/definitions/stripe.PersonFutureRequirementsAlternative'
        type: array
      currently_due:
        description: Fields that need to be collected to keep the person's account
          enabled. If not collected by the account's `future_requirements[current_deadline]`,
          these fields will transition to the main `requirements` hash, and may immediately
          become `past_due`, but the account may also be given a grace period depending
          on the account's enablement state prior to transition.
        items:
          type: string
        type: array
      errors:
        description: Fields that are `currently_due` and need to be collected again
          because validation or verification failed.
        items:
          $ref: '#/definitions/stripe.PersonFutureRequirementsError'
        type: array
      eventually_due:
        description: Fields that need to be collected assuming all volume thresholds
          are reached. As they become required, they appear in `currently_due` as
          well, and the account's `future_requirements[current_deadline]` becomes
          set.
        items:
          type: string
        type: array
      past_due:
        description: Fields that weren't collected by the account's `requirements.current_deadline`.
          These fields need to be collected to enable the person's account. New fields
          will never appear here; `future_requirements.past_due` will always be a
          subset of `requirements.past_due`.
        items:
          type: string
        type: array
      pending_verification:
        description: Fields that might become required depending on the results of
          verification or review. It's an empty array unless an asynchronous verification
          is pending. If verification fails, these fields move to `eventually_due`
          or `currently_due`. Fields might appear in `eventually_due` or `currently_due`
          and in `pending_verification` if verification fails but another verification
          is still pending.
        items:
          type: string
        type: array
    type: object
  stripe.PersonFutureRequirementsAlternative:
    properties:
      alternative_fields_due:
        description: Fields that can be provided to satisfy all fields in `original_fields_due`.
        items:
          type: string
        type: array
      original_fields_due:
        description: Fields that are due and can be satisfied by providing all fields
          in `alternative_fields_due`.
        items:
          type: string
        type: array
    type: object
  stripe.PersonFutureRequirementsError:
    properties:
      code:
        description: The code for the type of error.
        type: string
      reason:
        description: An informative message that indicates the error type and provides
          additional details about the error.
        type: string
      requirement:
        description: The specific user onboarding requirement field (in the requirements
          hash) that needs to be resolved.
        type: string
    type: object
  stripe.PersonPoliticalExposure:
    enum:
    - existing
    - none
    type: string
    x-enum-varnames:
    - PersonPoliticalExposureExisting
    - PersonPoliticalExposureNone
  stripe.PersonRelationship:
    properties:
      director:
        description: Whether the person is a director of the account's legal entity.
          Directors are typically members of the governing board of the company, or
          responsible for ensuring the company meets its regulatory obligations.
        type: boolean
      executive:
        description: Whether the person has significant responsibility to control,
          manage, or direct the organization.
        type: boolean
      legal_guardian:
        description: Whether the person is the legal guardian of the account's representative.
        type: boolean
      owner:
        description: Whether the person is an owner of the account's legal entity.
        type: boolean
      percent_ownership:
        description: The percent owned by the person of the account's legal entity.
        type: number
      representative:
        description: Whether the person is authorized as the primary representative
          of the account. This is the person nominated by the business to provide
          information about themselves, and general information about the account.
          There can only be one representative at any given time. At the time the
          account is created, this person should be set to the person responsible
          for opening the account.
        type: boolean
      title:
        description: The person's title (e.g., CEO, Support Engineer).
        type: string
    type: object
  stripe.PersonRequirements:
    properties:
      alternatives:
        description: Fields that are due and can be satisfied by providing the corresponding
          alternative fields instead.
        items:
          $ref: '#/definitions/stripe.PersonRequirementsAlternative'
        type: array
      currently_due:
        description: Fields that need to be collected to keep the person's account
          enabled. If not collected by the account's `current_deadline`, these fields
          appear in `past_due` as well, and the account is disabled.
        items:
          type: string
        type: array
      errors:
        description: Fields that are `currently_due` and need to be collected again
          because validation or verification failed.
        items:
          $ref: '#/definitions/stripe.AccountRequirementsError'
        type: array
      eventually_due:
        description: Fields that need to be collected assuming all volume thresholds
          are reached. As they become required, they appear in `currently_due` as
          well, and the account's `current_deadline` becomes set.
        items:
          type: string
        type: array
      past_due:
        description: Fields that weren't collected by the account's `current_deadline`.
          These fields need to be collected to enable the person's account.
        items:
          type: string
        type: array
      pending_verification:
        description: Fields that might become required depending on the results of
          verification or review. It's an empty array unless an asynchronous verification
          is pending. If verification fails, these fields move to `eventually_due`,
          `currently_due`, or `past_due`. Fields might appear in `eventually_due`,
          `currently_due`, or `past_due` and in `pending_verification` if verification
          fails but another verification is still pending.
        items:
          type: string
        type: array
    type: object
  stripe.PersonRequirementsAlternative:
    properties:
      alternative_fields_due:
        description: Fields that can be provided to satisfy all fields in `original_fields_due`.
        items:
          type: string
        type: array
      original_fields_due:
        description: Fields that are due and can be satisfied by providing all fields
          in `alternative_fields_due`.
        items:
          type: string
        type: array
    type: object
  stripe.PersonVerification:
    properties:
      additional_document:
        allOf:
        - $ref: '#/definitions/stripe.PersonVerificationDocument'
        description: A document showing address, either a passport, local ID card,
          or utility bill from a well-known utility company.
      details:
        description: A user-displayable string describing the verification state for
          the person. For example, this may say "Provided identity information could
          not be verified".
        type: string
      details_code:
        allOf:
        - $ref: '#/definitions/stripe.PersonVerificationDetailsCode'
        description: One of `document_address_mismatch`, `document_dob_mismatch`,
          `document_duplicate_type`, `document_id_number_mismatch`, `document_name_mismatch`,
          `document_nationality_mismatch`, `failed_keyed_identity`, or `failed_other`.
          A machine-readable code specifying the verification state for the person.
      document:
        $ref: '#/definitions/stripe.PersonVerificationDocument'
      status:
        allOf:
        - $ref: '#/definitions/stripe.PersonVerificationStatus'
        description: The state of verification for the person. Possible values are
          `unverified`, `pending`, or `verified`.
    type: object
  stripe.PersonVerificationDetailsCode:
    enum:
    - failed_keyed_identity
    - failed_other
    - scan_name_mismatch
    - document_address_mismatch
    - document_dob_mismatch
    - document_duplicate_type
    - document_id_number_mismatch
    - document_name_mismatch
    - document_nationality_mismatch
    type: string
    x-enum-varnames:
    - PersonVerificationDetailsCodeFailedKeyedIdentity
    - PersonVerificationDetailsCodeFailedOther
    - PersonVerificationDetailsCodeScanNameMismatch
    - PersonVerificationDetailsCodeDocumentAddressMismatch
    - PersonVerificationDetailsCodeDocumentDOBMismatch
    - PersonVerificationDetailsCodeDocumentDuplicateType
    - PersonVerificationDetailsCodeDocumentIDNumberMismatch
    - PersonVerificationDetailsCodeDocumentNameMismatch
    - PersonVerificationDetailsCodeDocumentNationalityMismatch
  stripe.PersonVerificationDocument:
    properties:
      back:
        allOf:
        - $ref: '#/definitions/stripe.File'
        description: The back of an ID returned by a [file upload](https://stripe.com/docs/api#create_file)
          with a `purpose` value of `identity_document`.
      details:
        description: A user-displayable string describing the verification state of
          this document. For example, if a document is uploaded and the picture is
          too fuzzy, this may say "Identity document is too unclear to read".
        type: string
      details_code:
        allOf:
        - $ref: '#/definitions/stripe.PersonVerificationDocumentDetailsCode'
        description: One of `document_corrupt`, `document_country_not_supported`,
          `document_expired`, `document_failed_copy`, `document_failed_other`, `document_failed_test_mode`,
          `document_fraudulent`, `document_failed_greyscale`, `document_incomplete`,
          `document_invalid`, `document_manipulated`, `document_missing_back`, `document_missing_front`,
          `document_not_readable`, `document_not_uploaded`, `document_photo_mismatch`,
          `document_too_large`, or `document_type_not_supported`. A machine-readable
          code specifying the verification state for this document.
      front:
        allOf:
        - $ref: '#/definitions/stripe.File'
        description: The front of an ID returned by a [file upload](https://stripe.com/docs/api#create_file)
          with a `purpose` value of `identity_document`.
    type: object
  stripe.PersonVerificationDocumentDetailsCode:
    enum:
    - document_corrupt
    - document_country_not_supported
    - document_expired
    - document_failed_copy
    - document_failed_other
    - document_failed_test_mode
    - document_fraudulent
    - document_id_type_not_supported
    - document_id_country_not_supported
    - document_failed_greyscale
    - document_incomplete
    - document_invalid
    - document_manipulated
    - document_missing_back
    - document_missing_front
    - document_not_readable
    - document_not_uploaded
    - document_photo_mismatch
    - document_too_large
    - document_type_not_supported
    type: string
    x-enum-varnames:
    - PersonVerificationDocumentDetailsCodeDocumentCorrupt
    - PersonVerificationDocumentDetailsCodeDocumentCountryNotSupported
    - PersonVerificationDocumentDetailsCodeDocumentExpired
    - PersonVerificationDocumentDetailsCodeDocumentFailedCopy
    - PersonVerificationDocumentDetailsCodeDocumentFailedOther
    - PersonVerificationDocumentDetailsCodeDocumentFailedTestMode
    - PersonVerificationDocumentDetailsCodeDocumentFraudulent
    - PersonVerificationDocumentDetailsCodeDocumentIDTypeNotSupported
    - PersonVerificationDocumentDetailsCodeDocumentIDCountryNotSupported
    - PersonVerificationDocumentDetailsCodeDocumentFailedGreyscale
    - PersonVerificationDocumentDetailsCodeDocumentIncomplete
    - PersonVerificationDocumentDetailsCodeDocumentInvalid
    - PersonVerificationDocumentDetailsCodeDocumentManipulated
    - PersonVerificationDocumentDetailsCodeDocumentMissingBack
    - PersonVerificationDocumentDetailsCodeDocumentMissingFront
    - PersonVerificationDocumentDetailsCodeDocumentNotReadable
    - PersonVerificationDocumentDetailsCodeDocumentNotUploaded
    - PersonVerificationDocumentDetailsCodeDocumentPhotoMismatch
    - PersonVerificationDocumentDetailsCodeDocumentTooLarge
    - PersonVerificationDocumentDetailsCodeDocumentTypeNotSupported
  stripe.PersonVerificationStatus:
    enum:
    - pending
    - unverified
    - verified
    type: string
    x-enum-varnames:
    - PersonVerificationStatusPending
    - PersonVerificationStatusUnverified
    - PersonVerificationStatusVerified
  stripe.Plan:
    properties:
      active:
        description: Whether the plan can be used for new purchases.
        type: boolean
      aggregate_usage:
        allOf:
        - $ref: '#/definitions/stripe.PlanAggregateUsage'
        description: Specifies a usage aggregation strategy for plans of `usage_type=metered`.
          Allowed values are `sum` for summing up all usage during a period, `last_during_period`
          for using the last usage record reported within a period, `last_ever` for
          using the last usage record ever (across period bounds) or `max` which uses
          the usage record with the maximum reported usage during a period. Defaults
          to `sum`.
      amount:
        description: The unit amount in cents (or local equivalent) to be charged,
          represented as a whole integer if possible. Only set if `billing_scheme=per_unit`.
        type: integer
      amount_decimal:
        description: The unit amount in cents (or local equivalent) to be charged,
          represented as a decimal string with at most 12 decimal places. Only set
          if `billing_scheme=per_unit`.
        example: "0"
        type: string
      billing_scheme:
        allOf:
        - $ref: '#/definitions/stripe.PlanBillingScheme'
        description: Describes how to compute the price per period. Either `per_unit`
          or `tiered`. `per_unit` indicates that the fixed amount (specified in `amount`)
          will be charged per unit in `quantity` (for plans with `usage_type=licensed`),
          or per unit of total usage (for plans with `usage_type=metered`). `tiered`
          indicates that the unit pricing will be computed using a tiering strategy
          as defined using the `tiers` and `tiers_mode` attributes.
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      deleted:
        type: boolean
      id:
        description: Unique identifier for the object.
        type: string
      interval:
        allOf:
        - $ref: '#/definitions/stripe.PlanInterval'
        description: The frequency at which a subscription is billed. One of `day`,
          `week`, `month` or `year`.
      interval_count:
        description: The number of intervals (specified in the `interval` attribute)
          between subscription billings. For example, `interval=month` and `interval_count=3`
          bills every 3 months.
        type: integer
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      meter:
        description: The meter tracking the usage of a metered price
        type: string
      nickname:
        description: A brief description of the plan, hidden from customers.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      product:
        allOf:
        - $ref: '#/definitions/stripe.Product'
        description: The product whose pricing this plan determines.
      tiers:
        description: Each element represents a pricing tier. This parameter requires
          `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.
        items:
          $ref: '#/definitions/stripe.PlanTier'
        type: array
      tiers_mode:
        allOf:
        - $ref: '#/definitions/stripe.PlanTiersMode'
        description: Defines if the tiering price should be `graduated` or `volume`
          based. In `volume`-based tiering, the maximum quantity within a period determines
          the per unit price. In `graduated` tiering, pricing can change as the quantity
          grows.
      transform_usage:
        allOf:
        - $ref: '#/definitions/stripe.PlanTransformUsage'
        description: Apply a transformation to the reported usage or set quantity
          before computing the amount billed. Cannot be combined with `tiers`.
      trial_period_days:
        description: Default number of trial days when subscribing a customer to this
          plan using [`trial_from_plan=true`](https://stripe.com/docs/api#create_subscription-trial_from_plan).
        type: integer
      usage_type:
        allOf:
        - $ref: '#/definitions/stripe.PlanUsageType'
        description: Configures how the quantity per period should be determined.
          Can be either `metered` or `licensed`. `licensed` automatically bills the
          `quantity` set when adding it to a subscription. `metered` aggregates the
          total usage based on usage records. Defaults to `licensed`.
    type: object
  stripe.PlanAggregateUsage:
    enum:
    - last_during_period
    - last_ever
    - max
    - sum
    type: string
    x-enum-varnames:
    - PlanAggregateUsageLastDuringPeriod
    - PlanAggregateUsageLastEver
    - PlanAggregateUsageMax
    - PlanAggregateUsageSum
  stripe.PlanBillingScheme:
    enum:
    - per_unit
    - tiered
    type: string
    x-enum-varnames:
    - PlanBillingSchemePerUnit
    - PlanBillingSchemeTiered
  stripe.PlanInterval:
    enum:
    - day
    - month
    - week
    - year
    type: string
    x-enum-varnames:
    - PlanIntervalDay
    - PlanIntervalMonth
    - PlanIntervalWeek
    - PlanIntervalYear
  stripe.PlanTier:
    properties:
      flat_amount:
        description: Price for the entire tier.
        type: integer
      flat_amount_decimal:
        description: Same as `flat_amount`, but contains a decimal value with at most
          12 decimal places.
        example: "0"
        type: string
      unit_amount:
        description: Per unit price for units relevant to the tier.
        type: integer
      unit_amount_decimal:
        description: Same as `unit_amount`, but contains a decimal value with at most
          12 decimal places.
        example: "0"
        type: string
      up_to:
        description: Up to and including to this quantity will be contained in the
          tier.
        type: integer
    type: object
  stripe.PlanTiersMode:
    enum:
    - graduated
    - volume
    type: string
    x-enum-varnames:
    - PlanTiersModeGraduated
    - PlanTiersModeVolume
  stripe.PlanTransformUsage:
    properties:
      divide_by:
        description: Divide usage by this number.
        type: integer
      round:
        allOf:
        - $ref: '#/definitions/stripe.PlanTransformUsageRound'
        description: After division, either round the result `up` or `down`.
    type: object
  stripe.PlanTransformUsageRound:
    enum:
    - down
    - up
    type: string
    x-enum-varnames:
    - PlanTransformUsageRoundDown
    - PlanTransformUsageRoundUp
  stripe.PlanUsageType:
    enum:
    - licensed
    - metered
    type: string
    x-enum-varnames:
    - PlanUsageTypeLicensed
    - PlanUsageTypeMetered
  stripe.Price:
    properties:
      active:
        description: Whether the price can be used for new purchases.
        type: boolean
      billing_scheme:
        allOf:
        - $ref: '#/definitions/stripe.PriceBillingScheme'
        description: Describes how to compute the price per period. Either `per_unit`
          or `tiered`. `per_unit` indicates that the fixed amount (specified in `unit_amount`
          or `unit_amount_decimal`) will be charged per unit in `quantity` (for prices
          with `usage_type=licensed`), or per unit of total usage (for prices with
          `usage_type=metered`). `tiered` indicates that the unit pricing will be
          computed using a tiering strategy as defined using the `tiers` and `tiers_mode`
          attributes.
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      currency_options:
        additionalProperties:
          $ref: '#/definitions/stripe.PriceCurrencyOptions'
        description: Prices defined in each available currency option. Each key must
          be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html)
          and a [supported currency](https://stripe.com/docs/currencies).
        type: object
      custom_unit_amount:
        allOf:
        - $ref: '#/definitions/stripe.PriceCustomUnitAmount'
        description: When set, provides configuration for the amount to be adjusted
          by the customer during Checkout Sessions and Payment Links.
      deleted:
        type: boolean
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      lookup_key:
        description: A lookup key used to retrieve prices dynamically from a static
          string. This may be up to 200 characters.
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      nickname:
        description: A brief description of the price, hidden from customers.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      product:
        allOf:
        - $ref: '#/definitions/stripe.Product'
        description: The ID of the product this price is associated with.
      recurring:
        allOf:
        - $ref: '#/definitions/stripe.PriceRecurring'
        description: The recurring components of a price such as `interval` and `usage_type`.
      tax_behavior:
        allOf:
        - $ref: '#/definitions/stripe.PriceTaxBehavior'
        description: Only required if a [default tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended))
          was not provided in the Stripe Tax settings. Specifies whether the price
          is considered inclusive of taxes or exclusive of taxes. One of `inclusive`,
          `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`,
          it cannot be changed.
      tiers:
        description: Each element represents a pricing tier. This parameter requires
          `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.
        items:
          $ref: '#/definitions/stripe.PriceTier'
        type: array
      tiers_mode:
        allOf:
        - $ref: '#/definitions/stripe.PriceTiersMode'
        description: Defines if the tiering price should be `graduated` or `volume`
          based. In `volume`-based tiering, the maximum quantity within a period determines
          the per unit price. In `graduated` tiering, pricing can change as the quantity
          grows.
      transform_quantity:
        allOf:
        - $ref: '#/definitions/stripe.PriceTransformQuantity'
        description: Apply a transformation to the reported usage or set quantity
          before computing the amount billed. Cannot be combined with `tiers`.
      type:
        allOf:
        - $ref: '#/definitions/stripe.PriceType'
        description: One of `one_time` or `recurring` depending on whether the price
          is for a one-time purchase or a recurring (subscription) purchase.
      unit_amount:
        description: The unit amount in cents (or local equivalent) to be charged,
          represented as a whole integer if possible. Only set if `billing_scheme=per_unit`.
        type: integer
      unit_amount_decimal:
        description: The unit amount in cents (or local equivalent) to be charged,
          represented as a decimal string with at most 12 decimal places. Only set
          if `billing_scheme=per_unit`.
        example: "0"
        type: string
    type: object
  stripe.PriceBillingScheme:
    enum:
    - per_unit
    - tiered
    type: string
    x-enum-varnames:
    - PriceBillingSchemePerUnit
    - PriceBillingSchemeTiered
  stripe.PriceCurrencyOptions:
    properties:
      custom_unit_amount:
        allOf:
        - $ref: '#/definitions/stripe.PriceCurrencyOptionsCustomUnitAmount'
        description: When set, provides configuration for the amount to be adjusted
          by the customer during Checkout Sessions and Payment Links.
      tax_behavior:
        allOf:
        - $ref: '#/definitions/stripe.PriceCurrencyOptionsTaxBehavior'
        description: Only required if a [default tax behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended))
          was not provided in the Stripe Tax settings. Specifies whether the price
          is considered inclusive of taxes or exclusive of taxes. One of `inclusive`,
          `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`,
          it cannot be changed.
      tiers:
        description: Each element represents a pricing tier. This parameter requires
          `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.
        items:
          $ref: '#/definitions/stripe.PriceCurrencyOptionsTier'
        type: array
      unit_amount:
        description: The unit amount in cents (or local equivalent) to be charged,
          represented as a whole integer if possible. Only set if `billing_scheme=per_unit`.
        type: integer
      unit_amount_decimal:
        description: The unit amount in cents (or local equivalent) to be charged,
          represented as a decimal string with at most 12 decimal places. Only set
          if `billing_scheme=per_unit`.
        example: "0"
        type: string
    type: object
  stripe.PriceCurrencyOptionsCustomUnitAmount:
    properties:
      maximum:
        description: The maximum unit amount the customer can specify for this item.
        type: integer
      minimum:
        description: The minimum unit amount the customer can specify for this item.
          Must be at least the minimum charge amount.
        type: integer
      preset:
        description: The starting unit amount which can be updated by the customer.
        type: integer
    type: object
  stripe.PriceCurrencyOptionsTaxBehavior:
    enum:
    - exclusive
    - inclusive
    - unspecified
    type: string
    x-enum-varnames:
    - PriceCurrencyOptionsTaxBehaviorExclusive
    - PriceCurrencyOptionsTaxBehaviorInclusive
    - PriceCurrencyOptionsTaxBehaviorUnspecified
  stripe.PriceCurrencyOptionsTier:
    properties:
      flat_amount:
        description: Price for the entire tier.
        type: integer
      flat_amount_decimal:
        description: Same as `flat_amount`, but contains a decimal value with at most
          12 decimal places.
        example: "0"
        type: string
      unit_amount:
        description: Per unit price for units relevant to the tier.
        type: integer
      unit_amount_decimal:
        description: Same as `unit_amount`, but contains a decimal value with at most
          12 decimal places.
        example: "0"
        type: string
      up_to:
        description: Up to and including to this quantity will be contained in the
          tier.
        type: integer
    type: object
  stripe.PriceCustomUnitAmount:
    properties:
      maximum:
        description: The maximum unit amount the customer can specify for this item.
        type: integer
      minimum:
        description: The minimum unit amount the customer can specify for this item.
          Must be at least the minimum charge amount.
        type: integer
      preset:
        description: The starting unit amount which can be updated by the customer.
        type: integer
    type: object
  stripe.PriceRecurring:
    properties:
      aggregate_usage:
        allOf:
        - $ref: '#/definitions/stripe.PriceRecurringAggregateUsage'
        description: Specifies a usage aggregation strategy for prices of `usage_type=metered`.
          Defaults to `sum`.
      interval:
        allOf:
        - $ref: '#/definitions/stripe.PriceRecurringInterval'
        description: The frequency at which a subscription is billed. One of `day`,
          `week`, `month` or `year`.
      interval_count:
        description: The number of intervals (specified in the `interval` attribute)
          between subscription billings. For example, `interval=month` and `interval_count=3`
          bills every 3 months.
        type: integer
      meter:
        description: The meter tracking the usage of a metered price
        type: string
      trial_period_days:
        description: Default number of trial days when subscribing a customer to this
          price using [`trial_from_plan=true`](https://stripe.com/docs/api#create_subscription-trial_from_plan).
        type: integer
      usage_type:
        allOf:
        - $ref: '#/definitions/stripe.PriceRecurringUsageType'
        description: Configures how the quantity per period should be determined.
          Can be either `metered` or `licensed`. `licensed` automatically bills the
          `quantity` set when adding it to a subscription. `metered` aggregates the
          total usage based on usage records. Defaults to `licensed`.
    type: object
  stripe.PriceRecurringAggregateUsage:
    enum:
    - last_during_period
    - last_ever
    - max
    - sum
    type: string
    x-enum-varnames:
    - PriceRecurringAggregateUsageLastDuringPeriod
    - PriceRecurringAggregateUsageLastEver
    - PriceRecurringAggregateUsageMax
    - PriceRecurringAggregateUsageSum
  stripe.PriceRecurringInterval:
    enum:
    - day
    - month
    - week
    - year
    type: string
    x-enum-varnames:
    - PriceRecurringIntervalDay
    - PriceRecurringIntervalMonth
    - PriceRecurringIntervalWeek
    - PriceRecurringIntervalYear
  stripe.PriceRecurringUsageType:
    enum:
    - licensed
    - metered
    type: string
    x-enum-varnames:
    - PriceRecurringUsageTypeLicensed
    - PriceRecurringUsageTypeMetered
  stripe.PriceTaxBehavior:
    enum:
    - exclusive
    - inclusive
    - unspecified
    type: string
    x-enum-varnames:
    - PriceTaxBehaviorExclusive
    - PriceTaxBehaviorInclusive
    - PriceTaxBehaviorUnspecified
  stripe.PriceTier:
    properties:
      flat_amount:
        description: Price for the entire tier.
        type: integer
      flat_amount_decimal:
        description: Same as `flat_amount`, but contains a decimal value with at most
          12 decimal places.
        example: "0"
        type: string
      unit_amount:
        description: Per unit price for units relevant to the tier.
        type: integer
      unit_amount_decimal:
        description: Same as `unit_amount`, but contains a decimal value with at most
          12 decimal places.
        example: "0"
        type: string
      up_to:
        description: Up to and including to this quantity will be contained in the
          tier.
        type: integer
    type: object
  stripe.PriceTiersMode:
    enum:
    - graduated
    - volume
    type: string
    x-enum-varnames:
    - PriceTiersModeGraduated
    - PriceTiersModeVolume
  stripe.PriceTransformQuantity:
    properties:
      divide_by:
        description: Divide usage by this number.
        type: integer
      round:
        allOf:
        - $ref: '#/definitions/stripe.PriceTransformQuantityRound'
        description: After division, either round the result `up` or `down`.
    type: object
  stripe.PriceTransformQuantityRound:
    enum:
    - down
    - up
    type: string
    x-enum-varnames:
    - PriceTransformQuantityRoundDown
    - PriceTransformQuantityRoundUp
  stripe.PriceType:
    enum:
    - one_time
    - recurring
    type: string
    x-enum-varnames:
    - PriceTypeOneTime
    - PriceTypeRecurring
  stripe.Product:
    properties:
      active:
        description: Whether the product is currently available for purchase.
        type: boolean
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      default_price:
        allOf:
        - $ref: '#/definitions/stripe.Price'
        description: The ID of the [Price](https://stripe.com/docs/api/prices) object
          that is the default price for this product.
      deleted:
        type: boolean
      description:
        description: The product's description, meant to be displayable to the customer.
          Use this field to optionally store a long form explanation of the product
          being sold for your own rendering purposes.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      images:
        description: A list of up to 8 URLs of images for this product, meant to be
          displayable to the customer.
        items:
          type: string
        type: array
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      marketing_features:
        description: A list of up to 15 marketing features for this product. These
          are displayed in [pricing tables](https://stripe.com/docs/payments/checkout/pricing-table).
        items:
          $ref: '#/definitions/stripe.ProductMarketingFeature'
        type: array
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      name:
        description: The product's name, meant to be displayable to the customer.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      package_dimensions:
        allOf:
        - $ref: '#/definitions/stripe.ProductPackageDimensions'
        description: The dimensions of this product for shipping purposes.
      shippable:
        description: Whether this product is shipped (i.e., physical goods).
        type: boolean
      statement_descriptor:
        description: Extra information about a product which will appear on your customer's
          credit card statement. In the case that multiple products are billed at
          once, the first statement descriptor will be used. Only used for subscription
          payments.
        type: string
      tax_code:
        allOf:
        - $ref: '#/definitions/stripe.TaxCode'
        description: A [tax code](https://stripe.com/docs/tax/tax-categories) ID.
      type:
        allOf:
        - $ref: '#/definitions/stripe.ProductType'
        description: The type of the product. The product is either of type `good`,
          which is eligible for use with Orders and SKUs, or `service`, which is eligible
          for use with Subscriptions and Plans.
      unit_label:
        description: A label that represents units of this product. When set, this
          will be included in customers' receipts, invoices, Checkout, and the customer
          portal.
        type: string
      updated:
        description: Time at which the object was last updated. Measured in seconds
          since the Unix epoch.
        type: integer
      url:
        description: A URL of a publicly-accessible webpage for this product.
        type: string
    type: object
  stripe.ProductMarketingFeature:
    properties:
      name:
        description: The marketing feature name. Up to 80 characters long.
        type: string
    type: object
  stripe.ProductPackageDimensions:
    properties:
      height:
        description: Height, in inches.
        type: number
      length:
        description: Length, in inches.
        type: number
      weight:
        description: Weight, in ounces.
        type: number
      width:
        description: Width, in inches.
        type: number
    type: object
  stripe.ProductType:
    enum:
    - good
    - service
    type: string
    x-enum-varnames:
    - ProductTypeGood
    - ProductTypeService
  stripe.PromotionCode:
    properties:
      active:
        description: Whether the promotion code is currently active. A promotion code
          is only active if the coupon is also valid.
        type: boolean
      code:
        description: The customer-facing code. Regardless of case, this code must
          be unique across all active promotion codes for each customer. Valid characters
          are lower case letters (a-z), upper case letters (A-Z), and digits (0-9).
        type: string
      coupon:
        allOf:
        - $ref: '#/definitions/stripe.Coupon'
        description: |-
          A coupon contains information about a percent-off or amount-off discount you
          might want to apply to a customer. Coupons may be applied to [subscriptions](https://stripe.com/docs/api#subscriptions), [invoices](https://stripe.com/docs/api#invoices),
          [checkout sessions](https://stripe.com/docs/api/checkout/sessions), [quotes](https://stripe.com/docs/api#quotes), and more. Coupons do not work with conventional one-off [charges](https://stripe.com/docs/api#create_charge) or [payment intents](https://stripe.com/docs/api/payment_intents).
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      customer:
        allOf:
        - $ref: '#/definitions/stripe.Customer'
        description: The customer that this promotion code can be used by.
      expires_at:
        description: Date at which the promotion code can no longer be redeemed.
        type: integer
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      max_redemptions:
        description: Maximum number of times this promotion code can be redeemed.
        type: integer
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      restrictions:
        $ref: '#/definitions/stripe.PromotionCodeRestrictions'
      times_redeemed:
        description: Number of times this promotion code has been used.
        type: integer
    type: object
  stripe.PromotionCodeRestrictions:
    properties:
      currency_options:
        additionalProperties:
          $ref: '#/definitions/stripe.PromotionCodeRestrictionsCurrencyOptions'
        description: Promotion code restrictions defined in each available currency
          option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html)
          and a [supported currency](https://stripe.com/docs/currencies).
        type: object
      first_time_transaction:
        description: A Boolean indicating if the Promotion Code should only be redeemed
          for Customers without any successful payments or invoices
        type: boolean
      minimum_amount:
        description: Minimum amount required to redeem this Promotion Code into a
          Coupon (e.g., a purchase must be $100 or more to work).
        type: integer
      minimum_amount_currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO code](https://stripe.com/docs/currencies) for
          minimum_amount
    type: object
  stripe.PromotionCodeRestrictionsCurrencyOptions:
    properties:
      minimum_amount:
        description: Minimum amount required to redeem this Promotion Code into a
          Coupon (e.g., a purchase must be $100 or more to work).
        type: integer
    type: object
  stripe.Quote:
    properties:
      amount_subtotal:
        description: Total before any discounts or taxes are applied.
        type: integer
      amount_total:
        description: Total after discounts and taxes are applied.
        type: integer
      application:
        allOf:
        - $ref: '#/definitions/stripe.Application'
        description: ID of the Connect Application that created the quote.
      application_fee_amount:
        description: The amount of the application fee (if any) that will be requested
          to be applied to the payment and transferred to the application owner's
          Stripe account. Only applicable if there are no line items with recurring
          prices on the quote.
        type: integer
      application_fee_percent:
        description: A non-negative decimal between 0 and 100, with at most two decimal
          places. This represents the percentage of the subscription invoice total
          that will be transferred to the application owner's Stripe account. Only
          applicable if there are line items with recurring prices on the quote.
        type: number
      automatic_tax:
        $ref: '#/definitions/stripe.QuoteAutomaticTax'
      collection_method:
        allOf:
        - $ref: '#/definitions/stripe.QuoteCollectionMethod'
        description: Either `charge_automatically`, or `send_invoice`. When charging
          automatically, Stripe will attempt to pay invoices at the end of the subscription
          cycle or on finalization using the default payment method attached to the
          subscription or customer. When sending an invoice, Stripe will email your
          customer an invoice with payment instructions and mark the subscription
          as `active`. Defaults to `charge_automatically`.
      computed:
        $ref: '#/definitions/stripe.QuoteComputed'
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      customer:
        allOf:
        - $ref: '#/definitions/stripe.Customer'
        description: The customer which this quote belongs to. A customer is required
          before finalizing the quote. Once specified, it cannot be changed.
      default_tax_rates:
        description: The tax rates applied to this quote.
        items:
          $ref: '#/definitions/stripe.TaxRate'
        type: array
      description:
        description: A description that will be displayed on the quote PDF.
        type: string
      discounts:
        description: The discounts applied to this quote.
        items:
          $ref: '#/definitions/stripe.Discount'
        type: array
      expires_at:
        description: The date on which the quote will be canceled if in `open` or
          `draft` status. Measured in seconds since the Unix epoch.
        type: integer
      footer:
        description: A footer that will be displayed on the quote PDF.
        type: string
      from_quote:
        allOf:
        - $ref: '#/definitions/stripe.QuoteFromQuote'
        description: Details of the quote that was cloned. See the [cloning documentation](https://stripe.com/docs/quotes/clone)
          for more details.
      header:
        description: A header that will be displayed on the quote PDF.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      invoice:
        allOf:
        - $ref: '#/definitions/stripe.Invoice'
        description: The invoice that was created from this quote.
      invoice_settings:
        $ref: '#/definitions/stripe.QuoteInvoiceSettings'
      line_items:
        allOf:
        - $ref: '#/definitions/stripe.LineItemList'
        description: A list of items the customer is being quoted for.
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      number:
        description: A unique number that identifies this particular quote. This number
          is assigned once the quote is [finalized](https://stripe.com/docs/quotes/overview#finalize).
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      on_behalf_of:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The account on behalf of which to charge. See the [Connect documentation](https://support.stripe.com/questions/sending-invoices-on-behalf-of-connected-accounts)
          for details.
      status:
        allOf:
        - $ref: '#/definitions/stripe.QuoteStatus'
        description: The status of the quote.
      status_transitions:
        $ref: '#/definitions/stripe.QuoteStatusTransitions'
      subscription:
        allOf:
        - $ref: '#/definitions/stripe.Subscription'
        description: The subscription that was created or updated from this quote.
      subscription_data:
        $ref: '#/definitions/stripe.QuoteSubscriptionData'
      subscription_schedule:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionSchedule'
        description: The subscription schedule that was created or updated from this
          quote.
      test_clock:
        allOf:
        - $ref: '#/definitions/stripe.TestHelpersTestClock'
        description: ID of the test clock this quote belongs to.
      total_details:
        $ref: '#/definitions/stripe.QuoteTotalDetails'
      transfer_data:
        allOf:
        - $ref: '#/definitions/stripe.QuoteTransferData'
        description: The account (if any) the payments will be attributed to for tax
          reporting, and where funds from each payment will be transferred to for
          each of the invoices.
    type: object
  stripe.QuoteAutomaticTax:
    properties:
      enabled:
        description: Automatically calculate taxes
        type: boolean
      liability:
        allOf:
        - $ref: '#/definitions/stripe.QuoteAutomaticTaxLiability'
        description: The account that's liable for tax. If set, the business address
          and tax registrations required to perform the tax calculation are loaded
          from this account. The tax transaction is returned in the report of the
          connected account.
      status:
        allOf:
        - $ref: '#/definitions/stripe.QuoteAutomaticTaxStatus'
        description: The status of the most recent automated tax calculation for this
          quote.
    type: object
  stripe.QuoteAutomaticTaxLiability:
    properties:
      account:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The connected account being referenced when `type` is `account`.
      type:
        allOf:
        - $ref: '#/definitions/stripe.QuoteAutomaticTaxLiabilityType'
        description: Type of the account referenced.
    type: object
  stripe.QuoteAutomaticTaxLiabilityType:
    enum:
    - account
    - self
    type: string
    x-enum-varnames:
    - QuoteAutomaticTaxLiabilityTypeAccount
    - QuoteAutomaticTaxLiabilityTypeSelf
  stripe.QuoteAutomaticTaxStatus:
    enum:
    - complete
    - failed
    - requires_location_inputs
    type: string
    x-enum-varnames:
    - QuoteAutomaticTaxStatusComplete
    - QuoteAutomaticTaxStatusFailed
    - QuoteAutomaticTaxStatusRequiresLocationInputs
  stripe.QuoteCollectionMethod:
    enum:
    - charge_automatically
    - send_invoice
    type: string
    x-enum-varnames:
    - QuoteCollectionMethodChargeAutomatically
    - QuoteCollectionMethodSendInvoice
  stripe.QuoteComputed:
    properties:
      recurring:
        allOf:
        - $ref: '#/definitions/stripe.QuoteComputedRecurring'
        description: The definitive totals and line items the customer will be charged
          on a recurring basis. Takes into account the line items with recurring prices
          and discounts with `duration=forever` coupons only. Defaults to `null` if
          no inputted line items with recurring prices.
      upfront:
        $ref: '#/definitions/stripe.QuoteComputedUpfront'
    type: object
  stripe.QuoteComputedRecurring:
    properties:
      amount_subtotal:
        description: Total before any discounts or taxes are applied.
        type: integer
      amount_total:
        description: Total after discounts and taxes are applied.
        type: integer
      interval:
        allOf:
        - $ref: '#/definitions/stripe.QuoteComputedRecurringInterval'
        description: The frequency at which a subscription is billed. One of `day`,
          `week`, `month` or `year`.
      interval_count:
        description: The number of intervals (specified in the `interval` attribute)
          between subscription billings. For example, `interval=month` and `interval_count=3`
          bills every 3 months.
        type: integer
      total_details:
        $ref: '#/definitions/stripe.QuoteComputedRecurringTotalDetails'
    type: object
  stripe.QuoteComputedRecurringInterval:
    enum:
    - day
    - month
    - week
    - year
    type: string
    x-enum-varnames:
    - QuoteComputedRecurringIntervalDay
    - QuoteComputedRecurringIntervalMonth
    - QuoteComputedRecurringIntervalWeek
    - QuoteComputedRecurringIntervalYear
  stripe.QuoteComputedRecurringTotalDetails:
    properties:
      amount_discount:
        description: This is the sum of all the discounts.
        type: integer
      amount_shipping:
        description: This is the sum of all the shipping amounts.
        type: integer
      amount_tax:
        description: This is the sum of all the tax amounts.
        type: integer
      breakdown:
        $ref: '#/definitions/stripe.QuoteComputedRecurringTotalDetailsBreakdown'
    type: object
  stripe.QuoteComputedRecurringTotalDetailsBreakdown:
    properties:
      discounts:
        description: The aggregated discounts.
        items:
          $ref: '#/definitions/stripe.QuoteComputedRecurringTotalDetailsBreakdownDiscount'
        type: array
      taxes:
        description: The aggregated tax amounts by rate.
        items:
          $ref: '#/definitions/stripe.QuoteComputedRecurringTotalDetailsBreakdownTax'
        type: array
    type: object
  stripe.QuoteComputedRecurringTotalDetailsBreakdownDiscount:
    properties:
      amount:
        description: The amount discounted.
        type: integer
      discount:
        allOf:
        - $ref: '#/definitions/stripe.Discount'
        description: |-
          A discount represents the actual application of a [coupon](https://stripe.com/docs/api#coupons) or [promotion code](https://stripe.com/docs/api#promotion_codes).
          It contains information about when the discount began, when it will end, and what it is applied to.

          Related guide: [Applying discounts to subscriptions](https://stripe.com/docs/billing/subscriptions/discounts)
    type: object
  stripe.QuoteComputedRecurringTotalDetailsBreakdownTax:
    properties:
      amount:
        description: Amount of tax applied for this rate.
        type: integer
      rate:
        allOf:
        - $ref: '#/definitions/stripe.TaxRate'
        description: |-
          Tax rates can be applied to [invoices](https://stripe.com/docs/billing/invoices/tax-rates), [subscriptions](https://stripe.com/docs/billing/subscriptions/taxes) and [Checkout Sessions](https://stripe.com/docs/payments/checkout/set-up-a-subscription#tax-rates) to collect tax.

          Related guide: [Tax rates](https://stripe.com/docs/billing/taxes/tax-rates)
      taxability_reason:
        allOf:
        - $ref: '#/definitions/stripe.QuoteComputedRecurringTotalDetailsBreakdownTaxTaxabilityReason'
        description: The reasoning behind this tax, for example, if the product is
          tax exempt. The possible values for this field may be extended as new tax
          rules are supported.
      taxable_amount:
        description: The amount on which tax is calculated, in cents (or local equivalent).
        type: integer
    type: object
  stripe.QuoteComputedRecurringTotalDetailsBreakdownTaxTaxabilityReason:
    enum:
    - customer_exempt
    - not_collecting
    - not_subject_to_tax
    - not_supported
    - portion_product_exempt
    - portion_reduced_rated
    - portion_standard_rated
    - product_exempt
    - product_exempt_holiday
    - proportionally_rated
    - reduced_rated
    - reverse_charge
    - standard_rated
    - taxable_basis_reduced
    - zero_rated
    type: string
    x-enum-varnames:
    - QuoteComputedRecurringTotalDetailsBreakdownTaxTaxabilityReasonCustomerExempt
    - QuoteComputedRecurringTotalDetailsBreakdownTaxTaxabilityReasonNotCollecting
    - QuoteComputedRecurringTotalDetailsBreakdownTaxTaxabilityReasonNotSubjectToTax
    - QuoteComputedRecurringTotalDetailsBreakdownTaxTaxabilityReasonNotSupported
    - QuoteComputedRecurringTotalDetailsBreakdownTaxTaxabilityReasonPortionProductExempt
    - QuoteComputedRecurringTotalDetailsBreakdownTaxTaxabilityReasonPortionReducedRated
    - QuoteComputedRecurringTotalDetailsBreakdownTaxTaxabilityReasonPortionStandardRated
    - QuoteComputedRecurringTotalDetailsBreakdownTaxTaxabilityReasonProductExempt
    - QuoteComputedRecurringTotalDetailsBreakdownTaxTaxabilityReasonProductExemptHoliday
    - QuoteComputedRecurringTotalDetailsBreakdownTaxTaxabilityReasonProportionallyRated
    - QuoteComputedRecurringTotalDetailsBreakdownTaxTaxabilityReasonReducedRated
    - QuoteComputedRecurringTotalDetailsBreakdownTaxTaxabilityReasonReverseCharge
    - QuoteComputedRecurringTotalDetailsBreakdownTaxTaxabilityReasonStandardRated
    - QuoteComputedRecurringTotalDetailsBreakdownTaxTaxabilityReasonTaxableBasisReduced
    - QuoteComputedRecurringTotalDetailsBreakdownTaxTaxabilityReasonZeroRated
  stripe.QuoteComputedUpfront:
    properties:
      amount_subtotal:
        description: Total before any discounts or taxes are applied.
        type: integer
      amount_total:
        description: Total after discounts and taxes are applied.
        type: integer
      line_items:
        allOf:
        - $ref: '#/definitions/stripe.LineItemList'
        description: The line items that will appear on the next invoice after this
          quote is accepted. This does not include pending invoice items that exist
          on the customer but may still be included in the next invoice.
      total_details:
        $ref: '#/definitions/stripe.QuoteComputedUpfrontTotalDetails'
    type: object
  stripe.QuoteComputedUpfrontTotalDetails:
    properties:
      amount_discount:
        description: This is the sum of all the discounts.
        type: integer
      amount_shipping:
        description: This is the sum of all the shipping amounts.
        type: integer
      amount_tax:
        description: This is the sum of all the tax amounts.
        type: integer
      breakdown:
        $ref: '#/definitions/stripe.QuoteComputedUpfrontTotalDetailsBreakdown'
    type: object
  stripe.QuoteComputedUpfrontTotalDetailsBreakdown:
    properties:
      discounts:
        description: The aggregated discounts.
        items:
          $ref: '#/definitions/stripe.QuoteComputedUpfrontTotalDetailsBreakdownDiscount'
        type: array
      taxes:
        description: The aggregated tax amounts by rate.
        items:
          $ref: '#/definitions/stripe.QuoteComputedUpfrontTotalDetailsBreakdownTax'
        type: array
    type: object
  stripe.QuoteComputedUpfrontTotalDetailsBreakdownDiscount:
    properties:
      amount:
        description: The amount discounted.
        type: integer
      discount:
        allOf:
        - $ref: '#/definitions/stripe.Discount'
        description: |-
          A discount represents the actual application of a [coupon](https://stripe.com/docs/api#coupons) or [promotion code](https://stripe.com/docs/api#promotion_codes).
          It contains information about when the discount began, when it will end, and what it is applied to.

          Related guide: [Applying discounts to subscriptions](https://stripe.com/docs/billing/subscriptions/discounts)
    type: object
  stripe.QuoteComputedUpfrontTotalDetailsBreakdownTax:
    properties:
      amount:
        description: Amount of tax applied for this rate.
        type: integer
      rate:
        allOf:
        - $ref: '#/definitions/stripe.TaxRate'
        description: |-
          Tax rates can be applied to [invoices](https://stripe.com/docs/billing/invoices/tax-rates), [subscriptions](https://stripe.com/docs/billing/subscriptions/taxes) and [Checkout Sessions](https://stripe.com/docs/payments/checkout/set-up-a-subscription#tax-rates) to collect tax.

          Related guide: [Tax rates](https://stripe.com/docs/billing/taxes/tax-rates)
      taxability_reason:
        allOf:
        - $ref: '#/definitions/stripe.QuoteComputedUpfrontTotalDetailsBreakdownTaxTaxabilityReason'
        description: The reasoning behind this tax, for example, if the product is
          tax exempt. The possible values for this field may be extended as new tax
          rules are supported.
      taxable_amount:
        description: The amount on which tax is calculated, in cents (or local equivalent).
        type: integer
    type: object
  stripe.QuoteComputedUpfrontTotalDetailsBreakdownTaxTaxabilityReason:
    enum:
    - customer_exempt
    - not_collecting
    - not_subject_to_tax
    - not_supported
    - portion_product_exempt
    - portion_reduced_rated
    - portion_standard_rated
    - product_exempt
    - product_exempt_holiday
    - proportionally_rated
    - reduced_rated
    - reverse_charge
    - standard_rated
    - taxable_basis_reduced
    - zero_rated
    type: string
    x-enum-varnames:
    - QuoteComputedUpfrontTotalDetailsBreakdownTaxTaxabilityReasonCustomerExempt
    - QuoteComputedUpfrontTotalDetailsBreakdownTaxTaxabilityReasonNotCollecting
    - QuoteComputedUpfrontTotalDetailsBreakdownTaxTaxabilityReasonNotSubjectToTax
    - QuoteComputedUpfrontTotalDetailsBreakdownTaxTaxabilityReasonNotSupported
    - QuoteComputedUpfrontTotalDetailsBreakdownTaxTaxabilityReasonPortionProductExempt
    - QuoteComputedUpfrontTotalDetailsBreakdownTaxTaxabilityReasonPortionReducedRated
    - QuoteComputedUpfrontTotalDetailsBreakdownTaxTaxabilityReasonPortionStandardRated
    - QuoteComputedUpfrontTotalDetailsBreakdownTaxTaxabilityReasonProductExempt
    - QuoteComputedUpfrontTotalDetailsBreakdownTaxTaxabilityReasonProductExemptHoliday
    - QuoteComputedUpfrontTotalDetailsBreakdownTaxTaxabilityReasonProportionallyRated
    - QuoteComputedUpfrontTotalDetailsBreakdownTaxTaxabilityReasonReducedRated
    - QuoteComputedUpfrontTotalDetailsBreakdownTaxTaxabilityReasonReverseCharge
    - QuoteComputedUpfrontTotalDetailsBreakdownTaxTaxabilityReasonStandardRated
    - QuoteComputedUpfrontTotalDetailsBreakdownTaxTaxabilityReasonTaxableBasisReduced
    - QuoteComputedUpfrontTotalDetailsBreakdownTaxTaxabilityReasonZeroRated
  stripe.QuoteFromQuote:
    properties:
      is_revision:
        description: Whether this quote is a revision of a different quote.
        type: boolean
      quote:
        allOf:
        - $ref: '#/definitions/stripe.Quote'
        description: The quote that was cloned.
    type: object
  stripe.QuoteInvoiceSettings:
    properties:
      days_until_due:
        description: Number of days within which a customer must pay invoices generated
          by this quote. This value will be `null` for quotes where `collection_method=charge_automatically`.
        type: integer
      issuer:
        $ref: '#/definitions/stripe.QuoteInvoiceSettingsIssuer'
    type: object
  stripe.QuoteInvoiceSettingsIssuer:
    properties:
      account:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The connected account being referenced when `type` is `account`.
      type:
        allOf:
        - $ref: '#/definitions/stripe.QuoteInvoiceSettingsIssuerType'
        description: Type of the account referenced.
    type: object
  stripe.QuoteInvoiceSettingsIssuerType:
    enum:
    - account
    - self
    type: string
    x-enum-varnames:
    - QuoteInvoiceSettingsIssuerTypeAccount
    - QuoteInvoiceSettingsIssuerTypeSelf
  stripe.QuoteStatus:
    enum:
    - accepted
    - canceled
    - draft
    - open
    type: string
    x-enum-varnames:
    - QuoteStatusAccepted
    - QuoteStatusCanceled
    - QuoteStatusDraft
    - QuoteStatusOpen
  stripe.QuoteStatusTransitions:
    properties:
      accepted_at:
        description: The time that the quote was accepted. Measured in seconds since
          Unix epoch.
        type: integer
      canceled_at:
        description: The time that the quote was canceled. Measured in seconds since
          Unix epoch.
        type: integer
      finalized_at:
        description: The time that the quote was finalized. Measured in seconds since
          Unix epoch.
        type: integer
    type: object
  stripe.QuoteSubscriptionData:
    properties:
      description:
        description: The subscription's description, meant to be displayable to the
          customer. Use this field to optionally store an explanation of the subscription
          for rendering in Stripe surfaces and certain local payment methods UIs.
        type: string
      effective_date:
        description: When creating a new subscription, the date of which the subscription
          schedule will start after the quote is accepted. This date is ignored if
          it is in the past when the quote is accepted. Measured in seconds since
          the Unix epoch.
        type: integer
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that will set metadata on the subscription or subscription schedule when
          the quote is accepted. If a recurring price is included in `line_items`,
          this field will be passed to the resulting subscription's `metadata` field.
          If `subscription_data.effective_date` is used, this field will be passed
          to the resulting subscription schedule's `phases.metadata` field. Unlike
          object-level metadata, this field is declarative. Updates will clear prior
          values.
        type: object
      trial_period_days:
        description: Integer representing the number of trial period days before the
          customer is charged for the first time.
        type: integer
    type: object
  stripe.QuoteTotalDetails:
    properties:
      amount_discount:
        description: This is the sum of all the discounts.
        type: integer
      amount_shipping:
        description: This is the sum of all the shipping amounts.
        type: integer
      amount_tax:
        description: This is the sum of all the tax amounts.
        type: integer
      breakdown:
        $ref: '#/definitions/stripe.QuoteTotalDetailsBreakdown'
    type: object
  stripe.QuoteTotalDetailsBreakdown:
    properties:
      discounts:
        description: The aggregated discounts.
        items:
          $ref: '#/definitions/stripe.QuoteTotalDetailsBreakdownDiscount'
        type: array
      taxes:
        description: The aggregated tax amounts by rate.
        items:
          $ref: '#/definitions/stripe.QuoteTotalDetailsBreakdownTax'
        type: array
    type: object
  stripe.QuoteTotalDetailsBreakdownDiscount:
    properties:
      amount:
        description: The amount discounted.
        type: integer
      discount:
        allOf:
        - $ref: '#/definitions/stripe.Discount'
        description: |-
          A discount represents the actual application of a [coupon](https://stripe.com/docs/api#coupons) or [promotion code](https://stripe.com/docs/api#promotion_codes).
          It contains information about when the discount began, when it will end, and what it is applied to.

          Related guide: [Applying discounts to subscriptions](https://stripe.com/docs/billing/subscriptions/discounts)
    type: object
  stripe.QuoteTotalDetailsBreakdownTax:
    properties:
      amount:
        description: Amount of tax applied for this rate.
        type: integer
      rate:
        allOf:
        - $ref: '#/definitions/stripe.TaxRate'
        description: |-
          Tax rates can be applied to [invoices](https://stripe.com/docs/billing/invoices/tax-rates), [subscriptions](https://stripe.com/docs/billing/subscriptions/taxes) and [Checkout Sessions](https://stripe.com/docs/payments/checkout/set-up-a-subscription#tax-rates) to collect tax.

          Related guide: [Tax rates](https://stripe.com/docs/billing/taxes/tax-rates)
      taxability_reason:
        allOf:
        - $ref: '#/definitions/stripe.QuoteTotalDetailsBreakdownTaxTaxabilityReason'
        description: The reasoning behind this tax, for example, if the product is
          tax exempt. The possible values for this field may be extended as new tax
          rules are supported.
      taxable_amount:
        description: The amount on which tax is calculated, in cents (or local equivalent).
        type: integer
    type: object
  stripe.QuoteTotalDetailsBreakdownTaxTaxabilityReason:
    enum:
    - customer_exempt
    - not_collecting
    - not_subject_to_tax
    - not_supported
    - portion_product_exempt
    - portion_reduced_rated
    - portion_standard_rated
    - product_exempt
    - product_exempt_holiday
    - proportionally_rated
    - reduced_rated
    - reverse_charge
    - standard_rated
    - taxable_basis_reduced
    - zero_rated
    type: string
    x-enum-varnames:
    - QuoteTotalDetailsBreakdownTaxTaxabilityReasonCustomerExempt
    - QuoteTotalDetailsBreakdownTaxTaxabilityReasonNotCollecting
    - QuoteTotalDetailsBreakdownTaxTaxabilityReasonNotSubjectToTax
    - QuoteTotalDetailsBreakdownTaxTaxabilityReasonNotSupported
    - QuoteTotalDetailsBreakdownTaxTaxabilityReasonPortionProductExempt
    - QuoteTotalDetailsBreakdownTaxTaxabilityReasonPortionReducedRated
    - QuoteTotalDetailsBreakdownTaxTaxabilityReasonPortionStandardRated
    - QuoteTotalDetailsBreakdownTaxTaxabilityReasonProductExempt
    - QuoteTotalDetailsBreakdownTaxTaxabilityReasonProductExemptHoliday
    - QuoteTotalDetailsBreakdownTaxTaxabilityReasonProportionallyRated
    - QuoteTotalDetailsBreakdownTaxTaxabilityReasonReducedRated
    - QuoteTotalDetailsBreakdownTaxTaxabilityReasonReverseCharge
    - QuoteTotalDetailsBreakdownTaxTaxabilityReasonStandardRated
    - QuoteTotalDetailsBreakdownTaxTaxabilityReasonTaxableBasisReduced
    - QuoteTotalDetailsBreakdownTaxTaxabilityReasonZeroRated
  stripe.QuoteTransferData:
    properties:
      amount:
        description: The amount in cents (or local equivalent) that will be transferred
          to the destination account when the invoice is paid. By default, the entire
          amount is transferred to the destination.
        type: integer
      amount_percent:
        description: A non-negative decimal between 0 and 100, with at most two decimal
          places. This represents the percentage of the subscription invoice total
          that will be transferred to the destination account. By default, the entire
          amount will be transferred to the destination.
        type: number
      destination:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The account where funds from the payment will be transferred
          to upon payment success.
    type: object
  stripe.Refund:
    properties:
      amount:
        description: Amount, in cents (or local equivalent).
        type: integer
      balance_transaction:
        allOf:
        - $ref: '#/definitions/stripe.BalanceTransaction'
        description: Balance transaction that describes the impact on your account
          balance.
      charge:
        allOf:
        - $ref: '#/definitions/stripe.Charge'
        description: ID of the charge that's refunded.
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      description:
        description: An arbitrary string attached to the object. You can use this
          for displaying to users (available on non-card refunds only).
        type: string
      destination_details:
        $ref: '#/definitions/stripe.RefundDestinationDetails'
      failure_balance_transaction:
        allOf:
        - $ref: '#/definitions/stripe.BalanceTransaction'
        description: After the refund fails, this balance transaction describes the
          adjustment made on your account balance that reverses the initial balance
          transaction.
      failure_reason:
        allOf:
        - $ref: '#/definitions/stripe.RefundFailureReason'
        description: 'Provides the reason for the refund failure. Possible values
          are: `lost_or_stolen_card`, `expired_or_canceled_card`, `charge_for_pending_refund_disputed`,
          `insufficient_funds`, `declined`, `merchant_request`, or `unknown`.'
      id:
        description: Unique identifier for the object.
        type: string
      instructions_email:
        description: For payment methods without native refund support (for example,
          Konbini, PromptPay), provide an email address for the customer to receive
          refund instructions.
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      next_action:
        $ref: '#/definitions/stripe.RefundNextAction'
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      payment_intent:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntent'
        description: ID of the PaymentIntent that's refunded.
      reason:
        allOf:
        - $ref: '#/definitions/stripe.RefundReason'
        description: Reason for the refund, which is either user-provided (`duplicate`,
          `fraudulent`, or `requested_by_customer`) or generated by Stripe internally
          (`expired_uncaptured_charge`).
      receipt_number:
        description: This is the transaction number that appears on email receipts
          sent for this refund.
        type: string
      source_transfer_reversal:
        allOf:
        - $ref: '#/definitions/stripe.TransferReversal'
        description: The transfer reversal that's associated with the refund. Only
          present if the charge came from another Stripe account.
      status:
        allOf:
        - $ref: '#/definitions/stripe.RefundStatus'
        description: Status of the refund. This can be `pending`, `requires_action`,
          `succeeded`, `failed`, or `canceled`. Learn more about [failed refunds](https://stripe.com/docs/refunds#failed-refunds).
      transfer_reversal:
        allOf:
        - $ref: '#/definitions/stripe.TransferReversal'
        description: This refers to the transfer reversal object if the accompanying
          transfer reverses. This is only applicable if the charge was created using
          the destination parameter.
    type: object
  stripe.RefundDestinationDetails:
    properties:
      affirm:
        $ref: '#/definitions/stripe.RefundDestinationDetailsAffirm'
      afterpay_clearpay:
        $ref: '#/definitions/stripe.RefundDestinationDetailsAfterpayClearpay'
      alipay:
        $ref: '#/definitions/stripe.RefundDestinationDetailsAlipay'
      alma:
        $ref: '#/definitions/stripe.RefundDestinationDetailsAlma'
      amazon_pay:
        $ref: '#/definitions/stripe.RefundDestinationDetailsAmazonPay'
      au_bank_transfer:
        $ref: '#/definitions/stripe.RefundDestinationDetailsAuBankTransfer'
      blik:
        $ref: '#/definitions/stripe.RefundDestinationDetailsBLIK'
      br_bank_transfer:
        $ref: '#/definitions/stripe.RefundDestinationDetailsBrBankTransfer'
      card:
        $ref: '#/definitions/stripe.RefundDestinationDetailsCard'
      cashapp:
        $ref: '#/definitions/stripe.RefundDestinationDetailsCashApp'
      customer_cash_balance:
        $ref: '#/definitions/stripe.RefundDestinationDetailsCustomerCashBalance'
      eps:
        $ref: '#/definitions/stripe.RefundDestinationDetailsEPS'
      eu_bank_transfer:
        $ref: '#/definitions/stripe.RefundDestinationDetailsEUBankTransfer'
      gb_bank_transfer:
        $ref: '#/definitions/stripe.RefundDestinationDetailsGBBankTransfer'
      giropay:
        $ref: '#/definitions/stripe.RefundDestinationDetailsGiropay'
      grabpay:
        $ref: '#/definitions/stripe.RefundDestinationDetailsGrabpay'
      jp_bank_transfer:
        $ref: '#/definitions/stripe.RefundDestinationDetailsJPBankTransfer'
      klarna:
        $ref: '#/definitions/stripe.RefundDestinationDetailsKlarna'
      multibanco:
        $ref: '#/definitions/stripe.RefundDestinationDetailsMultibanco'
      mx_bank_transfer:
        $ref: '#/definitions/stripe.RefundDestinationDetailsMXBankTransfer'
      p24:
        $ref: '#/definitions/stripe.RefundDestinationDetailsP24'
      paynow:
        $ref: '#/definitions/stripe.RefundDestinationDetailsPayNow'
      paypal:
        $ref: '#/definitions/stripe.RefundDestinationDetailsPaypal'
      pix:
        $ref: '#/definitions/stripe.RefundDestinationDetailsPix'
      revolut:
        $ref: '#/definitions/stripe.RefundDestinationDetailsRevolut'
      sofort:
        $ref: '#/definitions/stripe.RefundDestinationDetailsSofort'
      swish:
        $ref: '#/definitions/stripe.RefundDestinationDetailsSwish'
      th_bank_transfer:
        $ref: '#/definitions/stripe.RefundDestinationDetailsTHBankTransfer'
      type:
        description: The type of transaction-specific details of the payment method
          used in the refund (e.g., `card`). An additional hash is included on `destination_details`
          with a name matching this value. It contains information specific to the
          refund transaction.
        type: string
      us_bank_transfer:
        $ref: '#/definitions/stripe.RefundDestinationDetailsUSBankTransfer'
      wechat_pay:
        $ref: '#/definitions/stripe.RefundDestinationDetailsWeChatPay'
      zip:
        $ref: '#/definitions/stripe.RefundDestinationDetailsZip'
    type: object
  stripe.RefundDestinationDetailsAffirm:
    type: object
  stripe.RefundDestinationDetailsAfterpayClearpay:
    type: object
  stripe.RefundDestinationDetailsAlipay:
    type: object
  stripe.RefundDestinationDetailsAlma:
    type: object
  stripe.RefundDestinationDetailsAmazonPay:
    type: object
  stripe.RefundDestinationDetailsAuBankTransfer:
    type: object
  stripe.RefundDestinationDetailsBLIK:
    properties:
      reference:
        description: The reference assigned to the refund.
        type: string
      reference_status:
        description: Status of the reference on the refund. This can be `pending`,
          `available` or `unavailable`.
        type: string
    type: object
  stripe.RefundDestinationDetailsBrBankTransfer:
    properties:
      reference:
        description: The reference assigned to the refund.
        type: string
      reference_status:
        description: Status of the reference on the refund. This can be `pending`,
          `available` or `unavailable`.
        type: string
    type: object
  stripe.RefundDestinationDetailsCard:
    properties:
      reference:
        description: Value of the reference number assigned to the refund.
        type: string
      reference_status:
        description: Status of the reference number on the refund. This can be `pending`,
          `available` or `unavailable`.
        type: string
      reference_type:
        description: Type of the reference number assigned to the refund.
        type: string
      type:
        allOf:
        - $ref: '#/definitions/stripe.RefundDestinationDetailsCardType'
        description: The type of refund. This can be `refund`, `reversal`, or `pending`.
    type: object
  stripe.RefundDestinationDetailsCardType:
    enum:
    - pending
    - refund
    - reversal
    type: string
    x-enum-varnames:
    - RefundDestinationDetailsCardTypePending
    - RefundDestinationDetailsCardTypeRefund
    - RefundDestinationDetailsCardTypeReversal
  stripe.RefundDestinationDetailsCashApp:
    type: object
  stripe.RefundDestinationDetailsCustomerCashBalance:
    type: object
  stripe.RefundDestinationDetailsEPS:
    type: object
  stripe.RefundDestinationDetailsEUBankTransfer:
    properties:
      reference:
        description: The reference assigned to the refund.
        type: string
      reference_status:
        description: Status of the reference on the refund. This can be `pending`,
          `available` or `unavailable`.
        type: string
    type: object
  stripe.RefundDestinationDetailsGBBankTransfer:
    properties:
      reference:
        description: The reference assigned to the refund.
        type: string
      reference_status:
        description: Status of the reference on the refund. This can be `pending`,
          `available` or `unavailable`.
        type: string
    type: object
  stripe.RefundDestinationDetailsGiropay:
    type: object
  stripe.RefundDestinationDetailsGrabpay:
    type: object
  stripe.RefundDestinationDetailsJPBankTransfer:
    properties:
      reference:
        description: The reference assigned to the refund.
        type: string
      reference_status:
        description: Status of the reference on the refund. This can be `pending`,
          `available` or `unavailable`.
        type: string
    type: object
  stripe.RefundDestinationDetailsKlarna:
    type: object
  stripe.RefundDestinationDetailsMXBankTransfer:
    properties:
      reference:
        description: The reference assigned to the refund.
        type: string
      reference_status:
        description: Status of the reference on the refund. This can be `pending`,
          `available` or `unavailable`.
        type: string
    type: object
  stripe.RefundDestinationDetailsMultibanco:
    properties:
      reference:
        description: The reference assigned to the refund.
        type: string
      reference_status:
        description: Status of the reference on the refund. This can be `pending`,
          `available` or `unavailable`.
        type: string
    type: object
  stripe.RefundDestinationDetailsP24:
    properties:
      reference:
        description: The reference assigned to the refund.
        type: string
      reference_status:
        description: Status of the reference on the refund. This can be `pending`,
          `available` or `unavailable`.
        type: string
    type: object
  stripe.RefundDestinationDetailsPayNow:
    type: object
  stripe.RefundDestinationDetailsPaypal:
    type: object
  stripe.RefundDestinationDetailsPix:
    type: object
  stripe.RefundDestinationDetailsRevolut:
    type: object
  stripe.RefundDestinationDetailsSofort:
    type: object
  stripe.RefundDestinationDetailsSwish:
    properties:
      reference:
        description: The reference assigned to the refund.
        type: string
      reference_status:
        description: Status of the reference on the refund. This can be `pending`,
          `available` or `unavailable`.
        type: string
    type: object
  stripe.RefundDestinationDetailsTHBankTransfer:
    properties:
      reference:
        description: The reference assigned to the refund.
        type: string
      reference_status:
        description: Status of the reference on the refund. This can be `pending`,
          `available` or `unavailable`.
        type: string
    type: object
  stripe.RefundDestinationDetailsUSBankTransfer:
    properties:
      reference:
        description: The reference assigned to the refund.
        type: string
      reference_status:
        description: Status of the reference on the refund. This can be `pending`,
          `available` or `unavailable`.
        type: string
    type: object
  stripe.RefundDestinationDetailsWeChatPay:
    type: object
  stripe.RefundDestinationDetailsZip:
    type: object
  stripe.RefundFailureReason:
    enum:
    - expired_or_canceled_card
    - lost_or_stolen_card
    - unknown
    type: string
    x-enum-varnames:
    - RefundFailureReasonExpiredOrCanceledCard
    - RefundFailureReasonLostOrStolenCard
    - RefundFailureReasonUnknown
  stripe.RefundList:
    properties:
      data:
        items:
          $ref: '#/definitions/stripe.Refund'
        type: array
      has_more:
        type: boolean
      total_count:
        description: |-
          TotalCount is the total number of objects in the collection (beyond just
          on the current page). This is not returned in most list calls.

          Deprecated: TotalCount is only included in some legacy situations and
          not generally available anymore.
        type: integer
      url:
        type: string
    type: object
  stripe.RefundNextAction:
    properties:
      display_details:
        $ref: '#/definitions/stripe.RefundNextActionDisplayDetails'
      type:
        description: Type of the next action to perform.
        type: string
    type: object
  stripe.RefundNextActionDisplayDetails:
    properties:
      email_sent:
        $ref: '#/definitions/stripe.RefundNextActionDisplayDetailsEmailSent'
      expires_at:
        description: The expiry timestamp.
        type: integer
    type: object
  stripe.RefundNextActionDisplayDetailsEmailSent:
    properties:
      email_sent_at:
        description: The timestamp when the email was sent.
        type: integer
      email_sent_to:
        description: The recipient's email address.
        type: string
    type: object
  stripe.RefundReason:
    enum:
    - duplicate
    - expired_uncaptured_charge
    - fraudulent
    - requested_by_customer
    type: string
    x-enum-varnames:
    - RefundReasonDuplicate
    - RefundReasonExpiredUncapturedCharge
    - RefundReasonFraudulent
    - RefundReasonRequestedByCustomer
  stripe.RefundStatus:
    enum:
    - canceled
    - failed
    - pending
    - succeeded
    - requires_action
    type: string
    x-enum-varnames:
    - RefundStatusCanceled
    - RefundStatusFailed
    - RefundStatusPending
    - RefundStatusSucceeded
    - RefundStatusRequiresAction
  stripe.Review:
    properties:
      billing_zip:
        description: The ZIP or postal code of the card used, if applicable.
        type: string
      charge:
        allOf:
        - $ref: '#/definitions/stripe.Charge'
        description: The charge associated with this review.
      closed_reason:
        allOf:
        - $ref: '#/definitions/stripe.ReviewClosedReason'
        description: The reason the review was closed, or null if it has not yet been
          closed. One of `approved`, `refunded`, `refunded_as_fraud`, `disputed`,
          or `redacted`.
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      id:
        description: Unique identifier for the object.
        type: string
      ip_address:
        description: The IP address where the payment originated.
        type: string
      ip_address_location:
        allOf:
        - $ref: '#/definitions/stripe.ReviewIPAddressLocation'
        description: Information related to the location of the payment. Note that
          this information is an approximation and attempts to locate the nearest
          population center - it should not be used to determine a specific address.
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      open:
        description: If `true`, the review needs action.
        type: boolean
      opened_reason:
        allOf:
        - $ref: '#/definitions/stripe.ReviewOpenedReason'
        description: The reason the review was opened. One of `rule` or `manual`.
      payment_intent:
        allOf:
        - $ref: '#/definitions/stripe.PaymentIntent'
        description: The PaymentIntent ID associated with this review, if one exists.
      reason:
        allOf:
        - $ref: '#/definitions/stripe.ReviewReason'
        description: The reason the review is currently open or closed. One of `rule`,
          `manual`, `approved`, `refunded`, `refunded_as_fraud`, `disputed`, or `redacted`.
      session:
        allOf:
        - $ref: '#/definitions/stripe.ReviewSession'
        description: Information related to the browsing session of the user who initiated
          the payment.
    type: object
  stripe.ReviewClosedReason:
    enum:
    - approved
    - disputed
    - redacted
    - refunded
    - refunded_as_fraud
    type: string
    x-enum-varnames:
    - ReviewClosedReasonApproved
    - ReviewClosedReasonDisputed
    - ReviewClosedReasonRedacted
    - ReviewClosedReasonRefunded
    - ReviewClosedReasonRefundedAsFraud
  stripe.ReviewIPAddressLocation:
    properties:
      city:
        description: The city where the payment originated.
        type: string
      country:
        description: Two-letter ISO code representing the country where the payment
          originated.
        type: string
      latitude:
        description: The geographic latitude where the payment originated.
        type: number
      longitude:
        description: The geographic longitude where the payment originated.
        type: number
      region:
        description: The state/county/province/region where the payment originated.
        type: string
    type: object
  stripe.ReviewOpenedReason:
    enum:
    - manual
    - rule
    type: string
    x-enum-varnames:
    - ReviewOpenedReasonManual
    - ReviewOpenedReasonRule
  stripe.ReviewReason:
    enum:
    - approved
    - disputed
    - manual
    - refunded
    - refunded_as_fraud
    - redacted
    - rule
    type: string
    x-enum-varnames:
    - ReviewReasonApproved
    - ReviewReasonDisputed
    - ReviewReasonManual
    - ReviewReasonRefunded
    - ReviewReasonRefundedAsFraud
    - ReviewReasonRedacted
    - ReviewReasonRule
  stripe.ReviewSession:
    properties:
      browser:
        description: The browser used in this browser session (e.g., `Chrome`).
        type: string
      device:
        description: Information about the device used for the browser session (e.g.,
          `Samsung SM-G930T`).
        type: string
      platform:
        description: The platform for the browser session (e.g., `Macintosh`).
        type: string
      version:
        description: The version for the browser session (e.g., `61.0.3163.100`).
        type: string
    type: object
  stripe.SetupAttempt:
    properties:
      application:
        allOf:
        - $ref: '#/definitions/stripe.Application'
        description: The value of [application](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-application)
          on the SetupIntent at the time of this confirmation.
      attach_to_self:
        description: |-
          If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.

          It can only be used for this Stripe Account's own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer.
        type: boolean
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      customer:
        allOf:
        - $ref: '#/definitions/stripe.Customer'
        description: The value of [customer](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-customer)
          on the SetupIntent at the time of this confirmation.
      flow_directions:
        description: |-
          Indicates the directions of money movement for which this payment method is intended to be used.

          Include `inbound` if you intend to use the payment method as the origin to pull funds from. Include `outbound` if you intend to use the payment method as the destination to send funds to. You can include both if you intend to use the payment method for both purposes.
        items:
          $ref: '#/definitions/stripe.SetupAttemptFlowDirection'
        type: array
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      on_behalf_of:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The value of [on_behalf_of](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-on_behalf_of)
          on the SetupIntent at the time of this confirmation.
      payment_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethod'
        description: ID of the payment method used with this SetupAttempt.
      payment_method_details:
        $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetails'
      setup_error:
        allOf:
        - $ref: '#/definitions/stripe.Error'
        description: The error encountered during this attempt to confirm the SetupIntent,
          if any.
      setup_intent:
        allOf:
        - $ref: '#/definitions/stripe.SetupIntent'
        description: ID of the SetupIntent that this attempt belongs to.
      status:
        allOf:
        - $ref: '#/definitions/stripe.SetupAttemptStatus'
        description: Status of this SetupAttempt, one of `requires_confirmation`,
          `requires_action`, `processing`, `succeeded`, `failed`, or `abandoned`.
      usage:
        allOf:
        - $ref: '#/definitions/stripe.SetupAttemptUsage'
        description: The value of [usage](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-usage)
          on the SetupIntent at the time of this confirmation, one of `off_session`
          or `on_session`.
    type: object
  stripe.SetupAttemptFlowDirection:
    enum:
    - inbound
    - outbound
    type: string
    x-enum-varnames:
    - SetupAttemptFlowDirectionInbound
    - SetupAttemptFlowDirectionOutbound
  stripe.SetupAttemptPaymentMethodDetails:
    properties:
      acss_debit:
        $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsACSSDebit'
      amazon_pay:
        $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsAmazonPay'
      au_becs_debit:
        $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsAUBECSDebit'
      bacs_debit:
        $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsBACSDebit'
      bancontact:
        $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsBancontact'
      boleto:
        $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsBoleto'
      card:
        $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsCard'
      card_present:
        $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsCardPresent'
      cashapp:
        $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsCashApp'
      ideal:
        $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsIDEAL'
      kakao_pay:
        $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsKakaoPay'
      klarna:
        $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsKlarna'
      kr_card:
        $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsKrCard'
      link:
        $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsLink'
      paypal:
        $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsPaypal'
      revolut_pay:
        $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsRevolutPay'
      sepa_debit:
        $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsSEPADebit'
      sofort:
        $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsSofort'
      type:
        allOf:
        - $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsType'
        description: The type of the payment method used in the SetupIntent (e.g.,
          `card`). An additional hash is included on `payment_method_details` with
          a name matching this value. It contains confirmation-specific information
          for the payment method.
      us_bank_account:
        $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsUSBankAccount'
    type: object
  stripe.SetupAttemptPaymentMethodDetailsACSSDebit:
    type: object
  stripe.SetupAttemptPaymentMethodDetailsAUBECSDebit:
    type: object
  stripe.SetupAttemptPaymentMethodDetailsAmazonPay:
    type: object
  stripe.SetupAttemptPaymentMethodDetailsBACSDebit:
    type: object
  stripe.SetupAttemptPaymentMethodDetailsBancontact:
    properties:
      bank_code:
        description: Bank code of bank associated with the bank account.
        type: string
      bank_name:
        description: Name of the bank associated with the bank account.
        type: string
      bic:
        description: Bank Identifier Code of the bank associated with the bank account.
        type: string
      generated_sepa_debit:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethod'
        description: The ID of the SEPA Direct Debit PaymentMethod which was generated
          by this SetupAttempt.
      generated_sepa_debit_mandate:
        allOf:
        - $ref: '#/definitions/stripe.Mandate'
        description: The mandate for the SEPA Direct Debit PaymentMethod which was
          generated by this SetupAttempt.
      iban_last4:
        description: Last four characters of the IBAN.
        type: string
      preferred_language:
        description: |-
          Preferred language of the Bancontact authorization page that the customer is redirected to.
          Can be one of `en`, `de`, `fr`, or `nl`
        type: string
      verified_name:
        description: |-
          Owner's verified full name. Values are verified or provided by Bancontact directly
          (if supported) at the time of authorization or settlement. They cannot be set or mutated.
        type: string
    type: object
  stripe.SetupAttemptPaymentMethodDetailsBoleto:
    type: object
  stripe.SetupAttemptPaymentMethodDetailsCard:
    properties:
      brand:
        description: Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`,
          `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
        type: string
      checks:
        allOf:
        - $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsCardChecks'
        description: Check results by Card networks on Card address and CVC at the
          time of authorization
      country:
        description: Two-letter ISO code representing the country of the card. You
          could use this attribute to get a sense of the international breakdown of
          cards you've collected.
        type: string
      description:
        description: A high-level description of the type of cards issued in this
          range. (For internal use only and not typically available in standard API
          requests.)
        type: string
      exp_month:
        description: Two-digit number representing the card's expiration month.
        type: integer
      exp_year:
        description: Four-digit number representing the card's expiration year.
        type: integer
      fingerprint:
        description: |-
          Uniquely identifies this particular card number. You can use this attribute to check whether two customers who've signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.

          *As of May 1, 2021, card fingerprint in India for Connect changed to allow two fingerprints for the same card---one for India and one for the rest of the world.*
        type: string
      funding:
        description: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
        type: string
      iin:
        description: Issuer identification number of the card. (For internal use only
          and not typically available in standard API requests.)
        type: string
      issuer:
        description: The name of the card's issuing bank. (For internal use only and
          not typically available in standard API requests.)
        type: string
      last4:
        description: The last four digits of the card.
        type: string
      network:
        description: Identifies which network this charge was processed on. Can be
          `amex`, `cartes_bancaires`, `diners`, `discover`, `eftpos_au`, `interac`,
          `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.
        type: string
      three_d_secure:
        allOf:
        - $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsCardThreeDSecure'
        description: Populated if this authorization used 3D Secure authentication.
      wallet:
        allOf:
        - $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsCardWallet'
        description: If this Card is part of a card wallet, this contains the details
          of the card wallet.
    type: object
  stripe.SetupAttemptPaymentMethodDetailsCardChecks:
    properties:
      address_line1_check:
        description: If a address line1 was provided, results of the check, one of
          `pass`, `fail`, `unavailable`, or `unchecked`.
        type: string
      address_postal_code_check:
        description: If a address postal code was provided, results of the check,
          one of `pass`, `fail`, `unavailable`, or `unchecked`.
        type: string
      cvc_check:
        description: If a CVC was provided, results of the check, one of `pass`, `fail`,
          `unavailable`, or `unchecked`.
        type: string
    type: object
  stripe.SetupAttemptPaymentMethodDetailsCardPresent:
    properties:
      generated_card:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethod'
        description: The ID of the Card PaymentMethod which was generated by this
          SetupAttempt.
      offline:
        allOf:
        - $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsCardPresentOffline'
        description: Details about payments collected offline.
    type: object
  stripe.SetupAttemptPaymentMethodDetailsCardPresentOffline:
    properties:
      stored_at:
        description: Time at which the payment was collected while offline
        type: integer
      type:
        allOf:
        - $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsCardPresentOfflineType'
        description: The method used to process this payment method offline. Only
          deferred is allowed.
    type: object
  stripe.SetupAttemptPaymentMethodDetailsCardPresentOfflineType:
    enum:
    - deferred
    type: string
    x-enum-varnames:
    - SetupAttemptPaymentMethodDetailsCardPresentOfflineTypeDeferred
  stripe.SetupAttemptPaymentMethodDetailsCardThreeDSecure:
    properties:
      authentication_flow:
        allOf:
        - $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsCardThreeDSecureAuthenticationFlow'
        description: |-
          For authenticated transactions: how the customer was authenticated by
          the issuing bank.
      electronic_commerce_indicator:
        allOf:
        - $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsCardThreeDSecureElectronicCommerceIndicator'
        description: |-
          The Electronic Commerce Indicator (ECI). A protocol-level field
          indicating what degree of authentication was performed.
      result:
        allOf:
        - $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsCardThreeDSecureResult'
        description: Indicates the outcome of 3D Secure authentication.
      result_reason:
        allOf:
        - $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsCardThreeDSecureResultReason'
        description: |-
          Additional information about why 3D Secure succeeded or failed based
          on the `result`.
      transaction_id:
        description: |-
          The 3D Secure 1 XID or 3D Secure 2 Directory Server Transaction ID
          (dsTransId) for this payment.
        type: string
      version:
        description: The version of 3D Secure that was used.
        type: string
    type: object
  stripe.SetupAttemptPaymentMethodDetailsCardThreeDSecureAuthenticationFlow:
    enum:
    - challenge
    - frictionless
    type: string
    x-enum-varnames:
    - SetupAttemptPaymentMethodDetailsCardThreeDSecureAuthenticationFlowChallenge
    - SetupAttemptPaymentMethodDetailsCardThreeDSecureAuthenticationFlowFrictionless
  stripe.SetupAttemptPaymentMethodDetailsCardThreeDSecureElectronicCommerceIndicator:
    enum:
    - "01"
    - "02"
    - "05"
    - "06"
    - "07"
    type: string
    x-enum-varnames:
    - SetupAttemptPaymentMethodDetailsCardThreeDSecureElectronicCommerceIndicator01
    - SetupAttemptPaymentMethodDetailsCardThreeDSecureElectronicCommerceIndicator02
    - SetupAttemptPaymentMethodDetailsCardThreeDSecureElectronicCommerceIndicator05
    - SetupAttemptPaymentMethodDetailsCardThreeDSecureElectronicCommerceIndicator06
    - SetupAttemptPaymentMethodDetailsCardThreeDSecureElectronicCommerceIndicator07
  stripe.SetupAttemptPaymentMethodDetailsCardThreeDSecureResult:
    enum:
    - attempt_acknowledged
    - authenticated
    - exempted
    - failed
    - not_supported
    - processing_error
    type: string
    x-enum-varnames:
    - SetupAttemptPaymentMethodDetailsCardThreeDSecureResultAttemptAcknowledged
    - SetupAttemptPaymentMethodDetailsCardThreeDSecureResultAuthenticated
    - SetupAttemptPaymentMethodDetailsCardThreeDSecureResultExempted
    - SetupAttemptPaymentMethodDetailsCardThreeDSecureResultFailed
    - SetupAttemptPaymentMethodDetailsCardThreeDSecureResultNotSupported
    - SetupAttemptPaymentMethodDetailsCardThreeDSecureResultProcessingError
  stripe.SetupAttemptPaymentMethodDetailsCardThreeDSecureResultReason:
    enum:
    - abandoned
    - bypassed
    - canceled
    - card_not_enrolled
    - network_not_supported
    - protocol_error
    - rejected
    type: string
    x-enum-varnames:
    - SetupAttemptPaymentMethodDetailsCardThreeDSecureResultReasonAbandoned
    - SetupAttemptPaymentMethodDetailsCardThreeDSecureResultReasonBypassed
    - SetupAttemptPaymentMethodDetailsCardThreeDSecureResultReasonCanceled
    - SetupAttemptPaymentMethodDetailsCardThreeDSecureResultReasonCardNotEnrolled
    - SetupAttemptPaymentMethodDetailsCardThreeDSecureResultReasonNetworkNotSupported
    - SetupAttemptPaymentMethodDetailsCardThreeDSecureResultReasonProtocolError
    - SetupAttemptPaymentMethodDetailsCardThreeDSecureResultReasonRejected
  stripe.SetupAttemptPaymentMethodDetailsCardWallet:
    properties:
      apple_pay:
        $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsCardWalletApplePay'
      google_pay:
        $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsCardWalletGooglePay'
      type:
        allOf:
        - $ref: '#/definitions/stripe.SetupAttemptPaymentMethodDetailsCardWalletType'
        description: The type of the card wallet, one of `apple_pay`, `google_pay`,
          or `link`. An additional hash is included on the Wallet subhash with a name
          matching this value. It contains additional information specific to the
          card wallet type.
    type: object
  stripe.SetupAttemptPaymentMethodDetailsCardWalletApplePay:
    type: object
  stripe.SetupAttemptPaymentMethodDetailsCardWalletGooglePay:
    type: object
  stripe.SetupAttemptPaymentMethodDetailsCardWalletType:
    enum:
    - apple_pay
    - google_pay
    - link
    type: string
    x-enum-varnames:
    - SetupAttemptPaymentMethodDetailsCardWalletTypeApplePay
    - SetupAttemptPaymentMethodDetailsCardWalletTypeGooglePay
    - SetupAttemptPaymentMethodDetailsCardWalletTypeLink
  stripe.SetupAttemptPaymentMethodDetailsCashApp:
    type: object
  stripe.SetupAttemptPaymentMethodDetailsIDEAL:
    properties:
      bank:
        description: The customer's bank. Can be one of `abn_amro`, `asn_bank`, `bunq`,
          `handelsbanken`, `ing`, `knab`, `moneyou`, `n26`, `nn`, `rabobank`, `regiobank`,
          `revolut`, `sns_bank`, `triodos_bank`, `van_lanschot`, or `yoursafe`.
        type: string
      bic:
        description: The Bank Identifier Code of the customer's bank.
        type: string
      generated_sepa_debit:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethod'
        description: The ID of the SEPA Direct Debit PaymentMethod which was generated
          by this SetupAttempt.
      generated_sepa_debit_mandate:
        allOf:
        - $ref: '#/definitions/stripe.Mandate'
        description: The mandate for the SEPA Direct Debit PaymentMethod which was
          generated by this SetupAttempt.
      iban_last4:
        description: Last four characters of the IBAN.
        type: string
      verified_name:
        description: |-
          Owner's verified full name. Values are verified or provided by iDEAL directly
          (if supported) at the time of authorization or settlement. They cannot be set or mutated.
        type: string
    type: object
  stripe.SetupAttemptPaymentMethodDetailsKakaoPay:
    type: object
  stripe.SetupAttemptPaymentMethodDetailsKlarna:
    type: object
  stripe.SetupAttemptPaymentMethodDetailsKrCard:
    type: object
  stripe.SetupAttemptPaymentMethodDetailsLink:
    type: object
  stripe.SetupAttemptPaymentMethodDetailsPaypal:
    type: object
  stripe.SetupAttemptPaymentMethodDetailsRevolutPay:
    type: object
  stripe.SetupAttemptPaymentMethodDetailsSEPADebit:
    type: object
  stripe.SetupAttemptPaymentMethodDetailsSofort:
    properties:
      bank_code:
        description: Bank code of bank associated with the bank account.
        type: string
      bank_name:
        description: Name of the bank associated with the bank account.
        type: string
      bic:
        description: Bank Identifier Code of the bank associated with the bank account.
        type: string
      generated_sepa_debit:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethod'
        description: The ID of the SEPA Direct Debit PaymentMethod which was generated
          by this SetupAttempt.
      generated_sepa_debit_mandate:
        allOf:
        - $ref: '#/definitions/stripe.Mandate'
        description: The mandate for the SEPA Direct Debit PaymentMethod which was
          generated by this SetupAttempt.
      iban_last4:
        description: Last four characters of the IBAN.
        type: string
      preferred_language:
        description: |-
          Preferred language of the Sofort authorization page that the customer is redirected to.
          Can be one of `en`, `de`, `fr`, or `nl`
        type: string
      verified_name:
        description: |-
          Owner's verified full name. Values are verified or provided by Sofort directly
          (if supported) at the time of authorization or settlement. They cannot be set or mutated.
        type: string
    type: object
  stripe.SetupAttemptPaymentMethodDetailsType:
    enum:
    - card
    type: string
    x-enum-varnames:
    - SetupAttemptPaymentMethodDetailsTypeCard
  stripe.SetupAttemptPaymentMethodDetailsUSBankAccount:
    type: object
  stripe.SetupAttemptStatus:
    enum:
    - abandoned
    - failed
    - processing
    - requires_action
    - requires_confirmation
    - succeeded
    type: string
    x-enum-varnames:
    - SetupAttemptStatusAbandoned
    - SetupAttemptStatusFailed
    - SetupAttemptStatusProcessing
    - SetupAttemptStatusRequiresAction
    - SetupAttemptStatusRequiresConfirmation
    - SetupAttemptStatusSucceeded
  stripe.SetupAttemptUsage:
    enum:
    - off_session
    - on_session
    type: string
    x-enum-varnames:
    - SetupAttemptUsageOffSession
    - SetupAttemptUsageOnSession
  stripe.SetupIntent:
    properties:
      application:
        allOf:
        - $ref: '#/definitions/stripe.Application'
        description: ID of the Connect application that created the SetupIntent.
      attach_to_self:
        description: |-
          If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.

          It can only be used for this Stripe Account's own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer.
        type: boolean
      automatic_payment_methods:
        allOf:
        - $ref: '#/definitions/stripe.SetupIntentAutomaticPaymentMethods'
        description: Settings for dynamic payment methods compatible with this Setup
          Intent
      cancellation_reason:
        allOf:
        - $ref: '#/definitions/stripe.SetupIntentCancellationReason'
        description: Reason for cancellation of this SetupIntent, one of `abandoned`,
          `requested_by_customer`, or `duplicate`.
      client_secret:
        description: |-
          The client secret of this SetupIntent. Used for client-side retrieval using a publishable key.

          The client secret can be used to complete payment setup from your frontend. It should not be stored, logged, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.
        type: string
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      customer:
        allOf:
        - $ref: '#/definitions/stripe.Customer'
        description: |-
          ID of the Customer this SetupIntent belongs to, if one exists.

          If present, the SetupIntent's payment method will be attached to the Customer on successful setup. Payment methods attached to other Customers cannot be used with this SetupIntent.
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      flow_directions:
        description: |-
          Indicates the directions of money movement for which this payment method is intended to be used.

          Include `inbound` if you intend to use the payment method as the origin to pull funds from. Include `outbound` if you intend to use the payment method as the destination to send funds to. You can include both if you intend to use the payment method for both purposes.
        items:
          $ref: '#/definitions/stripe.SetupIntentFlowDirection'
        type: array
      id:
        description: Unique identifier for the object.
        type: string
      last_setup_error:
        allOf:
        - $ref: '#/definitions/stripe.Error'
        description: The error encountered in the previous SetupIntent confirmation.
      latest_attempt:
        allOf:
        - $ref: '#/definitions/stripe.SetupAttempt'
        description: The most recent SetupAttempt for this SetupIntent.
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      mandate:
        allOf:
        - $ref: '#/definitions/stripe.Mandate'
        description: ID of the multi use Mandate generated by the SetupIntent.
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      next_action:
        allOf:
        - $ref: '#/definitions/stripe.SetupIntentNextAction'
        description: If present, this property tells you what actions you need to
          take in order for your customer to continue payment setup.
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      on_behalf_of:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The account (if any) for which the setup is intended.
      payment_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethod'
        description: ID of the payment method used with this SetupIntent. If the payment
          method is `card_present` and isn't a digital wallet, then the [generated_card](https://docs.stripe.com/api/setup_attempts/object#setup_attempt_object-payment_method_details-card_present-generated_card)
          associated with the `latest_attempt` is attached to the Customer instead.
      payment_method_configuration_details:
        allOf:
        - $ref: '#/definitions/stripe.SetupIntentPaymentMethodConfigurationDetails'
        description: Information about the payment method configuration used for this
          Setup Intent.
      payment_method_options:
        allOf:
        - $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptions'
        description: Payment method-specific configuration for this SetupIntent.
      payment_method_types:
        description: The list of payment method types (e.g. card) that this SetupIntent
          is allowed to set up.
        items:
          type: string
        type: array
      single_use_mandate:
        allOf:
        - $ref: '#/definitions/stripe.Mandate'
        description: ID of the single_use Mandate generated by the SetupIntent.
      status:
        allOf:
        - $ref: '#/definitions/stripe.SetupIntentStatus'
        description: '[Status](https://stripe.com/docs/payments/intents#intent-statuses)
          of this SetupIntent, one of `requires_payment_method`, `requires_confirmation`,
          `requires_action`, `processing`, `canceled`, or `succeeded`.'
      usage:
        allOf:
        - $ref: '#/definitions/stripe.SetupIntentUsage'
        description: |-
          Indicates how the payment method is intended to be used in the future.

          Use `on_session` if you intend to only reuse the payment method when the customer is in your checkout flow. Use `off_session` if your customer may or may not be in your checkout flow. If not provided, this value defaults to `off_session`.
    type: object
  stripe.SetupIntentAutomaticPaymentMethods:
    properties:
      allow_redirects:
        allOf:
        - $ref: '#/definitions/stripe.SetupIntentAutomaticPaymentMethodsAllowRedirects'
        description: |-
          Controls whether this SetupIntent will accept redirect-based payment methods.

          Redirect-based payment methods may require your customer to be redirected to a payment method's app or site for authentication or additional steps. To [confirm](https://stripe.com/docs/api/setup_intents/confirm) this SetupIntent, you may be required to provide a `return_url` to redirect customers back to your site after they authenticate or complete the setup.
      enabled:
        description: Automatically calculates compatible payment methods
        type: boolean
    type: object
  stripe.SetupIntentAutomaticPaymentMethodsAllowRedirects:
    enum:
    - always
    - never
    type: string
    x-enum-varnames:
    - SetupIntentAutomaticPaymentMethodsAllowRedirectsAlways
    - SetupIntentAutomaticPaymentMethodsAllowRedirectsNever
  stripe.SetupIntentCancellationReason:
    enum:
    - abandoned
    - duplicate
    - requested_by_customer
    type: string
    x-enum-varnames:
    - SetupIntentCancellationReasonAbandoned
    - SetupIntentCancellationReasonDuplicate
    - SetupIntentCancellationReasonRequestedByCustomer
  stripe.SetupIntentFlowDirection:
    enum:
    - inbound
    - outbound
    type: string
    x-enum-varnames:
    - SetupIntentFlowDirectionInbound
    - SetupIntentFlowDirectionOutbound
  stripe.SetupIntentNextAction:
    properties:
      cashapp_handle_redirect_or_display_qr_code:
        $ref: '#/definitions/stripe.SetupIntentNextActionCashAppHandleRedirectOrDisplayQRCode'
      redirect_to_url:
        $ref: '#/definitions/stripe.SetupIntentNextActionRedirectToURL'
      type:
        allOf:
        - $ref: '#/definitions/stripe.SetupIntentNextActionType'
        description: Type of the next action to perform, one of `redirect_to_url`,
          `use_stripe_sdk`, `alipay_handle_redirect`, `oxxo_display_details`, or `verify_with_microdeposits`.
      use_stripe_sdk:
        allOf:
        - $ref: '#/definitions/stripe.SetupIntentNextActionUseStripeSDK'
        description: When confirming a SetupIntent with Stripe.js, Stripe.js depends
          on the contents of this dictionary to invoke authentication flows. The shape
          of the contents is subject to change and is only intended to be used by
          Stripe.js.
      verify_with_microdeposits:
        $ref: '#/definitions/stripe.SetupIntentNextActionVerifyWithMicrodeposits'
    type: object
  stripe.SetupIntentNextActionCashAppHandleRedirectOrDisplayQRCode:
    properties:
      hosted_instructions_url:
        description: The URL to the hosted Cash App Pay instructions page, which allows
          customers to view the QR code, and supports QR code refreshing on expiration.
        type: string
      mobile_auth_url:
        description: The url for mobile redirect based auth
        type: string
      qr_code:
        $ref: '#/definitions/stripe.SetupIntentNextActionCashAppHandleRedirectOrDisplayQRCodeQRCode'
    type: object
  stripe.SetupIntentNextActionCashAppHandleRedirectOrDisplayQRCodeQRCode:
    properties:
      expires_at:
        description: The date (unix timestamp) when the QR code expires.
        type: integer
      image_url_png:
        description: The image_url_png string used to render QR code
        type: string
      image_url_svg:
        description: The image_url_svg string used to render QR code
        type: string
    type: object
  stripe.SetupIntentNextActionRedirectToURL:
    properties:
      return_url:
        description: If the customer does not exit their browser while authenticating,
          they will be redirected to this specified URL after completion.
        type: string
      url:
        description: The URL you must redirect your customer to in order to authenticate.
        type: string
    type: object
  stripe.SetupIntentNextActionType:
    enum:
    - redirect_to_url
    - use_stripe_sdk
    - alipay_handle_redirect
    - oxxo_display_details
    - verify_with_microdeposits
    type: string
    x-enum-varnames:
    - SetupIntentNextActionTypeRedirectToURL
    - SetupIntentNextActionTypeUseStripeSDK
    - SetupIntentNextActionTypeAlipayHandleRedirect
    - SetupIntentNextActionTypeOXXODisplayDetails
    - SetupIntentNextActionTypeVerifyWithMicrodeposits
  stripe.SetupIntentNextActionUseStripeSDK:
    type: object
  stripe.SetupIntentNextActionVerifyWithMicrodeposits:
    properties:
      arrival_date:
        description: The timestamp when the microdeposits are expected to land.
        type: integer
      hosted_verification_url:
        description: The URL for the hosted verification page, which allows customers
          to verify their bank account.
        type: string
      microdeposit_type:
        allOf:
        - $ref: '#/definitions/stripe.SetupIntentNextActionVerifyWithMicrodepositsMicrodepositType'
        description: The type of the microdeposit sent to the customer. Used to distinguish
          between different verification methods.
    type: object
  stripe.SetupIntentNextActionVerifyWithMicrodepositsMicrodepositType:
    enum:
    - amounts
    - descriptor_code
    type: string
    x-enum-varnames:
    - SetupIntentNextActionVerifyWithMicrodepositsMicrodepositTypeAmounts
    - SetupIntentNextActionVerifyWithMicrodepositsMicrodepositTypeDescriptorCode
  stripe.SetupIntentPaymentMethodConfigurationDetails:
    properties:
      id:
        description: ID of the payment method configuration used.
        type: string
      parent:
        description: ID of the parent payment method configuration used.
        type: string
    type: object
  stripe.SetupIntentPaymentMethodOptions:
    properties:
      acss_debit:
        $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsACSSDebit'
      amazon_pay:
        $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsAmazonPay'
      bacs_debit:
        $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsBACSDebit'
      card:
        $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsCard'
      card_present:
        $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsCardPresent'
      link:
        $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsLink'
      paypal:
        $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsPaypal'
      sepa_debit:
        $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsSEPADebit'
      us_bank_account:
        $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsUSBankAccount'
    type: object
  stripe.SetupIntentPaymentMethodOptionsACSSDebit:
    properties:
      currency:
        allOf:
        - $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsACSSDebitCurrency'
        description: Currency supported by the bank account
      mandate_options:
        $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsACSSDebitMandateOptions'
      verification_method:
        allOf:
        - $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsACSSDebitVerificationMethod'
        description: Bank account verification method.
    type: object
  stripe.SetupIntentPaymentMethodOptionsACSSDebitCurrency:
    enum:
    - cad
    - usd
    type: string
    x-enum-varnames:
    - SetupIntentPaymentMethodOptionsACSSDebitCurrencyCAD
    - SetupIntentPaymentMethodOptionsACSSDebitCurrencyUSD
  stripe.SetupIntentPaymentMethodOptionsACSSDebitMandateOptions:
    properties:
      custom_mandate_url:
        description: A URL for custom mandate text
        type: string
      default_for:
        description: List of Stripe products where this mandate can be selected automatically.
        items:
          $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsACSSDebitMandateOptionsDefaultFor'
        type: array
      interval_description:
        description: Description of the interval. Only required if the 'payment_schedule'
          parameter is 'interval' or 'combined'.
        type: string
      payment_schedule:
        allOf:
        - $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsACSSDebitMandateOptionsPaymentSchedule'
        description: Payment schedule for the mandate.
      transaction_type:
        allOf:
        - $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsACSSDebitMandateOptionsTransactionType'
        description: Transaction type of the mandate.
    type: object
  stripe.SetupIntentPaymentMethodOptionsACSSDebitMandateOptionsDefaultFor:
    enum:
    - invoice
    - subscription
    type: string
    x-enum-varnames:
    - SetupIntentPaymentMethodOptionsACSSDebitMandateOptionsDefaultForInvoice
    - SetupIntentPaymentMethodOptionsACSSDebitMandateOptionsDefaultForSubscription
  stripe.SetupIntentPaymentMethodOptionsACSSDebitMandateOptionsPaymentSchedule:
    enum:
    - combined
    - interval
    - sporadic
    type: string
    x-enum-varnames:
    - SetupIntentPaymentMethodOptionsACSSDebitMandateOptionsPaymentScheduleCombined
    - SetupIntentPaymentMethodOptionsACSSDebitMandateOptionsPaymentScheduleInterval
    - SetupIntentPaymentMethodOptionsACSSDebitMandateOptionsPaymentScheduleSporadic
  stripe.SetupIntentPaymentMethodOptionsACSSDebitMandateOptionsTransactionType:
    enum:
    - business
    - personal
    type: string
    x-enum-varnames:
    - SetupIntentPaymentMethodOptionsACSSDebitMandateOptionsTransactionTypeBusiness
    - SetupIntentPaymentMethodOptionsACSSDebitMandateOptionsTransactionTypePersonal
  stripe.SetupIntentPaymentMethodOptionsACSSDebitVerificationMethod:
    enum:
    - automatic
    - instant
    - microdeposits
    type: string
    x-enum-varnames:
    - SetupIntentPaymentMethodOptionsACSSDebitVerificationMethodAutomatic
    - SetupIntentPaymentMethodOptionsACSSDebitVerificationMethodInstant
    - SetupIntentPaymentMethodOptionsACSSDebitVerificationMethodMicrodeposits
  stripe.SetupIntentPaymentMethodOptionsAmazonPay:
    type: object
  stripe.SetupIntentPaymentMethodOptionsBACSDebit:
    properties:
      mandate_options:
        $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsBACSDebitMandateOptions'
    type: object
  stripe.SetupIntentPaymentMethodOptionsBACSDebitMandateOptions:
    type: object
  stripe.SetupIntentPaymentMethodOptionsCard:
    properties:
      mandate_options:
        allOf:
        - $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsCardMandateOptions'
        description: Configuration options for setting up an eMandate for cards issued
          in India.
      network:
        allOf:
        - $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsCardNetwork'
        description: Selected network to process this SetupIntent on. Depends on the
          available networks of the card attached to the setup intent. Can be only
          set confirm-time.
      request_three_d_secure:
        allOf:
        - $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsCardRequestThreeDSecure'
        description: We strongly recommend that you rely on our SCA Engine to automatically
          prompt your customers for authentication based on risk level and [other
          requirements](https://stripe.com/docs/strong-customer-authentication). However,
          if you wish to request 3D Secure based on logic from your own fraud engine,
          provide this option. If not provided, this value defaults to `automatic`.
          Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds)
          for more information on how this configuration interacts with Radar and
          our SCA Engine.
    type: object
  stripe.SetupIntentPaymentMethodOptionsCardMandateOptions:
    properties:
      amount:
        description: Amount to be charged for future payments.
        type: integer
      amount_type:
        allOf:
        - $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsCardMandateOptionsAmountType'
        description: One of `fixed` or `maximum`. If `fixed`, the `amount` param refers
          to the exact amount to be charged in future payments. If `maximum`, the
          amount charged can be up to the value passed for the `amount` param.
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      description:
        description: A description of the mandate or subscription that is meant to
          be displayed to the customer.
        type: string
      end_date:
        description: End date of the mandate or subscription. If not provided, the
          mandate will be active until canceled. If provided, end date should be after
          start date.
        type: integer
      interval:
        allOf:
        - $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsCardMandateOptionsInterval'
        description: Specifies payment frequency. One of `day`, `week`, `month`, `year`,
          or `sporadic`.
      interval_count:
        description: The number of intervals between payments. For example, `interval=month`
          and `interval_count=3` indicates one payment every three months. Maximum
          of one year interval allowed (1 year, 12 months, or 52 weeks). This parameter
          is optional when `interval=sporadic`.
        type: integer
      reference:
        description: Unique identifier for the mandate or subscription.
        type: string
      start_date:
        description: Start date of the mandate or subscription. Start date should
          not be lesser than yesterday.
        type: integer
      supported_types:
        description: Specifies the type of mandates supported. Possible values are
          `india`.
        items:
          $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsCardMandateOptionsSupportedType'
        type: array
    type: object
  stripe.SetupIntentPaymentMethodOptionsCardMandateOptionsAmountType:
    enum:
    - fixed
    - maximum
    type: string
    x-enum-varnames:
    - SetupIntentPaymentMethodOptionsCardMandateOptionsAmountTypeFixed
    - SetupIntentPaymentMethodOptionsCardMandateOptionsAmountTypeMaximum
  stripe.SetupIntentPaymentMethodOptionsCardMandateOptionsInterval:
    enum:
    - day
    - month
    - sporadic
    - week
    - year
    type: string
    x-enum-varnames:
    - SetupIntentPaymentMethodOptionsCardMandateOptionsIntervalDay
    - SetupIntentPaymentMethodOptionsCardMandateOptionsIntervalMonth
    - SetupIntentPaymentMethodOptionsCardMandateOptionsIntervalSporadic
    - SetupIntentPaymentMethodOptionsCardMandateOptionsIntervalWeek
    - SetupIntentPaymentMethodOptionsCardMandateOptionsIntervalYear
  stripe.SetupIntentPaymentMethodOptionsCardMandateOptionsSupportedType:
    enum:
    - india
    type: string
    x-enum-varnames:
    - SetupIntentPaymentMethodOptionsCardMandateOptionsSupportedTypeIndia
  stripe.SetupIntentPaymentMethodOptionsCardNetwork:
    enum:
    - amex
    - cartes_bancaires
    - diners
    - discover
    - eftpos_au
    - girocard
    - interac
    - jcb
    - mastercard
    - unionpay
    - unknown
    - visa
    type: string
    x-enum-varnames:
    - SetupIntentPaymentMethodOptionsCardNetworkAmex
    - SetupIntentPaymentMethodOptionsCardNetworkCartesBancaires
    - SetupIntentPaymentMethodOptionsCardNetworkDiners
    - SetupIntentPaymentMethodOptionsCardNetworkDiscover
    - SetupIntentPaymentMethodOptionsCardNetworkEFTPOSAU
    - SetupIntentPaymentMethodOptionsCardNetworkGirocard
    - SetupIntentPaymentMethodOptionsCardNetworkInterac
    - SetupIntentPaymentMethodOptionsCardNetworkJCB
    - SetupIntentPaymentMethodOptionsCardNetworkMastercard
    - SetupIntentPaymentMethodOptionsCardNetworkUnionpay
    - SetupIntentPaymentMethodOptionsCardNetworkUnknown
    - SetupIntentPaymentMethodOptionsCardNetworkVisa
  stripe.SetupIntentPaymentMethodOptionsCardPresent:
    type: object
  stripe.SetupIntentPaymentMethodOptionsCardRequestThreeDSecure:
    enum:
    - any
    - automatic
    - challenge
    type: string
    x-enum-varnames:
    - SetupIntentPaymentMethodOptionsCardRequestThreeDSecureAny
    - SetupIntentPaymentMethodOptionsCardRequestThreeDSecureAutomatic
    - SetupIntentPaymentMethodOptionsCardRequestThreeDSecureChallenge
  stripe.SetupIntentPaymentMethodOptionsLink:
    properties:
      persistent_token:
        description: |-
          [Deprecated] This is a legacy parameter that no longer has any function.
          Deprecated:
        type: string
    type: object
  stripe.SetupIntentPaymentMethodOptionsPaypal:
    properties:
      billing_agreement_id:
        description: The PayPal Billing Agreement ID (BAID). This is an ID generated
          by PayPal which represents the mandate between the merchant and the customer.
        type: string
    type: object
  stripe.SetupIntentPaymentMethodOptionsSEPADebit:
    properties:
      mandate_options:
        $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsSEPADebitMandateOptions'
    type: object
  stripe.SetupIntentPaymentMethodOptionsSEPADebitMandateOptions:
    type: object
  stripe.SetupIntentPaymentMethodOptionsUSBankAccount:
    properties:
      financial_connections:
        $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsUSBankAccountFinancialConnections'
      mandate_options:
        $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsUSBankAccountMandateOptions'
      verification_method:
        allOf:
        - $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsUSBankAccountVerificationMethod'
        description: Bank account verification method.
    type: object
  stripe.SetupIntentPaymentMethodOptionsUSBankAccountFinancialConnections:
    properties:
      filters:
        $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsFilters'
      permissions:
        description: The list of permissions to request. The `payment_method` permission
          must be included.
        items:
          $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsPermission'
        type: array
      prefetch:
        description: Data features requested to be retrieved upon account creation.
        items:
          $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsPrefetch'
        type: array
      return_url:
        description: For webview integrations only. Upon completing OAuth login in
          the native browser, the user will be redirected to this URL to return to
          your app.
        type: string
    type: object
  stripe.SetupIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsFilters:
    properties:
      account_subcategories:
        description: The account subcategories to use to filter for possible accounts
          to link. Valid subcategories are `checking` and `savings`.
        items:
          $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsFiltersAccountSubcategory'
        type: array
    type: object
  stripe.SetupIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsFiltersAccountSubcategory:
    enum:
    - checking
    - savings
    type: string
    x-enum-varnames:
    - SetupIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsFiltersAccountSubcategoryChecking
    - SetupIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsFiltersAccountSubcategorySavings
  stripe.SetupIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsPermission:
    enum:
    - balances
    - ownership
    - payment_method
    - transactions
    type: string
    x-enum-varnames:
    - SetupIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsPermissionBalances
    - SetupIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsPermissionOwnership
    - SetupIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsPermissionPaymentMethod
    - SetupIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsPermissionTransactions
  stripe.SetupIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsPrefetch:
    enum:
    - balances
    - ownership
    - transactions
    type: string
    x-enum-varnames:
    - SetupIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsPrefetchBalances
    - SetupIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsPrefetchOwnership
    - SetupIntentPaymentMethodOptionsUSBankAccountFinancialConnectionsPrefetchTransactions
  stripe.SetupIntentPaymentMethodOptionsUSBankAccountMandateOptions:
    properties:
      collection_method:
        allOf:
        - $ref: '#/definitions/stripe.SetupIntentPaymentMethodOptionsUSBankAccountMandateOptionsCollectionMethod'
        description: Mandate collection method
    type: object
  stripe.SetupIntentPaymentMethodOptionsUSBankAccountMandateOptionsCollectionMethod:
    enum:
    - paper
    type: string
    x-enum-varnames:
    - SetupIntentPaymentMethodOptionsUSBankAccountMandateOptionsCollectionMethodPaper
  stripe.SetupIntentPaymentMethodOptionsUSBankAccountVerificationMethod:
    enum:
    - automatic
    - instant
    - microdeposits
    type: string
    x-enum-varnames:
    - SetupIntentPaymentMethodOptionsUSBankAccountVerificationMethodAutomatic
    - SetupIntentPaymentMethodOptionsUSBankAccountVerificationMethodInstant
    - SetupIntentPaymentMethodOptionsUSBankAccountVerificationMethodMicrodeposits
  stripe.SetupIntentStatus:
    enum:
    - canceled
    - processing
    - requires_action
    - requires_confirmation
    - requires_payment_method
    - succeeded
    type: string
    x-enum-varnames:
    - SetupIntentStatusCanceled
    - SetupIntentStatusProcessing
    - SetupIntentStatusRequiresAction
    - SetupIntentStatusRequiresConfirmation
    - SetupIntentStatusRequiresPaymentMethod
    - SetupIntentStatusSucceeded
  stripe.SetupIntentUsage:
    enum:
    - off_session
    - on_session
    type: string
    x-enum-varnames:
    - SetupIntentUsageOffSession
    - SetupIntentUsageOnSession
  stripe.ShippingDetails:
    properties:
      address:
        $ref: '#/definitions/stripe.Address'
      carrier:
        type: string
      name:
        type: string
      phone:
        type: string
      tracking_number:
        type: string
    type: object
  stripe.ShippingRate:
    properties:
      active:
        description: Whether the shipping rate can be used for new purchases. Defaults
          to `true`.
        type: boolean
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      delivery_estimate:
        allOf:
        - $ref: '#/definitions/stripe.ShippingRateDeliveryEstimate'
        description: The estimated range for how long shipping will take, meant to
          be displayable to the customer. This will appear on CheckoutSessions.
      display_name:
        description: The name of the shipping rate, meant to be displayable to the
          customer. This will appear on CheckoutSessions.
        type: string
      fixed_amount:
        $ref: '#/definitions/stripe.ShippingRateFixedAmount'
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      tax_behavior:
        allOf:
        - $ref: '#/definitions/stripe.ShippingRateTaxBehavior'
        description: Specifies whether the rate is considered inclusive of taxes or
          exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`.
      tax_code:
        allOf:
        - $ref: '#/definitions/stripe.TaxCode'
        description: A [tax code](https://stripe.com/docs/tax/tax-categories) ID.
          The Shipping tax code is `txcd_92010001`.
      type:
        allOf:
        - $ref: '#/definitions/stripe.ShippingRateType'
        description: The type of calculation to use on the shipping rate.
    type: object
  stripe.ShippingRateDeliveryEstimate:
    properties:
      maximum:
        allOf:
        - $ref: '#/definitions/stripe.ShippingRateDeliveryEstimateMaximum'
        description: The upper bound of the estimated range. If empty, represents
          no upper bound i.e., infinite.
      minimum:
        allOf:
        - $ref: '#/definitions/stripe.ShippingRateDeliveryEstimateMinimum'
        description: The lower bound of the estimated range. If empty, represents
          no lower bound.
    type: object
  stripe.ShippingRateDeliveryEstimateMaximum:
    properties:
      unit:
        allOf:
        - $ref: '#/definitions/stripe.ShippingRateDeliveryEstimateMaximumUnit'
        description: A unit of time.
      value:
        description: Must be greater than 0.
        type: integer
    type: object
  stripe.ShippingRateDeliveryEstimateMaximumUnit:
    enum:
    - business_day
    - day
    - hour
    - month
    - week
    type: string
    x-enum-varnames:
    - ShippingRateDeliveryEstimateMaximumUnitBusinessDay
    - ShippingRateDeliveryEstimateMaximumUnitDay
    - ShippingRateDeliveryEstimateMaximumUnitHour
    - ShippingRateDeliveryEstimateMaximumUnitMonth
    - ShippingRateDeliveryEstimateMaximumUnitWeek
  stripe.ShippingRateDeliveryEstimateMinimum:
    properties:
      unit:
        allOf:
        - $ref: '#/definitions/stripe.ShippingRateDeliveryEstimateMinimumUnit'
        description: A unit of time.
      value:
        description: Must be greater than 0.
        type: integer
    type: object
  stripe.ShippingRateDeliveryEstimateMinimumUnit:
    enum:
    - business_day
    - day
    - hour
    - month
    - week
    type: string
    x-enum-varnames:
    - ShippingRateDeliveryEstimateMinimumUnitBusinessDay
    - ShippingRateDeliveryEstimateMinimumUnitDay
    - ShippingRateDeliveryEstimateMinimumUnitHour
    - ShippingRateDeliveryEstimateMinimumUnitMonth
    - ShippingRateDeliveryEstimateMinimumUnitWeek
  stripe.ShippingRateFixedAmount:
    properties:
      amount:
        description: A non-negative integer in cents representing how much to charge.
        type: integer
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      currency_options:
        additionalProperties:
          $ref: '#/definitions/stripe.ShippingRateFixedAmountCurrencyOptions'
        description: Shipping rates defined in each available currency option. Each
          key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html)
          and a [supported currency](https://stripe.com/docs/currencies).
        type: object
    type: object
  stripe.ShippingRateFixedAmountCurrencyOptions:
    properties:
      amount:
        description: A non-negative integer in cents representing how much to charge.
        type: integer
      tax_behavior:
        allOf:
        - $ref: '#/definitions/stripe.ShippingRateFixedAmountCurrencyOptionsTaxBehavior'
        description: Specifies whether the rate is considered inclusive of taxes or
          exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`.
    type: object
  stripe.ShippingRateFixedAmountCurrencyOptionsTaxBehavior:
    enum:
    - exclusive
    - inclusive
    - unspecified
    type: string
    x-enum-varnames:
    - ShippingRateFixedAmountCurrencyOptionsTaxBehaviorExclusive
    - ShippingRateFixedAmountCurrencyOptionsTaxBehaviorInclusive
    - ShippingRateFixedAmountCurrencyOptionsTaxBehaviorUnspecified
  stripe.ShippingRateTaxBehavior:
    enum:
    - exclusive
    - inclusive
    - unspecified
    type: string
    x-enum-varnames:
    - ShippingRateTaxBehaviorExclusive
    - ShippingRateTaxBehaviorInclusive
    - ShippingRateTaxBehaviorUnspecified
  stripe.ShippingRateType:
    enum:
    - fixed_amount
    type: string
    x-enum-varnames:
    - ShippingRateTypeFixedAmount
  stripe.Subscription:
    properties:
      application:
        allOf:
        - $ref: '#/definitions/stripe.Application'
        description: ID of the Connect Application that created the subscription.
      application_fee_percent:
        description: A non-negative decimal between 0 and 100, with at most two decimal
          places. This represents the percentage of the subscription invoice total
          that will be transferred to the application owner's Stripe account.
        type: number
      automatic_tax:
        $ref: '#/definitions/stripe.SubscriptionAutomaticTax'
      billing_cycle_anchor:
        description: The reference point that aligns future [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle)
          dates. It sets the day of week for `week` intervals, the day of month for
          `month` and `year` intervals, and the month of year for `year` intervals.
          The timestamp is in UTC format.
        type: integer
      billing_cycle_anchor_config:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionBillingCycleAnchorConfig'
        description: The fixed values used to calculate the `billing_cycle_anchor`.
      billing_thresholds:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionBillingThresholds'
        description: Define thresholds at which an invoice will be sent, and the subscription
          advanced to a new billing period
      cancel_at:
        description: A date in the future at which the subscription will automatically
          get canceled
        type: integer
      cancel_at_period_end:
        description: Whether this subscription will (if `status=active`) or did (if
          `status=canceled`) cancel at the end of the current billing period.
        type: boolean
      canceled_at:
        description: If the subscription has been canceled, the date of that cancellation.
          If the subscription was canceled with `cancel_at_period_end`, `canceled_at`
          will reflect the time of the most recent update request, not the end of
          the subscription period when the subscription is automatically moved to
          a canceled state.
        type: integer
      cancellation_details:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionCancellationDetails'
        description: Details about why this subscription was cancelled
      collection_method:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionCollectionMethod'
        description: Either `charge_automatically`, or `send_invoice`. When charging
          automatically, Stripe will attempt to pay this subscription at the end of
          the cycle using the default source attached to the customer. When sending
          an invoice, Stripe will email your customer an invoice with payment instructions
          and mark the subscription as `active`.
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      current_period_end:
        description: End of the current period that the subscription has been invoiced
          for. At the end of this period, a new invoice will be created.
        type: integer
      current_period_start:
        description: Start of the current period that the subscription has been invoiced
          for.
        type: integer
      customer:
        allOf:
        - $ref: '#/definitions/stripe.Customer'
        description: ID of the customer who owns the subscription.
      days_until_due:
        description: Number of days a customer has to pay invoices generated by this
          subscription. This value will be `null` for subscriptions where `collection_method=charge_automatically`.
        type: integer
      default_payment_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethod'
        description: ID of the default payment method for the subscription. It must
          belong to the customer associated with the subscription. This takes precedence
          over `default_source`. If neither are set, invoices will use the customer's
          [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method)
          or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).
      default_source:
        allOf:
        - $ref: '#/definitions/stripe.PaymentSource'
        description: ID of the default payment source for the subscription. It must
          belong to the customer associated with the subscription and be in a chargeable
          state. If `default_payment_method` is also set, `default_payment_method`
          will take precedence. If neither are set, invoices will use the customer's
          [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method)
          or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).
      default_tax_rates:
        description: The tax rates that will apply to any subscription item that does
          not have `tax_rates` set. Invoices created will have their `default_tax_rates`
          populated from the subscription.
        items:
          $ref: '#/definitions/stripe.TaxRate'
        type: array
      description:
        description: The subscription's description, meant to be displayable to the
          customer. Use this field to optionally store an explanation of the subscription
          for rendering in Stripe surfaces and certain local payment methods UIs.
        type: string
      discount:
        allOf:
        - $ref: '#/definitions/stripe.Discount'
        description: Describes the current discount applied to this subscription,
          if there is one. When billing, a discount applied to a subscription overrides
          a discount applied on a customer-wide basis. This field has been deprecated
          and will be removed in a future API version. Use `discounts` instead.
      discounts:
        description: The discounts applied to the subscription. Subscription item
          discounts are applied before subscription discounts. Use `expand[]=discounts`
          to expand each discount.
        items:
          $ref: '#/definitions/stripe.Discount'
        type: array
      ended_at:
        description: If the subscription has ended, the date the subscription ended.
        type: integer
      id:
        description: Unique identifier for the object.
        type: string
      invoice_settings:
        $ref: '#/definitions/stripe.SubscriptionInvoiceSettings'
      items:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionItemList'
        description: List of subscription items, each with an attached price.
      latest_invoice:
        allOf:
        - $ref: '#/definitions/stripe.Invoice'
        description: The most recent invoice this subscription has generated.
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      next_pending_invoice_item_invoice:
        description: Specifies the approximate timestamp on which any pending invoice
          items will be billed according to the schedule provided at `pending_invoice_item_interval`.
        type: integer
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      on_behalf_of:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The account (if any) the charge was made on behalf of for charges
          associated with this subscription. See the Connect documentation for details.
      pause_collection:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionPauseCollection'
        description: If specified, payment collection for this subscription will be
          paused. Note that the subscription status will be unchanged and will not
          be updated to `paused`. Learn more about [pausing collection](https://stripe.com/billing/subscriptions/pause-payment).
      payment_settings:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionPaymentSettings'
        description: Payment settings passed on to invoices created by the subscription.
      pending_invoice_item_interval:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionPendingInvoiceItemInterval'
        description: Specifies an interval for how often to bill for any pending invoice
          items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice)
          for the given subscription at the specified interval.
      pending_setup_intent:
        allOf:
        - $ref: '#/definitions/stripe.SetupIntent'
        description: You can use this [SetupIntent](https://stripe.com/docs/api/setup_intents)
          to collect user authentication when creating a subscription without immediate
          payment or updating a subscription's payment method, allowing you to optimize
          for off-session payments. Learn more in the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication#scenario-2).
      pending_update:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionPendingUpdate'
        description: If specified, [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates)
          that will be applied to the subscription once the `latest_invoice` has been
          paid.
      schedule:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionSchedule'
        description: The schedule attached to the subscription
      start_date:
        description: Date when the subscription was first created. The date might
          differ from the `created` date due to backdating.
        type: integer
      status:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionStatus'
        description: |-
          Possible values are `incomplete`, `incomplete_expired`, `trialing`, `active`, `past_due`, `canceled`, `unpaid`, or `paused`.

          For `collection_method=charge_automatically` a subscription moves into `incomplete` if the initial payment attempt fails. A subscription in this status can only have metadata and default_source updated. Once the first invoice is paid, the subscription moves into an `active` status. If the first invoice is not paid within 23 hours, the subscription transitions to `incomplete_expired`. This is a terminal status, the open invoice will be voided and no further invoices will be generated.

          A subscription that is currently in a trial period is `trialing` and moves to `active` when the trial period is over.

          A subscription can only enter a `paused` status [when a trial ends without a payment method](https://stripe.com/billing/subscriptions/trials#create-free-trials-without-payment). A `paused` subscription doesn't generate invoices and can be resumed after your customer adds their payment method. The `paused` status is different from [pausing collection](https://stripe.com/billing/subscriptions/pause-payment), which still generates invoices and leaves the subscription's status unchanged.

          If subscription `collection_method=charge_automatically`, it becomes `past_due` when payment is required but cannot be paid (due to failed payment or awaiting additional user actions). Once Stripe has exhausted all payment retry attempts, the subscription will become `canceled` or `unpaid` (depending on your subscriptions settings).

          If subscription `collection_method=send_invoice` it becomes `past_due` when its invoice is not paid by the due date, and `canceled` or `unpaid` if it is still not paid by an additional deadline after that. Note that when a subscription has a status of `unpaid`, no subsequent invoices will be attempted (invoices will be created, but then immediately automatically closed). After receiving updated payment information from a customer, you may choose to reopen and pay their closed invoices.
      test_clock:
        allOf:
        - $ref: '#/definitions/stripe.TestHelpersTestClock'
        description: ID of the test clock this subscription belongs to.
      transfer_data:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionTransferData'
        description: The account (if any) the subscription's payments will be attributed
          to for tax reporting, and where funds from each payment will be transferred
          to for each of the subscription's invoices.
      trial_end:
        description: If the subscription has a trial, the end of that trial.
        type: integer
      trial_settings:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionTrialSettings'
        description: Settings related to subscription trials.
      trial_start:
        description: If the subscription has a trial, the beginning of that trial.
        type: integer
    type: object
  stripe.SubscriptionAutomaticTax:
    properties:
      enabled:
        description: Whether Stripe automatically computes tax on this subscription.
        type: boolean
      liability:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionAutomaticTaxLiability'
        description: The account that's liable for tax. If set, the business address
          and tax registrations required to perform the tax calculation are loaded
          from this account. The tax transaction is returned in the report of the
          connected account.
    type: object
  stripe.SubscriptionAutomaticTaxLiability:
    properties:
      account:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The connected account being referenced when `type` is `account`.
      type:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionAutomaticTaxLiabilityType'
        description: Type of the account referenced.
    type: object
  stripe.SubscriptionAutomaticTaxLiabilityType:
    enum:
    - account
    - self
    type: string
    x-enum-varnames:
    - SubscriptionAutomaticTaxLiabilityTypeAccount
    - SubscriptionAutomaticTaxLiabilityTypeSelf
  stripe.SubscriptionBillingCycleAnchorConfig:
    properties:
      day_of_month:
        description: The day of the month of the billing_cycle_anchor.
        type: integer
      hour:
        description: The hour of the day of the billing_cycle_anchor.
        type: integer
      minute:
        description: The minute of the hour of the billing_cycle_anchor.
        type: integer
      month:
        description: The month to start full cycle billing periods.
        type: integer
      second:
        description: The second of the minute of the billing_cycle_anchor.
        type: integer
    type: object
  stripe.SubscriptionBillingThresholds:
    properties:
      amount_gte:
        description: Monetary threshold that triggers the subscription to create an
          invoice
        type: integer
      reset_billing_cycle_anchor:
        description: Indicates if the `billing_cycle_anchor` should be reset when
          a threshold is reached. If true, `billing_cycle_anchor` will be updated
          to the date/time the threshold was last reached; otherwise, the value will
          remain unchanged. This value may not be `true` if the subscription contains
          items with plans that have `aggregate_usage=last_ever`.
        type: boolean
    type: object
  stripe.SubscriptionCancellationDetails:
    properties:
      comment:
        description: Additional comments about why the user canceled the subscription,
          if the subscription was canceled explicitly by the user.
        type: string
      feedback:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionCancellationDetailsFeedback'
        description: The customer submitted reason for why they canceled, if the subscription
          was canceled explicitly by the user.
      reason:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionCancellationDetailsReason'
        description: Why this subscription was canceled.
    type: object
  stripe.SubscriptionCancellationDetailsFeedback:
    enum:
    - customer_service
    - low_quality
    - missing_features
    - other
    - switched_service
    - too_complex
    - too_expensive
    - unused
    type: string
    x-enum-varnames:
    - SubscriptionCancellationDetailsFeedbackCustomerService
    - SubscriptionCancellationDetailsFeedbackLowQuality
    - SubscriptionCancellationDetailsFeedbackMissingFeatures
    - SubscriptionCancellationDetailsFeedbackOther
    - SubscriptionCancellationDetailsFeedbackSwitchedService
    - SubscriptionCancellationDetailsFeedbackTooComplex
    - SubscriptionCancellationDetailsFeedbackTooExpensive
    - SubscriptionCancellationDetailsFeedbackUnused
  stripe.SubscriptionCancellationDetailsReason:
    enum:
    - cancellation_requested
    - payment_disputed
    - payment_failed
    type: string
    x-enum-varnames:
    - SubscriptionCancellationDetailsReasonCancellationRequested
    - SubscriptionCancellationDetailsReasonPaymentDisputed
    - SubscriptionCancellationDetailsReasonPaymentFailed
  stripe.SubscriptionCollectionMethod:
    enum:
    - charge_automatically
    - send_invoice
    type: string
    x-enum-varnames:
    - SubscriptionCollectionMethodChargeAutomatically
    - SubscriptionCollectionMethodSendInvoice
  stripe.SubscriptionInvoiceSettings:
    properties:
      account_tax_ids:
        description: The account tax IDs associated with the subscription. Will be
          set on invoices generated by the subscription.
        items:
          $ref: '#/definitions/stripe.TaxID'
        type: array
      issuer:
        $ref: '#/definitions/stripe.SubscriptionInvoiceSettingsIssuer'
    type: object
  stripe.SubscriptionInvoiceSettingsIssuer:
    properties:
      account:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The connected account being referenced when `type` is `account`.
      type:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionInvoiceSettingsIssuerType'
        description: Type of the account referenced.
    type: object
  stripe.SubscriptionInvoiceSettingsIssuerType:
    enum:
    - account
    - self
    type: string
    x-enum-varnames:
    - SubscriptionInvoiceSettingsIssuerTypeAccount
    - SubscriptionInvoiceSettingsIssuerTypeSelf
  stripe.SubscriptionItem:
    properties:
      billing_thresholds:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionItemBillingThresholds'
        description: Define thresholds at which an invoice will be sent, and the related
          subscription advanced to a new billing period
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      deleted:
        type: boolean
      discounts:
        description: The discounts applied to the subscription item. Subscription
          item discounts are applied before subscription discounts. Use `expand[]=discounts`
          to expand each discount.
        items:
          $ref: '#/definitions/stripe.Discount'
        type: array
      id:
        description: Unique identifier for the object.
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      plan:
        allOf:
        - $ref: '#/definitions/stripe.Plan'
        description: |-
          You can now model subscriptions more flexibly using the [Prices API](https://stripe.com/docs/api#prices). It replaces the Plans API and is backwards compatible to simplify your migration.

          Plans define the base price, currency, and billing cycle for recurring purchases of products.
          [Products](https://stripe.com/docs/api#products) help you track inventory or provisioning, and plans help you track pricing. Different physical goods or levels of service should be represented by products, and pricing options should be represented by plans. This approach lets you change prices without having to change your provisioning scheme.

          For example, you might have a single "gold" product that has plans for $10/month, $100/year, €9/month, and €90/year.

          Related guides: [Set up a subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription) and more about [products and prices](https://stripe.com/docs/products-prices/overview).
      price:
        allOf:
        - $ref: '#/definitions/stripe.Price'
        description: |-
          Prices define the unit cost, currency, and (optional) billing cycle for both recurring and one-time purchases of products.
          [Products](https://stripe.com/docs/api#products) help you track inventory or provisioning, and prices help you track payment terms. Different physical goods or levels of service should be represented by products, and pricing options should be represented by prices. This approach lets you change prices without having to change your provisioning scheme.

          For example, you might have a single "gold" product that has prices for $10/month, $100/year, and €9 once.

          Related guides: [Set up a subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription), [create an invoice](https://stripe.com/docs/billing/invoices/create), and more about [products and prices](https://stripe.com/docs/products-prices/overview).
      quantity:
        description: The [quantity](https://stripe.com/docs/subscriptions/quantities)
          of the plan to which the customer should be subscribed.
        type: integer
      subscription:
        description: The `subscription` this `subscription_item` belongs to.
        type: string
      tax_rates:
        description: The tax rates which apply to this `subscription_item`. When set,
          the `default_tax_rates` on the subscription do not apply to this `subscription_item`.
        items:
          $ref: '#/definitions/stripe.TaxRate'
        type: array
    type: object
  stripe.SubscriptionItemBillingThresholds:
    properties:
      usage_gte:
        description: Usage threshold that triggers the subscription to create an invoice
        type: integer
    type: object
  stripe.SubscriptionItemList:
    properties:
      data:
        items:
          $ref: '#/definitions/stripe.SubscriptionItem'
        type: array
      has_more:
        type: boolean
      total_count:
        description: |-
          TotalCount is the total number of objects in the collection (beyond just
          on the current page). This is not returned in most list calls.

          Deprecated: TotalCount is only included in some legacy situations and
          not generally available anymore.
        type: integer
      url:
        type: string
    type: object
  stripe.SubscriptionList:
    properties:
      data:
        items:
          $ref: '#/definitions/stripe.Subscription'
        type: array
      has_more:
        type: boolean
      total_count:
        description: |-
          TotalCount is the total number of objects in the collection (beyond just
          on the current page). This is not returned in most list calls.

          Deprecated: TotalCount is only included in some legacy situations and
          not generally available anymore.
        type: integer
      url:
        type: string
    type: object
  stripe.SubscriptionPauseCollection:
    properties:
      behavior:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionPauseCollectionBehavior'
        description: The payment collection behavior for this subscription while paused.
          One of `keep_as_draft`, `mark_uncollectible`, or `void`.
      resumes_at:
        description: The time after which the subscription will resume collecting
          payments.
        type: integer
    type: object
  stripe.SubscriptionPauseCollectionBehavior:
    enum:
    - keep_as_draft
    - mark_uncollectible
    - void
    type: string
    x-enum-varnames:
    - SubscriptionPauseCollectionBehaviorKeepAsDraft
    - SubscriptionPauseCollectionBehaviorMarkUncollectible
    - SubscriptionPauseCollectionBehaviorVoid
  stripe.SubscriptionPaymentSettings:
    properties:
      payment_method_options:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionPaymentSettingsPaymentMethodOptions'
        description: Payment-method-specific configuration to provide to invoices
          created by the subscription.
      payment_method_types:
        description: The list of payment method types to provide to every invoice
          created by the subscription. If not set, Stripe attempts to automatically
          determine the types to use by looking at the invoice's default payment method,
          the subscription's default payment method, the customer's default payment
          method, and your [invoice template settings](https://dashboard.stripe.com/settings/billing/invoice).
        items:
          $ref: '#/definitions/stripe.SubscriptionPaymentSettingsPaymentMethodType'
        type: array
      save_default_payment_method:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionPaymentSettingsSaveDefaultPaymentMethod'
        description: Configure whether Stripe updates `subscription.default_payment_method`
          when payment succeeds. Defaults to `off`.
    type: object
  stripe.SubscriptionPaymentSettingsPaymentMethodOptions:
    properties:
      acss_debit:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionPaymentSettingsPaymentMethodOptionsACSSDebit'
        description: This sub-hash contains details about the Canadian pre-authorized
          debit payment method options to pass to invoices created by the subscription.
      bancontact:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionPaymentSettingsPaymentMethodOptionsBancontact'
        description: This sub-hash contains details about the Bancontact payment method
          options to pass to invoices created by the subscription.
      card:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionPaymentSettingsPaymentMethodOptionsCard'
        description: This sub-hash contains details about the Card payment method
          options to pass to invoices created by the subscription.
      customer_balance:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionPaymentSettingsPaymentMethodOptionsCustomerBalance'
        description: This sub-hash contains details about the Bank transfer payment
          method options to pass to invoices created by the subscription.
      konbini:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionPaymentSettingsPaymentMethodOptionsKonbini'
        description: This sub-hash contains details about the Konbini payment method
          options to pass to invoices created by the subscription.
      sepa_debit:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionPaymentSettingsPaymentMethodOptionsSEPADebit'
        description: This sub-hash contains details about the SEPA Direct Debit payment
          method options to pass to invoices created by the subscription.
      us_bank_account:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionPaymentSettingsPaymentMethodOptionsUSBankAccount'
        description: This sub-hash contains details about the ACH direct debit payment
          method options to pass to invoices created by the subscription.
    type: object
  stripe.SubscriptionPaymentSettingsPaymentMethodOptionsACSSDebit:
    properties:
      mandate_options:
        $ref: '#/definitions/stripe.SubscriptionPaymentSettingsPaymentMethodOptionsACSSDebitMandateOptions'
      verification_method:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionPaymentSettingsPaymentMethodOptionsACSSDebitVerificationMethod'
        description: Bank account verification method.
    type: object
  stripe.SubscriptionPaymentSettingsPaymentMethodOptionsACSSDebitMandateOptions:
    properties:
      transaction_type:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionPaymentSettingsPaymentMethodOptionsACSSDebitMandateOptionsTransactionType'
        description: Transaction type of the mandate.
    type: object
  stripe.SubscriptionPaymentSettingsPaymentMethodOptionsACSSDebitMandateOptionsTransactionType:
    enum:
    - business
    - personal
    type: string
    x-enum-varnames:
    - SubscriptionPaymentSettingsPaymentMethodOptionsACSSDebitMandateOptionsTransactionTypeBusiness
    - SubscriptionPaymentSettingsPaymentMethodOptionsACSSDebitMandateOptionsTransactionTypePersonal
  stripe.SubscriptionPaymentSettingsPaymentMethodOptionsACSSDebitVerificationMethod:
    enum:
    - automatic
    - instant
    - microdeposits
    type: string
    x-enum-varnames:
    - SubscriptionPaymentSettingsPaymentMethodOptionsACSSDebitVerificationMethodAutomatic
    - SubscriptionPaymentSettingsPaymentMethodOptionsACSSDebitVerificationMethodInstant
    - SubscriptionPaymentSettingsPaymentMethodOptionsACSSDebitVerificationMethodMicrodeposits
  stripe.SubscriptionPaymentSettingsPaymentMethodOptionsBancontact:
    properties:
      preferred_language:
        description: Preferred language of the Bancontact authorization page that
          the customer is redirected to.
        type: string
    type: object
  stripe.SubscriptionPaymentSettingsPaymentMethodOptionsCard:
    properties:
      mandate_options:
        $ref: '#/definitions/stripe.SubscriptionPaymentSettingsPaymentMethodOptionsCardMandateOptions'
      network:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionPaymentSettingsPaymentMethodOptionsCardNetwork'
        description: Selected network to process this Subscription on. Depends on
          the available networks of the card attached to the Subscription. Can be
          only set confirm-time.
      request_three_d_secure:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionPaymentSettingsPaymentMethodOptionsCardRequestThreeDSecure'
        description: We strongly recommend that you rely on our SCA Engine to automatically
          prompt your customers for authentication based on risk level and [other
          requirements](https://stripe.com/docs/strong-customer-authentication). However,
          if you wish to request 3D Secure based on logic from your own fraud engine,
          provide this option. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds)
          for more information on how this configuration interacts with Radar and
          our SCA Engine.
    type: object
  stripe.SubscriptionPaymentSettingsPaymentMethodOptionsCardMandateOptions:
    properties:
      amount:
        description: Amount to be charged for future payments.
        type: integer
      amount_type:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionPaymentSettingsPaymentMethodOptionsCardMandateOptionsAmountType'
        description: One of `fixed` or `maximum`. If `fixed`, the `amount` param refers
          to the exact amount to be charged in future payments. If `maximum`, the
          amount charged can be up to the value passed for the `amount` param.
      description:
        description: A description of the mandate or subscription that is meant to
          be displayed to the customer.
        type: string
    type: object
  stripe.SubscriptionPaymentSettingsPaymentMethodOptionsCardMandateOptionsAmountType:
    enum:
    - fixed
    - maximum
    type: string
    x-enum-varnames:
    - SubscriptionPaymentSettingsPaymentMethodOptionsCardMandateOptionsAmountTypeFixed
    - SubscriptionPaymentSettingsPaymentMethodOptionsCardMandateOptionsAmountTypeMaximum
  stripe.SubscriptionPaymentSettingsPaymentMethodOptionsCardNetwork:
    enum:
    - amex
    - cartes_bancaires
    - diners
    - discover
    - eftpos_au
    - girocard
    - interac
    - jcb
    - mastercard
    - unionpay
    - unknown
    - visa
    type: string
    x-enum-varnames:
    - SubscriptionPaymentSettingsPaymentMethodOptionsCardNetworkAmex
    - SubscriptionPaymentSettingsPaymentMethodOptionsCardNetworkCartesBancaires
    - SubscriptionPaymentSettingsPaymentMethodOptionsCardNetworkDiners
    - SubscriptionPaymentSettingsPaymentMethodOptionsCardNetworkDiscover
    - SubscriptionPaymentSettingsPaymentMethodOptionsCardNetworkEFTPOSAU
    - SubscriptionPaymentSettingsPaymentMethodOptionsCardNetworkGirocard
    - SubscriptionPaymentSettingsPaymentMethodOptionsCardNetworkInterac
    - SubscriptionPaymentSettingsPaymentMethodOptionsCardNetworkJCB
    - SubscriptionPaymentSettingsPaymentMethodOptionsCardNetworkMastercard
    - SubscriptionPaymentSettingsPaymentMethodOptionsCardNetworkUnionpay
    - SubscriptionPaymentSettingsPaymentMethodOptionsCardNetworkUnknown
    - SubscriptionPaymentSettingsPaymentMethodOptionsCardNetworkVisa
  stripe.SubscriptionPaymentSettingsPaymentMethodOptionsCardRequestThreeDSecure:
    enum:
    - any
    - automatic
    - challenge
    type: string
    x-enum-varnames:
    - SubscriptionPaymentSettingsPaymentMethodOptionsCardRequestThreeDSecureAny
    - SubscriptionPaymentSettingsPaymentMethodOptionsCardRequestThreeDSecureAutomatic
    - SubscriptionPaymentSettingsPaymentMethodOptionsCardRequestThreeDSecureChallenge
  stripe.SubscriptionPaymentSettingsPaymentMethodOptionsCustomerBalance:
    properties:
      bank_transfer:
        $ref: '#/definitions/stripe.SubscriptionPaymentSettingsPaymentMethodOptionsCustomerBalanceBankTransfer'
      funding_type:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionPaymentSettingsPaymentMethodOptionsCustomerBalanceFundingType'
        description: 'The funding method type to be used when there are not enough
          funds in the customer balance. Permitted values include: `bank_transfer`.'
    type: object
  stripe.SubscriptionPaymentSettingsPaymentMethodOptionsCustomerBalanceBankTransfer:
    properties:
      eu_bank_transfer:
        $ref: '#/definitions/stripe.SubscriptionPaymentSettingsPaymentMethodOptionsCustomerBalanceBankTransferEUBankTransfer'
      type:
        description: 'The bank transfer type that can be used for funding. Permitted
          values include: `eu_bank_transfer`, `gb_bank_transfer`, `jp_bank_transfer`,
          `mx_bank_transfer`, or `us_bank_transfer`.'
        type: string
    type: object
  stripe.SubscriptionPaymentSettingsPaymentMethodOptionsCustomerBalanceBankTransferEUBankTransfer:
    properties:
      country:
        description: 'The desired country code of the bank account information. Permitted
          values include: `BE`, `DE`, `ES`, `FR`, `IE`, or `NL`.'
        type: string
    type: object
  stripe.SubscriptionPaymentSettingsPaymentMethodOptionsCustomerBalanceFundingType:
    enum:
    - bank_transfer
    type: string
    x-enum-varnames:
    - SubscriptionPaymentSettingsPaymentMethodOptionsCustomerBalanceFundingTypeBankTransfer
  stripe.SubscriptionPaymentSettingsPaymentMethodOptionsKonbini:
    type: object
  stripe.SubscriptionPaymentSettingsPaymentMethodOptionsSEPADebit:
    type: object
  stripe.SubscriptionPaymentSettingsPaymentMethodOptionsUSBankAccount:
    properties:
      financial_connections:
        $ref: '#/definitions/stripe.SubscriptionPaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnections'
      verification_method:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionPaymentSettingsPaymentMethodOptionsUSBankAccountVerificationMethod'
        description: Bank account verification method.
    type: object
  stripe.SubscriptionPaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnections:
    properties:
      filters:
        $ref: '#/definitions/stripe.SubscriptionPaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsFilters'
      permissions:
        description: The list of permissions to request. The `payment_method` permission
          must be included.
        items:
          $ref: '#/definitions/stripe.SubscriptionPaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsPermission'
        type: array
      prefetch:
        description: Data features requested to be retrieved upon account creation.
        items:
          $ref: '#/definitions/stripe.SubscriptionPaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsPrefetch'
        type: array
    type: object
  stripe.SubscriptionPaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsFilters:
    properties:
      account_subcategories:
        description: The account subcategories to use to filter for possible accounts
          to link. Valid subcategories are `checking` and `savings`.
        items:
          $ref: '#/definitions/stripe.SubscriptionPaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsFiltersAccountSubcategory'
        type: array
    type: object
  stripe.SubscriptionPaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsFiltersAccountSubcategory:
    enum:
    - checking
    - savings
    type: string
    x-enum-varnames:
    - SubscriptionPaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsFiltersAccountSubcategoryChecking
    - SubscriptionPaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsFiltersAccountSubcategorySavings
  stripe.SubscriptionPaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsPermission:
    enum:
    - balances
    - ownership
    - payment_method
    - transactions
    type: string
    x-enum-varnames:
    - SubscriptionPaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsPermissionBalances
    - SubscriptionPaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsPermissionOwnership
    - SubscriptionPaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsPermissionPaymentMethod
    - SubscriptionPaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsPermissionTransactions
  stripe.SubscriptionPaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsPrefetch:
    enum:
    - balances
    - ownership
    - transactions
    type: string
    x-enum-varnames:
    - SubscriptionPaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsPrefetchBalances
    - SubscriptionPaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsPrefetchOwnership
    - SubscriptionPaymentSettingsPaymentMethodOptionsUSBankAccountFinancialConnectionsPrefetchTransactions
  stripe.SubscriptionPaymentSettingsPaymentMethodOptionsUSBankAccountVerificationMethod:
    enum:
    - automatic
    - instant
    - microdeposits
    type: string
    x-enum-varnames:
    - SubscriptionPaymentSettingsPaymentMethodOptionsUSBankAccountVerificationMethodAutomatic
    - SubscriptionPaymentSettingsPaymentMethodOptionsUSBankAccountVerificationMethodInstant
    - SubscriptionPaymentSettingsPaymentMethodOptionsUSBankAccountVerificationMethodMicrodeposits
  stripe.SubscriptionPaymentSettingsPaymentMethodType:
    enum:
    - ach_credit_transfer
    - ach_debit
    - acss_debit
    - amazon_pay
    - au_becs_debit
    - bacs_debit
    - bancontact
    - boleto
    - card
    - cashapp
    - customer_balance
    - eps
    - fpx
    - giropay
    - grabpay
    - ideal
    - jp_credit_transfer
    - kakao_pay
    - konbini
    - kr_card
    - link
    - multibanco
    - naver_pay
    - p24
    - payco
    - paynow
    - paypal
    - promptpay
    - revolut_pay
    - sepa_credit_transfer
    - sepa_debit
    - sofort
    - swish
    - us_bank_account
    - wechat_pay
    type: string
    x-enum-varnames:
    - SubscriptionPaymentSettingsPaymentMethodTypeACHCreditTransfer
    - SubscriptionPaymentSettingsPaymentMethodTypeACHDebit
    - SubscriptionPaymentSettingsPaymentMethodTypeACSSDebit
    - SubscriptionPaymentSettingsPaymentMethodTypeAmazonPay
    - SubscriptionPaymentSettingsPaymentMethodTypeAUBECSDebit
    - SubscriptionPaymentSettingsPaymentMethodTypeBACSDebit
    - SubscriptionPaymentSettingsPaymentMethodTypeBancontact
    - SubscriptionPaymentSettingsPaymentMethodTypeBoleto
    - SubscriptionPaymentSettingsPaymentMethodTypeCard
    - SubscriptionPaymentSettingsPaymentMethodTypeCashApp
    - SubscriptionPaymentSettingsPaymentMethodTypeCustomerBalance
    - SubscriptionPaymentSettingsPaymentMethodTypeEPS
    - SubscriptionPaymentSettingsPaymentMethodTypeFPX
    - SubscriptionPaymentSettingsPaymentMethodTypeGiropay
    - SubscriptionPaymentSettingsPaymentMethodTypeGrabpay
    - SubscriptionPaymentSettingsPaymentMethodTypeIDEAL
    - SubscriptionPaymentSettingsPaymentMethodTypeJPCreditTransfer
    - SubscriptionPaymentSettingsPaymentMethodTypeKakaoPay
    - SubscriptionPaymentSettingsPaymentMethodTypeKonbini
    - SubscriptionPaymentSettingsPaymentMethodTypeKrCard
    - SubscriptionPaymentSettingsPaymentMethodTypeLink
    - SubscriptionPaymentSettingsPaymentMethodTypeMultibanco
    - SubscriptionPaymentSettingsPaymentMethodTypeNaverPay
    - SubscriptionPaymentSettingsPaymentMethodTypeP24
    - SubscriptionPaymentSettingsPaymentMethodTypePayco
    - SubscriptionPaymentSettingsPaymentMethodTypePayNow
    - SubscriptionPaymentSettingsPaymentMethodTypePaypal
    - SubscriptionPaymentSettingsPaymentMethodTypePromptPay
    - SubscriptionPaymentSettingsPaymentMethodTypeRevolutPay
    - SubscriptionPaymentSettingsPaymentMethodTypeSEPACreditTransfer
    - SubscriptionPaymentSettingsPaymentMethodTypeSEPADebit
    - SubscriptionPaymentSettingsPaymentMethodTypeSofort
    - SubscriptionPaymentSettingsPaymentMethodTypeSwish
    - SubscriptionPaymentSettingsPaymentMethodTypeUSBankAccount
    - SubscriptionPaymentSettingsPaymentMethodTypeWeChatPay
  stripe.SubscriptionPaymentSettingsSaveDefaultPaymentMethod:
    enum:
    - "off"
    - on_subscription
    type: string
    x-enum-varnames:
    - SubscriptionPaymentSettingsSaveDefaultPaymentMethodOff
    - SubscriptionPaymentSettingsSaveDefaultPaymentMethodOnSubscription
  stripe.SubscriptionPendingInvoiceItemInterval:
    properties:
      interval:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionPendingInvoiceItemIntervalInterval'
        description: Specifies invoicing frequency. Either `day`, `week`, `month`
          or `year`.
      interval_count:
        description: The number of intervals between invoices. For example, `interval=month`
          and `interval_count=3` bills every 3 months. Maximum of one year interval
          allowed (1 year, 12 months, or 52 weeks).
        type: integer
    type: object
  stripe.SubscriptionPendingInvoiceItemIntervalInterval:
    enum:
    - day
    - month
    - week
    - year
    type: string
    x-enum-varnames:
    - SubscriptionPendingInvoiceItemIntervalIntervalDay
    - SubscriptionPendingInvoiceItemIntervalIntervalMonth
    - SubscriptionPendingInvoiceItemIntervalIntervalWeek
    - SubscriptionPendingInvoiceItemIntervalIntervalYear
  stripe.SubscriptionPendingUpdate:
    properties:
      billing_cycle_anchor:
        description: If the update is applied, determines the date of the first full
          invoice, and, for plans with `month` or `year` intervals, the day of the
          month for subsequent invoices. The timestamp is in UTC format.
        type: integer
      expires_at:
        description: The point after which the changes reflected by this update will
          be discarded and no longer applied.
        type: integer
      subscription_items:
        description: List of subscription items, each with an attached plan, that
          will be set if the update is applied.
        items:
          $ref: '#/definitions/stripe.SubscriptionItem'
        type: array
      trial_end:
        description: Unix timestamp representing the end of the trial period the customer
          will get before being charged for the first time, if the update is applied.
        type: integer
      trial_from_plan:
        description: Indicates if a plan's `trial_period_days` should be applied to
          the subscription. Setting `trial_end` per subscription is preferred, and
          this defaults to `false`. Setting this flag to `true` together with `trial_end`
          is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials)
          to learn more.
        type: boolean
    type: object
  stripe.SubscriptionSchedule:
    properties:
      application:
        allOf:
        - $ref: '#/definitions/stripe.Application'
        description: ID of the Connect Application that created the schedule.
      canceled_at:
        description: Time at which the subscription schedule was canceled. Measured
          in seconds since the Unix epoch.
        type: integer
      completed_at:
        description: Time at which the subscription schedule was completed. Measured
          in seconds since the Unix epoch.
        type: integer
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      current_phase:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionScheduleCurrentPhase'
        description: Object representing the start and end dates for the current phase
          of the subscription schedule, if it is `active`.
      customer:
        allOf:
        - $ref: '#/definitions/stripe.Customer'
        description: ID of the customer who owns the subscription schedule.
      default_settings:
        $ref: '#/definitions/stripe.SubscriptionScheduleDefaultSettings'
      end_behavior:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionScheduleEndBehavior'
        description: Behavior of the subscription schedule and underlying subscription
          when it ends. Possible values are `release` or `cancel` with the default
          being `release`. `release` will end the subscription schedule and keep the
          underlying subscription running. `cancel` will end the subscription schedule
          and cancel the underlying subscription.
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      phases:
        description: Configuration for the subscription schedule's phases.
        items:
          $ref: '#/definitions/stripe.SubscriptionSchedulePhase'
        type: array
      released_at:
        description: Time at which the subscription schedule was released. Measured
          in seconds since the Unix epoch.
        type: integer
      released_subscription:
        allOf:
        - $ref: '#/definitions/stripe.Subscription'
        description: ID of the subscription once managed by the subscription schedule
          (if it is released).
      status:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionScheduleStatus'
        description: The present status of the subscription schedule. Possible values
          are `not_started`, `active`, `completed`, `released`, and `canceled`. You
          can read more about the different states in our [behavior guide](https://stripe.com/docs/billing/subscriptions/subscription-schedules).
      subscription:
        allOf:
        - $ref: '#/definitions/stripe.Subscription'
        description: ID of the subscription managed by the subscription schedule.
      test_clock:
        allOf:
        - $ref: '#/definitions/stripe.TestHelpersTestClock'
        description: ID of the test clock this subscription schedule belongs to.
    type: object
  stripe.SubscriptionScheduleCurrentPhase:
    properties:
      end_date:
        description: The end of this phase of the subscription schedule.
        type: integer
      start_date:
        description: The start of this phase of the subscription schedule.
        type: integer
    type: object
  stripe.SubscriptionScheduleDefaultSettings:
    properties:
      application_fee_percent:
        description: A non-negative decimal between 0 and 100, with at most two decimal
          places. This represents the percentage of the subscription invoice total
          that will be transferred to the application owner's Stripe account during
          this phase of the schedule.
        type: number
      automatic_tax:
        $ref: '#/definitions/stripe.SubscriptionAutomaticTax'
      billing_cycle_anchor:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionScheduleDefaultSettingsBillingCycleAnchor'
        description: Possible values are `phase_start` or `automatic`. If `phase_start`
          then billing cycle anchor of the subscription is set to the start of the
          phase when entering the phase. If `automatic` then the billing cycle anchor
          is automatically modified as needed when entering the phase. For more information,
          see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).
      billing_thresholds:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionBillingThresholds'
        description: Define thresholds at which an invoice will be sent, and the subscription
          advanced to a new billing period
      collection_method:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionCollectionMethod'
        description: Either `charge_automatically`, or `send_invoice`. When charging
          automatically, Stripe will attempt to pay the underlying subscription at
          the end of each billing cycle using the default source attached to the customer.
          When sending an invoice, Stripe will email your customer an invoice with
          payment instructions and mark the subscription as `active`.
      default_payment_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethod'
        description: ID of the default payment method for the subscription schedule.
          If not set, invoices will use the default payment method in the customer's
          invoice settings.
      description:
        description: Subscription description, meant to be displayable to the customer.
          Use this field to optionally store an explanation of the subscription for
          rendering in Stripe surfaces and certain local payment methods UIs.
        type: string
      invoice_settings:
        $ref: '#/definitions/stripe.SubscriptionScheduleDefaultSettingsInvoiceSettings'
      on_behalf_of:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The account (if any) the charge was made on behalf of for charges
          associated with the schedule's subscription. See the Connect documentation
          for details.
      transfer_data:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionTransferData'
        description: The account (if any) the associated subscription's payments will
          be attributed to for tax reporting, and where funds from each payment will
          be transferred to for each of the subscription's invoices.
    type: object
  stripe.SubscriptionScheduleDefaultSettingsBillingCycleAnchor:
    enum:
    - automatic
    - phase_start
    type: string
    x-enum-varnames:
    - SubscriptionScheduleDefaultSettingsBillingCycleAnchorAutomatic
    - SubscriptionScheduleDefaultSettingsBillingCycleAnchorPhaseStart
  stripe.SubscriptionScheduleDefaultSettingsInvoiceSettings:
    properties:
      account_tax_ids:
        description: The account tax IDs associated with the subscription schedule.
          Will be set on invoices generated by the subscription schedule.
        items:
          $ref: '#/definitions/stripe.TaxID'
        type: array
      days_until_due:
        description: Number of days within which a customer must pay invoices generated
          by this subscription schedule. This value will be `null` for subscription
          schedules where `billing=charge_automatically`.
        type: integer
      issuer:
        $ref: '#/definitions/stripe.SubscriptionScheduleDefaultSettingsInvoiceSettingsIssuer'
    type: object
  stripe.SubscriptionScheduleDefaultSettingsInvoiceSettingsIssuer:
    properties:
      account:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The connected account being referenced when `type` is `account`.
      type:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionScheduleDefaultSettingsInvoiceSettingsIssuerType'
        description: Type of the account referenced.
    type: object
  stripe.SubscriptionScheduleDefaultSettingsInvoiceSettingsIssuerType:
    enum:
    - account
    - self
    type: string
    x-enum-varnames:
    - SubscriptionScheduleDefaultSettingsInvoiceSettingsIssuerTypeAccount
    - SubscriptionScheduleDefaultSettingsInvoiceSettingsIssuerTypeSelf
  stripe.SubscriptionScheduleEndBehavior:
    enum:
    - cancel
    - none
    - release
    - renew
    type: string
    x-enum-varnames:
    - SubscriptionScheduleEndBehaviorCancel
    - SubscriptionScheduleEndBehaviorNone
    - SubscriptionScheduleEndBehaviorRelease
    - SubscriptionScheduleEndBehaviorRenew
  stripe.SubscriptionSchedulePhase:
    properties:
      add_invoice_items:
        description: A list of prices and quantities that will generate invoice items
          appended to the next invoice for this phase.
        items:
          $ref: '#/definitions/stripe.SubscriptionSchedulePhaseAddInvoiceItem'
        type: array
      application_fee_percent:
        description: A non-negative decimal between 0 and 100, with at most two decimal
          places. This represents the percentage of the subscription invoice total
          that will be transferred to the application owner's Stripe account during
          this phase of the schedule.
        type: number
      automatic_tax:
        $ref: '#/definitions/stripe.SubscriptionAutomaticTax'
      billing_cycle_anchor:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionSchedulePhaseBillingCycleAnchor'
        description: Possible values are `phase_start` or `automatic`. If `phase_start`
          then billing cycle anchor of the subscription is set to the start of the
          phase when entering the phase. If `automatic` then the billing cycle anchor
          is automatically modified as needed when entering the phase. For more information,
          see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).
      billing_thresholds:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionBillingThresholds'
        description: Define thresholds at which an invoice will be sent, and the subscription
          advanced to a new billing period
      collection_method:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionCollectionMethod'
        description: Either `charge_automatically`, or `send_invoice`. When charging
          automatically, Stripe will attempt to pay the underlying subscription at
          the end of each billing cycle using the default source attached to the customer.
          When sending an invoice, Stripe will email your customer an invoice with
          payment instructions and mark the subscription as `active`.
      coupon:
        allOf:
        - $ref: '#/definitions/stripe.Coupon'
        description: ID of the coupon to use during this phase of the subscription
          schedule.
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      default_payment_method:
        allOf:
        - $ref: '#/definitions/stripe.PaymentMethod'
        description: ID of the default payment method for the subscription schedule.
          It must belong to the customer associated with the subscription schedule.
          If not set, invoices will use the default payment method in the customer's
          invoice settings.
      default_tax_rates:
        description: The default tax rates to apply to the subscription during this
          phase of the subscription schedule.
        items:
          $ref: '#/definitions/stripe.TaxRate'
        type: array
      description:
        description: Subscription description, meant to be displayable to the customer.
          Use this field to optionally store an explanation of the subscription for
          rendering in Stripe surfaces and certain local payment methods UIs.
        type: string
      discounts:
        description: The stackable discounts that will be applied to the subscription
          on this phase. Subscription item discounts are applied before subscription
          discounts.
        items:
          $ref: '#/definitions/stripe.SubscriptionSchedulePhaseDiscount'
        type: array
      end_date:
        description: The end of this phase of the subscription schedule.
        type: integer
      invoice_settings:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionSchedulePhaseInvoiceSettings'
        description: The invoice settings applicable during this phase.
      items:
        description: Subscription items to configure the subscription to during this
          phase of the subscription schedule.
        items:
          $ref: '#/definitions/stripe.SubscriptionSchedulePhaseItem'
        type: array
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to a phase. Metadata on a schedule's phase will update
          the underlying subscription's `metadata` when the phase is entered. Updating
          the underlying subscription's `metadata` directly will not affect the current
          phase's `metadata`.
        type: object
      on_behalf_of:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The account (if any) the charge was made on behalf of for charges
          associated with the schedule's subscription. See the Connect documentation
          for details.
      proration_behavior:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionSchedulePhaseProrationBehavior'
        description: If the subscription schedule will prorate when transitioning
          to this phase. Possible values are `create_prorations` and `none`.
      start_date:
        description: The start of this phase of the subscription schedule.
        type: integer
      transfer_data:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionTransferData'
        description: The account (if any) the associated subscription's payments will
          be attributed to for tax reporting, and where funds from each payment will
          be transferred to for each of the subscription's invoices.
      trial_end:
        description: When the trial ends within the phase.
        type: integer
    type: object
  stripe.SubscriptionSchedulePhaseAddInvoiceItem:
    properties:
      discounts:
        description: The stackable discounts that will be applied to the item.
        items:
          $ref: '#/definitions/stripe.SubscriptionSchedulePhaseAddInvoiceItemDiscount'
        type: array
      price:
        allOf:
        - $ref: '#/definitions/stripe.Price'
        description: ID of the price used to generate the invoice item.
      quantity:
        description: The quantity of the invoice item.
        type: integer
      tax_rates:
        description: The tax rates which apply to the item. When set, the `default_tax_rates`
          do not apply to this item.
        items:
          $ref: '#/definitions/stripe.TaxRate'
        type: array
    type: object
  stripe.SubscriptionSchedulePhaseAddInvoiceItemDiscount:
    properties:
      coupon:
        allOf:
        - $ref: '#/definitions/stripe.Coupon'
        description: ID of the coupon to create a new discount for.
      discount:
        allOf:
        - $ref: '#/definitions/stripe.Discount'
        description: ID of an existing discount on the object (or one of its ancestors)
          to reuse.
      promotion_code:
        allOf:
        - $ref: '#/definitions/stripe.PromotionCode'
        description: ID of the promotion code to create a new discount for.
    type: object
  stripe.SubscriptionSchedulePhaseBillingCycleAnchor:
    enum:
    - automatic
    - phase_start
    type: string
    x-enum-varnames:
    - SubscriptionSchedulePhaseBillingCycleAnchorAutomatic
    - SubscriptionSchedulePhaseBillingCycleAnchorPhaseStart
  stripe.SubscriptionSchedulePhaseDiscount:
    properties:
      coupon:
        allOf:
        - $ref: '#/definitions/stripe.Coupon'
        description: ID of the coupon to create a new discount for.
      discount:
        allOf:
        - $ref: '#/definitions/stripe.Discount'
        description: ID of an existing discount on the object (or one of its ancestors)
          to reuse.
      promotion_code:
        allOf:
        - $ref: '#/definitions/stripe.PromotionCode'
        description: ID of the promotion code to create a new discount for.
    type: object
  stripe.SubscriptionSchedulePhaseInvoiceSettings:
    properties:
      account_tax_ids:
        description: The account tax IDs associated with this phase of the subscription
          schedule. Will be set on invoices generated by this phase of the subscription
          schedule.
        items:
          $ref: '#/definitions/stripe.TaxID'
        type: array
      days_until_due:
        description: Number of days within which a customer must pay invoices generated
          by this subscription schedule. This value will be `null` for subscription
          schedules where `billing=charge_automatically`.
        type: integer
      issuer:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionSchedulePhaseInvoiceSettingsIssuer'
        description: The connected account that issues the invoice. The invoice is
          presented with the branding and support information of the specified account.
    type: object
  stripe.SubscriptionSchedulePhaseInvoiceSettingsIssuer:
    properties:
      account:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The connected account being referenced when `type` is `account`.
      type:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionSchedulePhaseInvoiceSettingsIssuerType'
        description: Type of the account referenced.
    type: object
  stripe.SubscriptionSchedulePhaseInvoiceSettingsIssuerType:
    enum:
    - account
    - self
    type: string
    x-enum-varnames:
    - SubscriptionSchedulePhaseInvoiceSettingsIssuerTypeAccount
    - SubscriptionSchedulePhaseInvoiceSettingsIssuerTypeSelf
  stripe.SubscriptionSchedulePhaseItem:
    properties:
      billing_thresholds:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionItemBillingThresholds'
        description: Define thresholds at which an invoice will be sent, and the related
          subscription advanced to a new billing period
      discounts:
        description: The discounts applied to the subscription item. Subscription
          item discounts are applied before subscription discounts. Use `expand[]=discounts`
          to expand each discount.
        items:
          $ref: '#/definitions/stripe.SubscriptionSchedulePhaseItemDiscount'
        type: array
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an item. Metadata on this item will update the underlying
          subscription item's `metadata` when the phase is entered.
        type: object
      plan:
        allOf:
        - $ref: '#/definitions/stripe.Plan'
        description: ID of the plan to which the customer should be subscribed.
      price:
        allOf:
        - $ref: '#/definitions/stripe.Price'
        description: ID of the price to which the customer should be subscribed.
      quantity:
        description: Quantity of the plan to which the customer should be subscribed.
        type: integer
      tax_rates:
        description: The tax rates which apply to this `phase_item`. When set, the
          `default_tax_rates` on the phase do not apply to this `phase_item`.
        items:
          $ref: '#/definitions/stripe.TaxRate'
        type: array
    type: object
  stripe.SubscriptionSchedulePhaseItemDiscount:
    properties:
      coupon:
        allOf:
        - $ref: '#/definitions/stripe.Coupon'
        description: ID of the coupon to create a new discount for.
      discount:
        allOf:
        - $ref: '#/definitions/stripe.Discount'
        description: ID of an existing discount on the object (or one of its ancestors)
          to reuse.
      promotion_code:
        allOf:
        - $ref: '#/definitions/stripe.PromotionCode'
        description: ID of the promotion code to create a new discount for.
    type: object
  stripe.SubscriptionSchedulePhaseProrationBehavior:
    enum:
    - always_invoice
    - create_prorations
    - none
    type: string
    x-enum-varnames:
    - SubscriptionSchedulePhaseProrationBehaviorAlwaysInvoice
    - SubscriptionSchedulePhaseProrationBehaviorCreateProrations
    - SubscriptionSchedulePhaseProrationBehaviorNone
  stripe.SubscriptionScheduleStatus:
    enum:
    - active
    - canceled
    - completed
    - not_started
    - released
    type: string
    x-enum-varnames:
    - SubscriptionScheduleStatusActive
    - SubscriptionScheduleStatusCanceled
    - SubscriptionScheduleStatusCompleted
    - SubscriptionScheduleStatusNotStarted
    - SubscriptionScheduleStatusReleased
  stripe.SubscriptionStatus:
    enum:
    - active
    - canceled
    - incomplete
    - incomplete_expired
    - past_due
    - paused
    - trialing
    - unpaid
    type: string
    x-enum-varnames:
    - SubscriptionStatusActive
    - SubscriptionStatusCanceled
    - SubscriptionStatusIncomplete
    - SubscriptionStatusIncompleteExpired
    - SubscriptionStatusPastDue
    - SubscriptionStatusPaused
    - SubscriptionStatusTrialing
    - SubscriptionStatusUnpaid
  stripe.SubscriptionTransferData:
    properties:
      amount_percent:
        description: A non-negative decimal between 0 and 100, with at most two decimal
          places. This represents the percentage of the subscription invoice total
          that will be transferred to the destination account. By default, the entire
          amount is transferred to the destination.
        type: number
      destination:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The account where funds from the payment will be transferred
          to upon payment success.
    type: object
  stripe.SubscriptionTrialSettings:
    properties:
      end_behavior:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionTrialSettingsEndBehavior'
        description: Defines how a subscription behaves when a free trial ends.
    type: object
  stripe.SubscriptionTrialSettingsEndBehavior:
    properties:
      missing_payment_method:
        allOf:
        - $ref: '#/definitions/stripe.SubscriptionTrialSettingsEndBehaviorMissingPaymentMethod'
        description: Indicates how the subscription should change when the trial ends
          if the user did not provide a payment method.
    type: object
  stripe.SubscriptionTrialSettingsEndBehaviorMissingPaymentMethod:
    enum:
    - cancel
    - create_invoice
    - pause
    type: string
    x-enum-varnames:
    - SubscriptionTrialSettingsEndBehaviorMissingPaymentMethodCancel
    - SubscriptionTrialSettingsEndBehaviorMissingPaymentMethodCreateInvoice
    - SubscriptionTrialSettingsEndBehaviorMissingPaymentMethodPause
  stripe.TaxCode:
    properties:
      description:
        description: A detailed description of which types of products the tax code
          represents.
        type: string
      id:
        description: Unique identifier for the object.
        type: string
      name:
        description: A short name for the tax code.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
    type: object
  stripe.TaxID:
    properties:
      country:
        description: Two-letter ISO code representing the country of the tax ID.
        type: string
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      customer:
        allOf:
        - $ref: '#/definitions/stripe.Customer'
        description: ID of the customer.
      deleted:
        type: boolean
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      owner:
        allOf:
        - $ref: '#/definitions/stripe.TaxIDOwner'
        description: The account or customer the tax ID belongs to.
      type:
        allOf:
        - $ref: '#/definitions/stripe.TaxIDType'
        description: Type of the tax ID, one of `ad_nrt`, `ae_trn`, `ar_cuit`, `au_abn`,
          `au_arn`, `bg_uic`, `bh_vat`, `bo_tin`, `br_cnpj`, `br_cpf`, `by_tin`, `ca_bn`,
          `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `ca_qst`, `ch_uid`,
          `ch_vat`, `cl_tin`, `cn_tin`, `co_nit`, `cr_tin`, `de_stn`, `do_rcn`, `ec_ruc`,
          `eg_tin`, `es_cif`, `eu_oss_vat`, `eu_vat`, `gb_vat`, `ge_vat`, `hk_br`,
          `hr_oib`, `hu_tin`, `id_npwp`, `il_vat`, `in_gst`, `is_vat`, `jp_cn`, `jp_rn`,
          `jp_trn`, `ke_pin`, `kr_brn`, `kz_bin`, `li_uid`, `ma_vat`, `md_vat`, `mx_rfc`,
          `my_frp`, `my_itn`, `my_sst`, `ng_tin`, `no_vat`, `no_voec`, `nz_gst`, `om_vat`,
          `pe_ruc`, `ph_tin`, `ro_tin`, `rs_pib`, `ru_inn`, `ru_kpp`, `sa_vat`, `sg_gst`,
          `sg_uen`, `si_tin`, `sv_nit`, `th_vat`, `tr_tin`, `tw_vat`, `tz_vat`, `ua_vat`,
          `us_ein`, `uy_ruc`, `uz_tin`, `uz_vat`, `ve_rif`, `vn_tin`, or `za_vat`.
          Note that some legacy tax IDs have type `unknown`
      value:
        description: Value of the tax ID.
        type: string
      verification:
        allOf:
        - $ref: '#/definitions/stripe.TaxIDVerification'
        description: Tax ID verification information.
    type: object
  stripe.TaxIDList:
    properties:
      data:
        items:
          $ref: '#/definitions/stripe.TaxID'
        type: array
      has_more:
        type: boolean
      total_count:
        description: |-
          TotalCount is the total number of objects in the collection (beyond just
          on the current page). This is not returned in most list calls.

          Deprecated: TotalCount is only included in some legacy situations and
          not generally available anymore.
        type: integer
      url:
        type: string
    type: object
  stripe.TaxIDOwner:
    properties:
      account:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: The account being referenced when `type` is `account`.
      application:
        allOf:
        - $ref: '#/definitions/stripe.Application'
        description: The Connect Application being referenced when `type` is `application`.
      customer:
        allOf:
        - $ref: '#/definitions/stripe.Customer'
        description: The customer being referenced when `type` is `customer`.
      type:
        allOf:
        - $ref: '#/definitions/stripe.TaxIDOwnerType'
        description: Type of owner referenced.
    type: object
  stripe.TaxIDOwnerType:
    enum:
    - account
    - application
    - customer
    - self
    type: string
    x-enum-varnames:
    - TaxIDOwnerTypeAccount
    - TaxIDOwnerTypeApplication
    - TaxIDOwnerTypeCustomer
    - TaxIDOwnerTypeSelf
  stripe.TaxIDType:
    enum:
    - ad_nrt
    - ae_trn
    - ar_cuit
    - au_abn
    - au_arn
    - bg_uic
    - bh_vat
    - bo_tin
    - br_cnpj
    - br_cpf
    - by_tin
    - ca_bn
    - ca_gst_hst
    - ca_pst_bc
    - ca_pst_mb
    - ca_pst_sk
    - ca_qst
    - ch_uid
    - ch_vat
    - cl_tin
    - cn_tin
    - co_nit
    - cr_tin
    - de_stn
    - do_rcn
    - ec_ruc
    - eg_tin
    - es_cif
    - eu_oss_vat
    - eu_vat
    - gb_vat
    - ge_vat
    - hk_br
    - hr_oib
    - hu_tin
    - id_npwp
    - il_vat
    - in_gst
    - is_vat
    - jp_cn
    - jp_rn
    - jp_trn
    - ke_pin
    - kr_brn
    - kz_bin
    - li_uid
    - ma_vat
    - md_vat
    - mx_rfc
    - my_frp
    - my_itn
    - my_sst
    - ng_tin
    - no_vat
    - no_voec
    - nz_gst
    - om_vat
    - pe_ruc
    - ph_tin
    - ro_tin
    - rs_pib
    - ru_inn
    - ru_kpp
    - sa_vat
    - sg_gst
    - sg_uen
    - si_tin
    - sv_nit
    - th_vat
    - tr_tin
    - tw_vat
    - tz_vat
    - ua_vat
    - unknown
    - us_ein
    - uy_ruc
    - uz_tin
    - uz_vat
    - ve_rif
    - vn_tin
    - za_vat
    type: string
    x-enum-varnames:
    - TaxIDTypeADNRT
    - TaxIDTypeAETRN
    - TaxIDTypeARCUIT
    - TaxIDTypeAUABN
    - TaxIDTypeAUARN
    - TaxIDTypeBGUIC
    - TaxIDTypeBhVAT
    - TaxIDTypeBOTIN
    - TaxIDTypeBRCNPJ
    - TaxIDTypeBRCPF
    - TaxIDTypeByTin
    - TaxIDTypeCABN
    - TaxIDTypeCAGSTHST
    - TaxIDTypeCAPSTBC
    - TaxIDTypeCAPSTMB
    - TaxIDTypeCAPSTSK
    - TaxIDTypeCAQST
    - TaxIDTypeCHUID
    - TaxIDTypeCHVAT
    - TaxIDTypeCLTIN
    - TaxIDTypeCNTIN
    - TaxIDTypeCONIT
    - TaxIDTypeCRTIN
    - TaxIDTypeDEStn
    - TaxIDTypeDORCN
    - TaxIDTypeECRUC
    - TaxIDTypeEGTIN
    - TaxIDTypeESCIF
    - TaxIDTypeEUOSSVAT
    - TaxIDTypeEUVAT
    - TaxIDTypeGBVAT
    - TaxIDTypeGEVAT
    - TaxIDTypeHKBR
    - TaxIDTypeHROIB
    - TaxIDTypeHUTIN
    - TaxIDTypeIDNPWP
    - TaxIDTypeILVAT
    - TaxIDTypeINGST
    - TaxIDTypeISVAT
    - TaxIDTypeJPCN
    - TaxIDTypeJPRN
    - TaxIDTypeJPTRN
    - TaxIDTypeKEPIN
    - TaxIDTypeKRBRN
    - TaxIDTypeKzBin
    - TaxIDTypeLIUID
    - TaxIDTypeMaVAT
    - TaxIDTypeMdVAT
    - TaxIDTypeMXRFC
    - TaxIDTypeMYFRP
    - TaxIDTypeMYITN
    - TaxIDTypeMYSST
    - TaxIDTypeNgTin
    - TaxIDTypeNOVAT
    - TaxIDTypeNOVOEC
    - TaxIDTypeNZGST
    - TaxIDTypeOmVAT
    - TaxIDTypePERUC
    - TaxIDTypePHTIN
    - TaxIDTypeROTIN
    - TaxIDTypeRSPIB
    - TaxIDTypeRUINN
    - TaxIDTypeRUKPP
    - TaxIDTypeSAVAT
    - TaxIDTypeSGGST
    - TaxIDTypeSGUEN
    - TaxIDTypeSITIN
    - TaxIDTypeSVNIT
    - TaxIDTypeTHVAT
    - TaxIDTypeTRTIN
    - TaxIDTypeTWVAT
    - TaxIDTypeTzVAT
    - TaxIDTypeUAVAT
    - TaxIDTypeUnknown
    - TaxIDTypeUSEIN
    - TaxIDTypeUYRUC
    - TaxIDTypeUzTin
    - TaxIDTypeUzVAT
    - TaxIDTypeVERIF
    - TaxIDTypeVNTIN
    - TaxIDTypeZAVAT
  stripe.TaxIDVerification:
    properties:
      status:
        allOf:
        - $ref: '#/definitions/stripe.TaxIDVerificationStatus'
        description: Verification status, one of `pending`, `verified`, `unverified`,
          or `unavailable`.
      verified_address:
        description: Verified address.
        type: string
      verified_name:
        description: Verified name.
        type: string
    type: object
  stripe.TaxIDVerificationStatus:
    enum:
    - pending
    - unavailable
    - unverified
    - verified
    type: string
    x-enum-varnames:
    - TaxIDVerificationStatusPending
    - TaxIDVerificationStatusUnavailable
    - TaxIDVerificationStatusUnverified
    - TaxIDVerificationStatusVerified
  stripe.TaxRate:
    properties:
      active:
        description: Defaults to `true`. When set to `false`, this tax rate cannot
          be used with new applications or Checkout Sessions, but will still work
          for subscriptions and invoices that already have it set.
        type: boolean
      country:
        description: Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
        type: string
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      description:
        description: An arbitrary string attached to the tax rate for your internal
          use only. It will not be visible to your customers.
        type: string
      display_name:
        description: The display name of the tax rates as it will appear to your customer
          on their receipt email, PDF, and the hosted invoice page.
        type: string
      effective_percentage:
        description: |-
          Actual/effective tax rate percentage out of 100. For tax calculations with automatic_tax[enabled]=true,
          this percentage reflects the rate actually used to calculate tax based on the product's taxability
          and whether the user is registered to collect taxes in the corresponding jurisdiction.
        type: number
      flat_amount:
        allOf:
        - $ref: '#/definitions/stripe.TaxRateFlatAmount'
        description: The amount of the tax rate when the `rate_type` is `flat_amount`.
          Tax rates with `rate_type` `percentage` can vary based on the transaction,
          resulting in this field being `null`. This field exposes the amount and
          currency of the flat tax rate.
      id:
        description: Unique identifier for the object.
        type: string
      inclusive:
        description: This specifies if the tax rate is inclusive or exclusive.
        type: boolean
      jurisdiction:
        description: The jurisdiction for the tax rate. You can use this label field
          for tax reporting purposes. It also appears on your customer's invoice.
        type: string
      jurisdiction_level:
        allOf:
        - $ref: '#/definitions/stripe.TaxRateJurisdictionLevel'
        description: The level of the jurisdiction that imposes this tax rate. Will
          be `null` for manually defined tax rates.
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      percentage:
        description: Tax rate percentage out of 100. For tax calculations with automatic_tax[enabled]=true,
          this percentage includes the statutory tax rate of non-taxable jurisdictions.
        type: number
      rate_type:
        allOf:
        - $ref: '#/definitions/stripe.TaxRateRateType'
        description: Indicates the type of tax rate applied to the taxable amount.
          This value can be `null` when no tax applies to the location.
      state:
        description: '[ISO 3166-2 subdivision code](https://en.wikipedia.org/wiki/ISO_3166-2:US),
          without country prefix. For example, "NY" for New York, United States.'
        type: string
      tax_type:
        allOf:
        - $ref: '#/definitions/stripe.TaxRateTaxType'
        description: The high-level tax type, such as `vat` or `sales_tax`.
    type: object
  stripe.TaxRateFlatAmount:
    properties:
      amount:
        description: Amount of the tax when the `rate_type` is `flat_amount`. This
          positive integer represents how much to charge in the smallest currency
          unit (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal
          currency). The amount value supports up to eight digits (e.g., a value of
          99999999 for a USD charge of $999,999.99).
        type: integer
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter ISO currency code, in lowercase.
    type: object
  stripe.TaxRateJurisdictionLevel:
    enum:
    - city
    - country
    - county
    - district
    - multiple
    - state
    type: string
    x-enum-varnames:
    - TaxRateJurisdictionLevelCity
    - TaxRateJurisdictionLevelCountry
    - TaxRateJurisdictionLevelCounty
    - TaxRateJurisdictionLevelDistrict
    - TaxRateJurisdictionLevelMultiple
    - TaxRateJurisdictionLevelState
  stripe.TaxRateRateType:
    enum:
    - flat_amount
    - percentage
    type: string
    x-enum-varnames:
    - TaxRateRateTypeFlatAmount
    - TaxRateRateTypePercentage
  stripe.TaxRateTaxType:
    enum:
    - amusement_tax
    - communications_tax
    - gst
    - hst
    - igst
    - jct
    - lease_tax
    - pst
    - qst
    - retail_delivery_fee
    - rst
    - sales_tax
    - vat
    type: string
    x-enum-varnames:
    - TaxRateTaxTypeAmusementTax
    - TaxRateTaxTypeCommunicationsTax
    - TaxRateTaxTypeGST
    - TaxRateTaxTypeHST
    - TaxRateTaxTypeIGST
    - TaxRateTaxTypeJCT
    - TaxRateTaxTypeLeaseTax
    - TaxRateTaxTypePST
    - TaxRateTaxTypeQST
    - TaxRateTaxTypeRetailDeliveryFee
    - TaxRateTaxTypeRST
    - TaxRateTaxTypeSalesTax
    - TaxRateTaxTypeVAT
  stripe.TestHelpersTestClock:
    properties:
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      deleted:
        type: boolean
      deletes_after:
        description: Time at which this clock is scheduled to auto delete.
        type: integer
      frozen_time:
        description: Time at which all objects belonging to this clock are frozen.
        type: integer
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      name:
        description: The custom name supplied at creation.
        type: string
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      status:
        allOf:
        - $ref: '#/definitions/stripe.TestHelpersTestClockStatus'
        description: The status of the Test Clock.
      status_details:
        $ref: '#/definitions/stripe.TestHelpersTestClockStatusDetails'
    type: object
  stripe.TestHelpersTestClockStatus:
    enum:
    - advancing
    - internal_failure
    - ready
    type: string
    x-enum-varnames:
    - TestHelpersTestClockStatusAdvancing
    - TestHelpersTestClockStatusInternalFailure
    - TestHelpersTestClockStatusReady
  stripe.TestHelpersTestClockStatusDetails:
    properties:
      advancing:
        $ref: '#/definitions/stripe.TestHelpersTestClockStatusDetailsAdvancing'
    type: object
  stripe.TestHelpersTestClockStatusDetailsAdvancing:
    properties:
      target_frozen_time:
        description: The `frozen_time` that the Test Clock is advancing towards.
        type: integer
    type: object
  stripe.Transfer:
    properties:
      amount:
        description: Amount in cents (or local equivalent) to be transferred.
        type: integer
      amount_reversed:
        description: Amount in cents (or local equivalent) reversed (can be less than
          the amount attribute on the transfer if a partial reversal was issued).
        type: integer
      balance_transaction:
        allOf:
        - $ref: '#/definitions/stripe.BalanceTransaction'
        description: Balance transaction that describes the impact of this transfer
          on your account balance.
      created:
        description: Time that this record of the transfer was first created.
        type: integer
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      destination:
        allOf:
        - $ref: '#/definitions/stripe.Account'
        description: ID of the Stripe account the transfer was sent to.
      destination_payment:
        allOf:
        - $ref: '#/definitions/stripe.Charge'
        description: If the destination is a Stripe account, this will be the ID of
          the payment that the destination account received for the transfer.
      id:
        description: Unique identifier for the object.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      reversals:
        allOf:
        - $ref: '#/definitions/stripe.TransferReversalList'
        description: A list of reversals that have been applied to the transfer.
      reversed:
        description: Whether the transfer has been fully reversed. If the transfer
          is only partially reversed, this attribute will still be false.
        type: boolean
      source_transaction:
        allOf:
        - $ref: '#/definitions/stripe.Charge'
        description: ID of the charge that was used to fund the transfer. If null,
          the transfer was funded from the available balance.
      source_type:
        allOf:
        - $ref: '#/definitions/stripe.TransferSourceType'
        description: The source balance this transfer came from. One of `card`, `fpx`,
          or `bank_account`.
      transfer_group:
        description: A string that identifies this transaction as part of a group.
          See the [Connect documentation](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options)
          for details.
        type: string
    type: object
  stripe.TransferReversal:
    properties:
      amount:
        description: Amount, in cents (or local equivalent).
        type: integer
      balance_transaction:
        allOf:
        - $ref: '#/definitions/stripe.BalanceTransaction'
        description: Balance transaction that describes the impact on your account
          balance.
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      currency:
        allOf:
        - $ref: '#/definitions/stripe.Currency'
        description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
      destination_payment_refund:
        allOf:
        - $ref: '#/definitions/stripe.Refund'
        description: Linked payment refund for the transfer reversal.
      id:
        description: Unique identifier for the object.
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      object:
        description: String representing the object's type. Objects of the same type
          share the same value.
        type: string
      source_refund:
        allOf:
        - $ref: '#/definitions/stripe.Refund'
        description: ID of the refund responsible for the transfer reversal.
      transfer:
        allOf:
        - $ref: '#/definitions/stripe.Transfer'
        description: ID of the transfer that was reversed.
    type: object
  stripe.TransferReversalList:
    properties:
      data:
        items:
          $ref: '#/definitions/stripe.TransferReversal'
        type: array
      has_more:
        type: boolean
      total_count:
        description: |-
          TotalCount is the total number of objects in the collection (beyond just
          on the current page). This is not returned in most list calls.

          Deprecated: TotalCount is only included in some legacy situations and
          not generally available anymore.
        type: integer
      url:
        type: string
    type: object
  stripe.TransferSourceType:
    enum:
    - bank_account
    - card
    - fpx
    type: string
    x-enum-varnames:
    - TransferSourceTypeBankAccount
    - TransferSourceTypeCard
    - TransferSourceTypeFPX
host: localhost:8080
info:
  contact:
    email: info@vocdoni.io
    name: API Support
    url: https://vocdoni.io
  description: API for Vocdoni SaaS Backend
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Vocdoni SaaS API
  version: "1.0"
paths:
  /auth/addresses:
    get:
      consumes:
      - application/json
      description: Get the list of organization addresses where the user has write
        access
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.OrganizationAddresses'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: No organizations found
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Get writable organization addresses
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and get a JWT token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/apicommon.UserInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Login to get a JWT token
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh the JWT token for an authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.LoginResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Refresh JWT token
      tags:
      - auth
  /census:
    post:
      consumes:
      - application/json
      description: Create a new census for an organization. Requires Manager/Admin
        role.
      parameters:
      - description: Census information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/apicommon.OrganizationCensus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.OrganizationCensus'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Create a new census
      tags:
      - census
  /census/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve census information by ID. Returns census type, organization
        address, and creation time.
      parameters:
      - description: Census ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.OrganizationCensus'
        "400":
          description: Invalid census ID
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Census not found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Get census information
      tags:
      - census
    post:
      consumes:
      - application/json
      description: Add multiple participants to a census. Requires Manager/Admin role.
      parameters:
      - description: Census ID
        in: path
        name: id
        required: true
        type: string
      - description: Process asynchronously and return job ID
        in: query
        name: async
        type: boolean
      - description: Participants to add
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/apicommon.AddParticipantsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.AddParticipantsResponse'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Census not found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Add participants to a census
      tags:
      - census
  /census/{id}/publish:
    post:
      consumes:
      - application/json
      description: Publish a census for voting. Requires Manager/Admin role. Returns
        published census with credentials.
      parameters:
      - description: Census ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.PublishedCensusResponse'
        "400":
          description: Invalid census ID
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Census not found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Publish a census for voting
      tags:
      - census
  /census/job/{jobid}:
    get:
      consumes:
      - application/json
      description: |-
        Check the progress of a job to add participants to a census. Returns the progress of the job.
        If the job is completed, the job is deleted after 60 seconds.
      parameters:
      - description: Job ID
        in: path
        name: jobid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.BulkCensusMembershipStatus'
        "400":
          description: Invalid job ID
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Job not found
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Check the progress of adding participants
      tags:
      - census
  /oauth/login:
    post:
      consumes:
      - application/json
      description: Register/Authenticate a user and get a JWT token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/apicommon.UserInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.OAuthLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Login using OAuth service
      tags:
      - auth
  /organizations:
    post:
      consumes:
      - application/json
      description: |-
        Create a new organization. If the organization is a suborganization, the parent organization must be
        specified in the request body, and the user must be an admin of the parent. If the parent organization
        is already a suborganization, an error is returned.
      parameters:
      - description: Organization information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/apicommon.OrganizationInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.OrganizationInfo'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Parent organization not found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Create a new organization
      tags:
      - organizations
  /organizations/{address}:
    get:
      consumes:
      - application/json
      description: Get information about an organization
      parameters:
      - description: Organization address
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.OrganizationInfo'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Organization not found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Get organization information
      tags:
      - organizations
    put:
      consumes:
      - application/json
      description: |-
        Update the information of an organization. Only the admin of the organization can update the information.
        Only certain fields can be updated, and they will be updated only if they are not empty.
      parameters:
      - description: Organization address
        in: path
        name: address
        required: true
        type: string
      - description: Organization information to update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/apicommon.OrganizationInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Organization not found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Update organization information
      tags:
      - organizations
  /organizations/{address}/censuses:
    get:
      consumes:
      - application/json
      description: Get the list of censuses for an organization
      parameters:
      - description: Organization address
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.OrganizationCensuses'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Organization not found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Get organization censuses
      tags:
      - organizations
  /organizations/{address}/members:
    get:
      consumes:
      - application/json
      description: Get the list of members with their roles in the organization
      parameters:
      - description: Organization address
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.OrganizationMembers'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Organization not found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Get organization members
      tags:
      - organizations
    post:
      consumes:
      - application/json
      description: |-
        Invite a new member to an organization. Only the admin of the organization can invite a new member.
        It stores the invitation in the database and sends an email to the new member with the invitation code.
      parameters:
      - description: Organization address
        in: path
        name: address
        required: true
        type: string
      - description: Invitation information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/apicommon.OrganizationInvite'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "409":
          description: User is already a member of the organization
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Invite a new member to an organization
      tags:
      - organizations
  /organizations/{address}/members/accept:
    post:
      consumes:
      - application/json
      description: |-
        Accept an invitation to an organization. It checks if the invitation is valid and not expired, and if the
        user is not already a member of the organization. If the user does not exist, it creates a new user with
        the provided information. If the user already exists and is verified, it adds the organization to the user.
      parameters:
      - description: Organization address
        in: path
        name: address
        required: true
        type: string
      - description: Invitation acceptance information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/apicommon.AcceptOrganizationInvitation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized or invalid invitation
          schema:
            $ref: '#/definitions/errors.Error'
        "409":
          description: User is already a member of the organization
          schema:
            $ref: '#/definitions/errors.Error'
        "410":
          description: Invitation expired
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Accept an invitation to an organization
      tags:
      - organizations
  /organizations/{address}/members/pending:
    get:
      consumes:
      - application/json
      description: Get the list of pending invitations for an organization
      parameters:
      - description: Organization address
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.OrganizationInviteList'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Organization not found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Get pending organization members
      tags:
      - organizations
  /organizations/{address}/participants:
    delete:
      consumes:
      - application/json
      description: Delete multiple participants from an organization. Requires Manager/Admin
        role.
      parameters:
      - description: Organization address
        in: path
        name: address
        required: true
        type: string
      - description: Participant IDs to delete
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/apicommon.DeleteParticipantsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.DeleteParticipantsResponse'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Delete organization participants
      tags:
      - organizations
    get:
      consumes:
      - application/json
      description: Retrieve all participants of an organization with pagination support
      parameters:
      - description: Organization address
        in: path
        name: address
        required: true
        type: string
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of items per page (default: 10)'
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.OrganizationParticipantsResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Get organization participants
      tags:
      - organizations
    post:
      consumes:
      - application/json
      description: Add multiple participants to an organization. Requires Manager/Admin
        role.
      parameters:
      - description: Organization address
        in: path
        name: address
        required: true
        type: string
      - description: Process asynchronously and return job ID
        in: query
        name: async
        type: boolean
      - description: Participants to add
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/apicommon.AddParticipantsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.AddParticipantsResponse'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Add participants to an organization
      tags:
      - organizations
  /organizations/{address}/participants/job/{jobid}:
    get:
      consumes:
      - application/json
      description: |-
        Check the progress of a job to add participants to an organization. Returns the progress of the job.
        If the job is completed, the job is deleted after 60 seconds.
      parameters:
      - description: Organization address
        in: path
        name: address
        required: true
        type: string
      - description: Job ID
        in: path
        name: jobid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.BulkOrgParticipantsStatus'
        "400":
          description: Invalid job ID
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Job not found
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Check the progress of adding participants
      tags:
      - organizations
  /organizations/{address}/subscription:
    get:
      consumes:
      - application/json
      description: Get the subscription information for an organization
      parameters:
      - description: Organization address
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.OrganizationSubscriptionInfo'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Organization not found or no subscription
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Get organization subscription
      tags:
      - organizations
  /organizations/roles:
    get:
      consumes:
      - application/json
      description: Get the list of available roles that can be assigned to a member
        of an organization
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.OrganizationRoleList'
      summary: Get available organization member roles
      tags:
      - organizations
  /organizations/types:
    get:
      consumes:
      - application/json
      description: Get the list of available organization types that can be assigned
        to an organization
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.OrganizationTypeList'
      summary: Get available organization types
      tags:
      - organizations
  /plans:
    get:
      consumes:
      - application/json
      description: Get the list of available subscription plans
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Plan'
            type: array
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Get all subscription plans
      tags:
      - plans
  /plans/{planID}:
    get:
      consumes:
      - application/json
      description: Get detailed information about a specific subscription plan
      parameters:
      - description: Plan ID
        in: path
        name: planID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Plan'
        "400":
          description: Invalid plan ID
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Plan not found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Get plan information
      tags:
      - plans
  /process/{processId}:
    get:
      consumes:
      - application/json
      description: Retrieve voting process information by ID. Returns process details
        including census and metadata.
      parameters:
      - description: Process ID
        in: path
        name: processId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Process'
        "400":
          description: Invalid process ID
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Process not found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Get process information
      tags:
      - process
    post:
      consumes:
      - application/json
      description: Create a new voting process. Requires Manager/Admin role.
      parameters:
      - description: Process ID
        in: path
        name: processId
        required: true
        type: string
      - description: Process creation information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/apicommon.CreateProcessRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Published census not found
          schema:
            $ref: '#/definitions/errors.Error'
        "409":
          description: Process already exists
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Create a new voting process
      tags:
      - process
  /process/{processId}/sign-info:
    post:
      consumes:
      - application/json
      description: |-
        Get the address used to sign a process. Requires a verified token. Returns the address, nullifier,
        and timestamp of the consumption.
      parameters:
      - description: Process ID
        in: path
        name: processId
        required: true
        type: string
      - description: Request with auth token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.ConsumedAddressRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ConsumedAddressResponse'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized or invalid token
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Process not found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Get the address used to sign a process
      tags:
      - process
  /process/bundle:
    post:
      consumes:
      - application/json
      description: |-
        Create a new process bundle with the specified census and optional list of processes. Requires
        Manager/Admin role for the organization that owns the census. The census root will be the same as the
        account's public key.
      parameters:
      - description: Process bundle creation information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/apicommon.CreateProcessBundleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.CreateProcessBundleResponse'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Census not found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Create a new process bundle
      tags:
      - process
  /process/bundle/{bundleId}:
    get:
      consumes:
      - application/json
      description: |-
        Retrieve process bundle information by ID. Returns bundle details including the associated census,
        census root, organization address, and list of processes.
      parameters:
      - description: Bundle ID
        in: path
        name: bundleId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.ProcessesBundle'
        "400":
          description: Invalid bundle ID
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Bundle not found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Get process bundle information
      tags:
      - process
    put:
      consumes:
      - application/json
      description: |-
        Add additional processes to an existing bundle. Requires Manager/Admin role for the organization
        that owns the bundle.
      parameters:
      - description: Bundle ID
        in: path
        name: bundleId
        required: true
        type: string
      - description: Processes to add
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.AddProcessesToBundleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.CreateProcessBundleResponse'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Bundle or census not found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Add processes to an existing bundle
      tags:
      - process
  /process/bundle/{bundleId}/{participantId}:
    get:
      consumes:
      - application/json
      description: |-
        Retrieve process information for a participant in a process bundle. Returns process details including
        the census and metadata.
      parameters:
      - description: Bundle ID
        in: path
        name: bundleId
        required: true
        type: string
      - description: Participant ID
        in: path
        name: participantId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Invalid bundle ID or participant ID
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Bundle not found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Get participant information for a process bundle
      tags:
      - process
  /process/bundle/{bundleId}/auth/{step}:
    post:
      consumes:
      - application/json
      description: |-
        Handle authentication for a process bundle. There are two steps in the authentication process:
        - Step 0: The user sends the participant number and contact information (email or phone).
        If valid, the server sends a challenge to the user with a token.
        - Step 1: The user sends the token and challenge solution back to the server.
        If valid, the token is marked as verified and returned.
      parameters:
      - description: Bundle ID
        in: path
        name: bundleId
        required: true
        type: string
      - description: Authentication step (0 or 1)
        in: path
        name: step
        required: true
        type: string
      - description: Authentication request (varies by step)
        in: body
        name: request
        required: true
        schema: {}
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.AuthResponse'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Bundle not found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Authenticate for a process bundle
      tags:
      - process
  /process/bundle/{bundleId}/sign:
    post:
      consumes:
      - application/json
      description: |-
        Sign a process in a bundle. Requires a verified token. The server signs the address with the user data
        and returns the signature. Once signed, the process is marked as consumed and cannot be signed again.
      parameters:
      - description: Bundle ID
        in: path
        name: bundleId
        required: true
        type: string
      - description: Sign request with process ID, auth token, and payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.SignRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.AuthResponse'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized or invalid token
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Bundle not found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Sign a process in a bundle
      tags:
      - process
  /storage:
    post:
      consumes:
      - multipart/form-data
      description: |-
        Upload images through a multipart form. Expects the request to contain a "file" field with one or more
        files to be uploaded.
      parameters:
      - description: Image file(s) to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: URLs of uploaded images
          schema:
            additionalProperties:
              items:
                type: string
              type: array
            type: object
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Upload images
      tags:
      - storage
  /storage/{objectName}:
    get:
      description: Download an image inline. Retrieves the object from storage and
        displays it in the browser.
      parameters:
      - description: Object name
        in: path
        name: objectName
        required: true
        type: string
      produces:
      - image/jpeg
      - image/png
      responses:
        "200":
          description: Image file
          schema:
            type: file
        "400":
          description: Invalid object name
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Download an image
      tags:
      - storage
  /subscriptions/{address}/portal:
    get:
      consumes:
      - application/json
      description: Create a Stripe customer portal session for managing subscriptions
      parameters:
      - description: Organization address
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Contains portalURL
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Organization not found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Create a subscription portal session
      tags:
      - plans
  /subscriptions/checkout:
    post:
      consumes:
      - application/json
      description: Create a new Stripe checkout session for subscription purchases
      parameters:
      - description: Checkout information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/apicommon.SubscriptionCheckout'
      produces:
      - application/json
      responses:
        "200":
          description: Contains clientSecret and sessionID
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Organization or plan not found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Create a subscription checkout session
      tags:
      - plans
  /subscriptions/checkout/{sessionID}:
    get:
      consumes:
      - application/json
      description: Retrieve the status of a Stripe checkout session
      parameters:
      - description: Checkout session ID
        in: path
        name: sessionID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/stripe.CheckoutSession'
        "400":
          description: Invalid session ID
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Get checkout session status
      tags:
      - plans
  /subscriptions/webhook:
    post:
      consumes:
      - application/json
      description: |-
        Process incoming webhook events from Stripe for subscription management. Handles subscription creation,
        updates, deletions, and payment events.
      parameters:
      - description: Stripe webhook payload
        in: body
        name: body
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Handle Stripe webhook events
      tags:
      - plans
  /transactions:
    post:
      consumes:
      - application/json
      description: Sign a transaction with the organization's private key. The user
        must be a member of the organization.
      parameters:
      - description: Transaction data to sign
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/apicommon.TransactionData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.TransactionData'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Organization not found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Sign a transaction
      tags:
      - transactions
  /transactions/message:
    post:
      consumes:
      - application/json
      description: Sign a message with the organization's private key. The user must
        have admin role for the organization.
      parameters:
      - description: Message to sign
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/apicommon.MessageSignature'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.MessageSignature'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Organization not found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Sign a message
      tags:
      - transactions
  /users:
    post:
      consumes:
      - application/json
      description: Register a new user with email, password, and personal information
      parameters:
      - description: User registration information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/apicommon.UserInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "409":
          description: User already exists
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Register a new user
      tags:
      - users
  /users/me:
    get:
      consumes:
      - application/json
      description: Get information about the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.UserInfo'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Get user information
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update information for the authenticated user
      parameters:
      - description: User information to update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/apicommon.UserInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.LoginResponse'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Update user information
      tags:
      - users
  /users/password:
    put:
      consumes:
      - application/json
      description: Update the password for the authenticated user
      parameters:
      - description: Password update information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/apicommon.UserPasswordUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized or old password does not match
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - BearerAuth: []
      summary: Update user password
      tags:
      - users
  /users/recovery:
    post:
      consumes:
      - application/json
      description: Request a password recovery code for a user
      parameters:
      - description: User email information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/apicommon.UserInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Recover user password
      tags:
      - users
  /users/reset:
    post:
      consumes:
      - application/json
      description: Reset a user's password using a verification code
      parameters:
      - description: Password reset information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/apicommon.UserPasswordReset'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized or invalid verification code
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Reset user password
      tags:
      - users
  /users/verify:
    post:
      consumes:
      - application/json
      description: Verify a user account with the verification code
      parameters:
      - description: Verification information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/apicommon.UserVerification'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.LoginResponse'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "409":
          description: User already verified
          schema:
            $ref: '#/definitions/errors.Error'
        "410":
          description: Verification code expired
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Verify user account
      tags:
      - users
  /users/verify/code:
    get:
      consumes:
      - application/json
      description: Get information about a user's verification code
      parameters:
      - description: User email
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.UserVerification'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/errors.Error'
        "409":
          description: User already verified
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Get verification code information
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Resend a verification code to the user's email
      parameters:
      - description: User email information
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/apicommon.UserVerification'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "409":
          description: User already verified or verification code still valid
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Resend verification code
      tags:
      - users
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and the JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
