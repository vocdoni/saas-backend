name: Main

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x
          cache: true
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v7
        ### golangci-lint will take much time if loading multiple linters in .golangci.yml
        with:
          version: v2.0
          args: --timeout 5m --verbose
          skip-cache: true
          only-new-issues: true

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: benjlevesque/short-sha@v3.0 # sets env.SHA to the first 7 chars of github.sha
      - name: Set up Go environment
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.x"
      - name: Tidy go module
        run: |
          go mod tidy
          if [[ $(git status --porcelain) ]]; then
            git diff
            echo
            echo "go mod tidy made these changes, please run 'go mod tidy' and include those changes in a commit"
            exit 1
          fi
      - name: Run Go test
        run: go test -v -timeout=30m ./...
                -cover -coverpkg=./... -covermode=count -coverprofile=gocoverage.txt
      - name: Run Go test -race # note that -race can easily make the crypto stuff 10x slower
        if: github.ref == 'refs/heads/stage' ||  startsWith(github.ref, 'refs/heads/release')
        run: go test -vet=off -timeout=30m -race ./...
                -cover -coverpkg=./... -covermode=atomic -coverprofile=gocoverage.txt

      - name: Store code coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: gocoverage@${{ env.SHA }}.txt
          path: gocoverage.txt

  docker-release:
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/stage' ||  startsWith(github.ref, 'refs/heads/release') ||  startsWith(github.ref, 'refs/heads/aragon')
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get short commit sha and branch name
        id: vars
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "branch_name=$(echo ${GITHUB_REF#refs/heads/} | tr '/' '-' )" >> $GITHUB_OUTPUT
      - name: Push to Docker Hub and ghcr.io
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            vocdoni/${{ github.event.repository.name }}:latest, vocdoni/${{ github.event.repository.name }}:${{ steps.vars.outputs.branch_name }},
            ghcr.io/vocdoni/${{ github.event.repository.name }}:latest, ghcr.io/vocdoni/${{ github.event.repository.name }}:${{ steps.vars.outputs.branch_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  job_gocoverage_coveralls:
    name: Publish coverage (Coveralls)
    runs-on: ubuntu-latest
    needs: [test]
    continue-on-error: true # never mark the whole CI as failed because of this job
    steps:
      - uses: actions/checkout@v4
      - uses: benjlevesque/short-sha@v3.0 # sets env.SHA to the first 7 chars of github.sha
      - uses: actions/download-artifact@v4
        with:
          name: gocoverage@${{ env.SHA }}.txt
      - uses: actions/setup-go@v5
        with:
          go-version: 1.24.x
          cache: false
      - name: Send coverage to coveralls.io
        if: ${{ always() }}
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: gocoverage.txt
          flag-name: unit